[Trace - 4:40:33 PM] Sending request 'initialize - (0)'.
Params: {
    "processId": 181217,
    "clientInfo": {
        "name": "Visual Studio Code",
        "version": "1.74.0"
    },
    "locale": "en-us",
    "rootPath": "/tmp/CES.2wjciAhRCeZf",
    "rootUri": "file:///tmp/CES.2wjciAhRCeZf",
    "capabilities": {
        "workspace": {
            "applyEdit": true,
            "workspaceEdit": {
                "documentChanges": true,
                "resourceOperations": [
                    "create",
                    "rename",
                    "delete"
                ],
                "failureHandling": "textOnlyTransactional",
                "normalizesLineEndings": true,
                "changeAnnotationSupport": {
                    "groupsOnLabel": true
                }
            },
            "configuration": true,
            "didChangeWatchedFiles": {
                "dynamicRegistration": true,
                "relativePatternSupport": true
            },
            "symbol": {
                "dynamicRegistration": true,
                "symbolKind": {
                    "valueSet": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ]
                },
                "tagSupport": {
                    "valueSet": [
                        1
                    ]
                },
                "resolveSupport": {
                    "properties": [
                        "location.range"
                    ]
                }
            },
            "codeLens": {
                "refreshSupport": true
            },
            "executeCommand": {
                "dynamicRegistration": true
            },
            "didChangeConfiguration": {
                "dynamicRegistration": true
            },
            "workspaceFolders": true,
            "semanticTokens": {
                "refreshSupport": true
            },
            "fileOperations": {
                "dynamicRegistration": true,
                "didCreate": true,
                "didRename": true,
                "didDelete": true,
                "willCreate": true,
                "willRename": true,
                "willDelete": true
            },
            "inlineValue": {
                "refreshSupport": true
            },
            "inlayHint": {
                "refreshSupport": true
            },
            "diagnostics": {
                "refreshSupport": true
            }
        },
        "textDocument": {
            "publishDiagnostics": {
                "relatedInformation": true,
                "versionSupport": false,
                "tagSupport": {
                    "valueSet": [
                        1,
                        2
                    ]
                },
                "codeDescriptionSupport": true,
                "dataSupport": true
            },
            "synchronization": {
                "dynamicRegistration": true,
                "willSave": true,
                "willSaveWaitUntil": true,
                "didSave": true
            },
            "completion": {
                "dynamicRegistration": true,
                "contextSupport": true,
                "completionItem": {
                    "snippetSupport": true,
                    "commitCharactersSupport": true,
                    "documentationFormat": [
                        "markdown",
                        "plaintext"
                    ],
                    "deprecatedSupport": true,
                    "preselectSupport": true,
                    "tagSupport": {
                        "valueSet": [
                            1
                        ]
                    },
                    "insertReplaceSupport": true,
                    "resolveSupport": {
                        "properties": [
                            "documentation",
                            "detail",
                            "additionalTextEdits"
                        ]
                    },
                    "insertTextModeSupport": {
                        "valueSet": [
                            1,
                            2
                        ]
                    },
                    "labelDetailsSupport": true
                },
                "insertTextMode": 2,
                "completionItemKind": {
                    "valueSet": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25
                    ]
                },
                "completionList": {
                    "itemDefaults": [
                        "commitCharacters",
                        "editRange",
                        "insertTextFormat",
                        "insertTextMode"
                    ]
                }
            },
            "hover": {
                "dynamicRegistration": true,
                "contentFormat": [
                    "markdown",
                    "plaintext"
                ]
            },
            "signatureHelp": {
                "dynamicRegistration": true,
                "signatureInformation": {
                    "documentationFormat": [
                        "markdown",
                        "plaintext"
                    ],
                    "parameterInformation": {
                        "labelOffsetSupport": true
                    },
                    "activeParameterSupport": true
                },
                "contextSupport": true
            },
            "definition": {
                "dynamicRegistration": true,
                "linkSupport": true
            },
            "references": {
                "dynamicRegistration": true
            },
            "documentHighlight": {
                "dynamicRegistration": true
            },
            "documentSymbol": {
                "dynamicRegistration": true,
                "symbolKind": {
                    "valueSet": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ]
                },
                "hierarchicalDocumentSymbolSupport": true,
                "tagSupport": {
                    "valueSet": [
                        1
                    ]
                },
                "labelSupport": true
            },
            "codeAction": {
                "dynamicRegistration": true,
                "isPreferredSupport": true,
                "disabledSupport": true,
                "dataSupport": true,
                "resolveSupport": {
                    "properties": [
                        "edit"
                    ]
                },
                "codeActionLiteralSupport": {
                    "codeActionKind": {
                        "valueSet": [
                            "",
                            "quickfix",
                            "refactor",
                            "refactor.extract",
                            "refactor.inline",
                            "refactor.rewrite",
                            "source",
                            "source.organizeImports"
                        ]
                    }
                },
                "honorsChangeAnnotations": false
            },
            "codeLens": {
                "dynamicRegistration": true
            },
            "formatting": {
                "dynamicRegistration": true
            },
            "rangeFormatting": {
                "dynamicRegistration": true
            },
            "onTypeFormatting": {
                "dynamicRegistration": true
            },
            "rename": {
                "dynamicRegistration": true,
                "prepareSupport": true,
                "prepareSupportDefaultBehavior": 1,
                "honorsChangeAnnotations": true
            },
            "documentLink": {
                "dynamicRegistration": true,
                "tooltipSupport": true
            },
            "typeDefinition": {
                "dynamicRegistration": true,
                "linkSupport": true
            },
            "implementation": {
                "dynamicRegistration": true,
                "linkSupport": true
            },
            "colorProvider": {
                "dynamicRegistration": true
            },
            "foldingRange": {
                "dynamicRegistration": true,
                "rangeLimit": 5000,
                "lineFoldingOnly": true,
                "foldingRangeKind": {
                    "valueSet": [
                        "comment",
                        "imports",
                        "region"
                    ]
                },
                "foldingRange": {
                    "collapsedText": false
                }
            },
            "declaration": {
                "dynamicRegistration": true,
                "linkSupport": true
            },
            "selectionRange": {
                "dynamicRegistration": true
            },
            "callHierarchy": {
                "dynamicRegistration": true
            },
            "semanticTokens": {
                "dynamicRegistration": true,
                "tokenTypes": [
                    "namespace",
                    "type",
                    "class",
                    "enum",
                    "interface",
                    "struct",
                    "typeParameter",
                    "parameter",
                    "variable",
                    "property",
                    "enumMember",
                    "event",
                    "function",
                    "method",
                    "macro",
                    "keyword",
                    "modifier",
                    "comment",
                    "string",
                    "number",
                    "regexp",
                    "operator",
                    "decorator"
                ],
                "tokenModifiers": [
                    "declaration",
                    "definition",
                    "readonly",
                    "static",
                    "deprecated",
                    "abstract",
                    "async",
                    "modification",
                    "documentation",
                    "defaultLibrary"
                ],
                "formats": [
                    "relative"
                ],
                "requests": {
                    "range": true,
                    "full": {
                        "delta": true
                    }
                },
                "multilineTokenSupport": false,
                "overlappingTokenSupport": false,
                "serverCancelSupport": true,
                "augmentsSyntaxTokens": false
            },
            "linkedEditingRange": {
                "dynamicRegistration": true
            },
            "typeHierarchy": {
                "dynamicRegistration": true
            },
            "inlineValue": {
                "dynamicRegistration": true
            },
            "inlayHint": {
                "dynamicRegistration": true,
                "resolveSupport": {
                    "properties": [
                        "tooltip",
                        "textEdits",
                        "label.tooltip",
                        "label.location",
                        "label.command"
                    ]
                }
            },
            "diagnostic": {
                "dynamicRegistration": true,
                "relatedDocumentSupport": false
            }
        },
        "window": {
            "showMessage": {
                "messageActionItem": {
                    "additionalPropertiesSupport": true
                }
            },
            "showDocument": {
                "support": true
            },
            "workDoneProgress": true
        },
        "general": {
            "staleRequestSupport": {
                "cancel": true,
                "retryOnContentModified": [
                    "textDocument/semanticTokens/full",
                    "textDocument/semanticTokens/range",
                    "textDocument/semanticTokens/full/delta"
                ]
            },
            "regularExpressions": {
                "engine": "ECMAScript",
                "version": "ES2020"
            },
            "markdown": {
                "parser": "marked",
                "version": "1.1.0",
                "allowedTags": [
                    "ul",
                    "li",
                    "p",
                    "code",
                    "blockquote",
                    "ol",
                    "h1",
                    "h2",
                    "h3",
                    "h4",
                    "h5",
                    "h6",
                    "hr",
                    "em",
                    "pre",
                    "table",
                    "thead",
                    "tbody",
                    "tr",
                    "th",
                    "td",
                    "div",
                    "del",
                    "a",
                    "strong",
                    "br",
                    "img",
                    "span"
                ]
            },
            "positionEncodings": [
                "utf-16"
            ]
        },
        "notebookDocument": {
            "synchronization": {
                "dynamicRegistration": true,
                "executionSummarySupport": true
            }
        },
        "experimental": {
            "snippetTextEdit": true,
            "codeActionGroup": true,
            "hoverActions": true,
            "serverStatusNotification": true,
            "colorDiagnosticOutput": true,
            "openServerLogs": true,
            "commands": {
                "commands": [
                    "rust-analyzer.runSingle",
                    "rust-analyzer.debugSingle",
                    "rust-analyzer.showReferences",
                    "rust-analyzer.gotoLocation",
                    "editor.action.triggerParameterHints"
                ]
            }
        }
    },
    "initializationOptions": {
        "cargoRunner": null,
        "runnableEnv": null,
        "server": {
            "path": null,
            "extraEnv": null
        },
        "trace": {
            "server": "verbose",
            "extension": false
        },
        "debug": {
            "engine": "auto",
            "sourceFileMap": {
                "/rustc/<id>": "${env:USERPROFILE}/.rustup/toolchains/<toolchain-id>/lib/rustlib/src/rust"
            },
            "openDebugPane": false,
            "engineSettings": {}
        },
        "restartServerOnConfigChange": false,
        "typing": {
            "continueCommentsOnNewline": true,
            "autoClosingAngleBrackets": {
                "enable": false
            }
        },
        "diagnostics": {
            "previewRustcOutput": false,
            "useRustcErrorCode": false,
            "disabled": [],
            "enable": true,
            "experimental": {
                "enable": false
            },
            "remapPrefix": {},
            "warningsAsHint": [],
            "warningsAsInfo": []
        },
        "discoverProjectCommand": null,
        "showUnlinkedFileNotification": true,
        "assist": {
            "emitMustUse": false,
            "expressionFillDefault": "todo"
        },
        "cachePriming": {
            "enable": true,
            "numThreads": 0
        },
        "cargo": {
            "autoreload": true,
            "buildScripts": {
                "enable": true,
                "invocationLocation": "workspace",
                "invocationStrategy": "per_workspace",
                "overrideCommand": null,
                "useRustcWrapper": true
            },
            "extraArgs": [],
            "extraEnv": {},
            "features": [],
            "noDefaultFeatures": false,
            "sysroot": "discover",
            "sysrootSrc": null,
            "target": null,
            "unsetTest": [
                "core"
            ]
        },
        "checkOnSave": true,
        "check": {
            "allTargets": true,
            "command": "check",
            "extraArgs": [],
            "extraEnv": {},
            "features": null,
            "invocationLocation": "workspace",
            "invocationStrategy": "per_workspace",
            "noDefaultFeatures": null,
            "overrideCommand": null,
            "targets": null
        },
        "completion": {
            "autoimport": {
                "enable": true
            },
            "autoself": {
                "enable": true
            },
            "callable": {
                "snippets": "fill_arguments"
            },
            "limit": null,
            "postfix": {
                "enable": true
            },
            "privateEditable": {
                "enable": false
            },
            "snippets": {
                "custom": {
                    "Arc::new": {
                        "postfix": "arc",
                        "body": "Arc::new(${receiver})",
                        "requires": "std::sync::Arc",
                        "description": "Put the expression into an `Arc`",
                        "scope": "expr"
                    },
                    "Rc::new": {
                        "postfix": "rc",
                        "body": "Rc::new(${receiver})",
                        "requires": "std::rc::Rc",
                        "description": "Put the expression into an `Rc`",
                        "scope": "expr"
                    },
                    "Box::pin": {
                        "postfix": "pinbox",
                        "body": "Box::pin(${receiver})",
                        "requires": "std::boxed::Box",
                        "description": "Put the expression into a pinned `Box`",
                        "scope": "expr"
                    },
                    "Ok": {
                        "postfix": "ok",
                        "body": "Ok(${receiver})",
                        "description": "Wrap the expression in a `Result::Ok`",
                        "scope": "expr"
                    },
                    "Err": {
                        "postfix": "err",
                        "body": "Err(${receiver})",
                        "description": "Wrap the expression in a `Result::Err`",
                        "scope": "expr"
                    },
                    "Some": {
                        "postfix": "some",
                        "body": "Some(${receiver})",
                        "description": "Wrap the expression in an `Option::Some`",
                        "scope": "expr"
                    }
                }
            }
        },
        "files": {
            "excludeDirs": [],
            "watcher": "client"
        },
        "highlightRelated": {
            "breakPoints": {
                "enable": true
            },
            "closureCaptures": {
                "enable": true
            },
            "exitPoints": {
                "enable": true
            },
            "references": {
                "enable": true
            },
            "yieldPoints": {
                "enable": true
            }
        },
        "hover": {
            "actions": {
                "debug": {
                    "enable": true
                },
                "enable": true,
                "gotoTypeDef": {
                    "enable": true
                },
                "implementations": {
                    "enable": true
                },
                "references": {
                    "enable": false
                },
                "run": {
                    "enable": true
                }
            },
            "documentation": {
                "enable": true,
                "keywords": {
                    "enable": true
                }
            },
            "links": {
                "enable": true
            },
            "memoryLayout": {
                "enable": true
            }
        },
        "imports": {
            "granularity": {
                "enforce": false,
                "group": "crate"
            },
            "group": {
                "enable": true
            },
            "merge": {
                "glob": true
            },
            "prefer": {
                "no": {
                    "std": false
                }
            },
            "prefix": "plain"
        },
        "inlayHints": {
            "bindingModeHints": {
                "enable": false
            },
            "chainingHints": {
                "enable": true
            },
            "closingBraceHints": {
                "enable": true,
                "minLines": 25
            },
            "closureCaptureHints": {
                "enable": false
            },
            "closureReturnTypeHints": {
                "enable": "never"
            },
            "closureStyle": "impl_fn",
            "discriminantHints": {
                "enable": "never"
            },
            "expressionAdjustmentHints": {
                "enable": "never",
                "hideOutsideUnsafe": false,
                "mode": "prefix"
            },
            "lifetimeElisionHints": {
                "enable": "never",
                "useParameterNames": false
            },
            "maxLength": 25,
            "parameterHints": {
                "enable": true
            },
            "reborrowHints": {
                "enable": "never"
            },
            "renderColons": true,
            "typeHints": {
                "enable": true,
                "hideClosureInitialization": false,
                "hideNamedConstructor": false
            }
        },
        "interpret": {
            "tests": false
        },
        "joinLines": {
            "joinAssignments": true,
            "joinElseIf": true,
            "removeTrailingComma": true,
            "unwrapTrivialBlock": true
        },
        "lens": {
            "debug": {
                "enable": true
            },
            "enable": true,
            "forceCustomCommands": true,
            "implementations": {
                "enable": true
            },
            "location": "above_name",
            "references": {
                "adt": {
                    "enable": false
                },
                "enumVariant": {
                    "enable": false
                },
                "method": {
                    "enable": false
                },
                "trait": {
                    "enable": false
                }
            },
            "run": {
                "enable": true
            }
        },
        "linkedProjects": [],
        "lru": {
            "capacity": null,
            "query": {
                "capacities": {}
            }
        },
        "notifications": {
            "cargoTomlNotFound": true
        },
        "numThreads": null,
        "procMacro": {
            "attributes": {
                "enable": true
            },
            "enable": true,
            "ignored": {},
            "server": null
        },
        "references": {
            "excludeImports": false
        },
        "runnables": {
            "command": null,
            "extraArgs": []
        },
        "rustc": {
            "source": null
        },
        "rustfmt": {
            "extraArgs": [],
            "overrideCommand": null,
            "rangeFormatting": {
                "enable": false
            }
        },
        "semanticHighlighting": {
            "doc": {
                "comment": {
                    "inject": {
                        "enable": true
                    }
                }
            },
            "nonStandardTokens": true,
            "operator": {
                "enable": true,
                "specialization": {
                    "enable": false
                }
            },
            "punctuation": {
                "enable": false,
                "separate": {
                    "macro": {
                        "bang": false
                    }
                },
                "specialization": {
                    "enable": false
                }
            },
            "strings": {
                "enable": true
            }
        },
        "signatureInfo": {
            "detail": "full",
            "documentation": {
                "enable": true
            }
        },
        "workspace": {
            "symbol": {
                "search": {
                    "kind": "only_types",
                    "limit": 128,
                    "scope": "workspace"
                }
            }
        }
    },
    "trace": "verbose",
    "workspaceFolders": [
        {
            "uri": "file:///tmp/CES.2wjciAhRCeZf",
            "name": "CES.2wjciAhRCeZf"
        }
    ]
}


[Trace - 4:40:33 PM] Received response 'initialize - (0)' in 5ms.
Result: {
    "capabilities": {
        "positionEncoding": "utf-16",
        "textDocumentSync": {
            "openClose": true,
            "change": 2,
            "save": {}
        },
        "selectionRangeProvider": true,
        "hoverProvider": true,
        "completionProvider": {
            "resolveProvider": true,
            "triggerCharacters": [
                ":",
                ".",
                "'",
                "("
            ],
            "completionItem": {
                "labelDetailsSupport": true
            }
        },
        "signatureHelpProvider": {
            "triggerCharacters": [
                "(",
                ",",
                "<"
            ]
        },
        "definitionProvider": true,
        "typeDefinitionProvider": true,
        "implementationProvider": true,
        "referencesProvider": true,
        "documentHighlightProvider": true,
        "documentSymbolProvider": true,
        "workspaceSymbolProvider": true,
        "codeActionProvider": {
            "codeActionKinds": [
                "",
                "quickfix",
                "refactor",
                "refactor.extract",
                "refactor.inline",
                "refactor.rewrite"
            ],
            "resolveProvider": true
        },
        "codeLensProvider": {
            "resolveProvider": true
        },
        "documentFormattingProvider": true,
        "documentRangeFormattingProvider": false,
        "documentOnTypeFormattingProvider": {
            "firstTriggerCharacter": "=",
            "moreTriggerCharacter": [
                ".",
                ">",
                "{",
                "<"
            ]
        },
        "renameProvider": {
            "prepareProvider": true
        },
        "foldingRangeProvider": true,
        "declarationProvider": true,
        "workspace": {
            "workspaceFolders": {
                "supported": true,
                "changeNotifications": true
            },
            "fileOperations": {
                "willRename": {
                    "filters": [
                        {
                            "scheme": "file",
                            "pattern": {
                                "glob": "**/*.rs",
                                "matches": "file"
                            }
                        },
                        {
                            "scheme": "file",
                            "pattern": {
                                "glob": "**",
                                "matches": "folder"
                            }
                        }
                    ]
                }
            }
        },
        "callHierarchyProvider": true,
        "semanticTokensProvider": {
            "legend": {
                "tokenTypes": [
                    "comment",
                    "decorator",
                    "enumMember",
                    "enum",
                    "function",
                    "interface",
                    "keyword",
                    "macro",
                    "method",
                    "namespace",
                    "number",
                    "operator",
                    "parameter",
                    "property",
                    "string",
                    "struct",
                    "typeParameter",
                    "variable",
                    "angle",
                    "arithmetic",
                    "attribute",
                    "attributeBracket",
                    "bitwise",
                    "boolean",
                    "brace",
                    "bracket",
                    "builtinAttribute",
                    "builtinType",
                    "character",
                    "colon",
                    "comma",
                    "comparison",
                    "constParameter",
                    "derive",
                    "deriveHelper",
                    "dot",
                    "escapeSequence",
                    "formatSpecifier",
                    "generic",
                    "label",
                    "lifetime",
                    "logical",
                    "macroBang",
                    "parenthesis",
                    "punctuation",
                    "selfKeyword",
                    "selfTypeKeyword",
                    "semicolon",
                    "typeAlias",
                    "toolModule",
                    "union",
                    "unresolvedReference"
                ],
                "tokenModifiers": [
                    "documentation",
                    "declaration",
                    "static",
                    "defaultLibrary",
                    "async",
                    "attribute",
                    "callable",
                    "constant",
                    "consuming",
                    "controlFlow",
                    "crateRoot",
                    "injected",
                    "intraDocLink",
                    "library",
                    "macro",
                    "mutable",
                    "public",
                    "reference",
                    "trait",
                    "unsafe"
                ]
            },
            "range": true,
            "full": {
                "delta": true
            }
        },
        "inlayHintProvider": {
            "resolveProvider": true
        },
        "experimental": {
            "externalDocs": true,
            "hoverRange": true,
            "joinLines": true,
            "matchingBrace": true,
            "moveItem": true,
            "onEnter": true,
            "openCargoToml": true,
            "parentModule": true,
            "runnables": {
                "kinds": [
                    "cargo"
                ]
            },
            "ssr": true,
            "workspaceSymbolScopeKindFiltering": true
        }
    },
    "serverInfo": {
        "name": "rust-analyzer",
        "version": "0.3.1524-standalone"
    }
}


[Trace - 4:40:33 PM] Sending notification 'initialized'.
Params: {}


[Trace - 4:40:33 PM] Sending notification 'textDocument/didOpen'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
        "languageId": "rust",
        "version": 1,
        "text": "use core::fmt;\nuse std::collections::HashSet;\n\n#[derive(Debug, Clone)]\npub struct Options {\n    options: HashSet<String>,\n    lastpos: u64,\n    messages: Vec<String>,\n    source: String,\n}\n\nimpl Options {\n    pub fn new(source: String) -> Self {\n        Self {\n            options: HashSet::new(),\n            lastpos: 0,\n            messages: vec![],\n            source,\n        }\n    }\n\n    pub fn message(mut self, msg: impl AsRef<str>) -> Self {\n        self.messages.push(msg.as_ref().to_string());\n        self\n    }\n\n    pub fn pos(mut self, pos: u64) -> Self {\n        if pos > self.lastpos {\n            self.lastpos = pos;\n        }\n        self\n    }\n\n    pub fn merge(mut self, other: Options) -> Self {\n        for i in other.options {\n            self = self.add_str(i);\n        }\n\n        self\n    }\n\n    pub fn add(mut self, value: char) -> Self {\n        self.options.insert(value.to_string());\n        self\n    }\n\n    pub fn add_str(mut self, value: impl AsRef<str>) -> Self {\n        self.options.insert(value.as_ref().to_string());\n        self\n        // THIS IS JUST A VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY LONG LINE\n    }\n}\n\nimpl fmt::Display for Options {\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n        writeln!(f, \"{}\", self.source)?;\n        writeln!(f, \"{}^\", \" \".repeat(self.lastpos as usize))?;\n\n        if !self.options.is_empty() {\n            writeln!(f, \"An error occurred: unexpected character.\")?;\n            write!(f, \"Expected any of: [\")?;\n            for (index, i) in self.options.iter().enumerate() {\n                write!(f, \"{}\", i)?;\n\n                if index != self.options.len() - 1 {\n                    write!(f, \", \")?;\n                }\n            }\n            writeln!(f, \"]\")?;\n            writeln!(f)?;\n        }\n\n        for i in &self.messages {\n            writeln!(f, \"{}\", i)?;\n        }\n\n        Ok(())\n    }\n}\n"
    }
}


[Trace - 4:40:33 PM] Received notification 'experimental/serverStatus'.
Params: {
    "health": "ok",
    "quiescent": false,
    "message": null
}


[Trace - 4:40:33 PM] Received request 'client/registerCapability - (0)'.
Params: {
    "registrations": [
        {
            "id": "textDocument/didSave",
            "method": "textDocument/didSave",
            "registerOptions": {
                "includeText": false,
                "documentSelector": [
                    {
                        "pattern": "**/*.rs"
                    },
                    {
                        "pattern": "**/Cargo.toml"
                    },
                    {
                        "pattern": "**/Cargo.lock"
                    }
                ]
            }
        }
    ]
}


[Trace - 4:40:33 PM] Sending response 'client/registerCapability - (0)'. Processing request took 0ms
No result returned.


[Trace - 4:40:33 PM] Received request 'window/workDoneProgress/create - (1)'.
Params: {
    "token": "rustAnalyzer/Fetching"
}


[Trace - 4:40:33 PM] Sending response 'window/workDoneProgress/create - (1)'. Processing request took 0ms
No result returned.


[Trace - 4:40:33 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "begin",
        "title": "Fetching",
        "cancellable": false
    }
}


[Trace - 4:40:33 PM] Sending request 'textDocument/documentSymbol - (1)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    }
}


[Trace - 4:40:33 PM] Sending request 'textDocument/codeAction - (2)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 0,
            "character": 0
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 4:40:33 PM] Sending request 'textDocument/inlayHint - (3)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 79,
            "character": 0
        }
    }
}


[Trace - 4:40:33 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "metadata"
    }
}


[Trace - 4:40:33 PM] Received response 'textDocument/documentSymbol - (1)' in 5ms.
Result: [
    {
        "name": "Options",
        "kind": 23,
        "tags": [],
        "deprecated": false,
        "range": {
            "start": {
                "line": 3,
                "character": 0
            },
            "end": {
                "line": 9,
                "character": 1
            }
        },
        "selectionRange": {
            "start": {
                "line": 4,
                "character": 11
            },
            "end": {
                "line": 4,
                "character": 18
            }
        },
        "children": [
            {
                "name": "options",
                "detail": "HashSet<String>",
                "kind": 8,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 5,
                        "character": 4
                    },
                    "end": {
                        "line": 5,
                        "character": 28
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 5,
                        "character": 4
                    },
                    "end": {
                        "line": 5,
                        "character": 11
                    }
                }
            },
            {
                "name": "lastpos",
                "detail": "u64",
                "kind": 8,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 6,
                        "character": 4
                    },
                    "end": {
                        "line": 6,
                        "character": 16
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 6,
                        "character": 4
                    },
                    "end": {
                        "line": 6,
                        "character": 11
                    }
                }
            },
            {
                "name": "messages",
                "detail": "Vec<String>",
                "kind": 8,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 7,
                        "character": 4
                    },
                    "end": {
                        "line": 7,
                        "character": 25
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 7,
                        "character": 4
                    },
                    "end": {
                        "line": 7,
                        "character": 12
                    }
                }
            },
            {
                "name": "source",
                "detail": "String",
                "kind": 8,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 8,
                        "character": 4
                    },
                    "end": {
                        "line": 8,
                        "character": 18
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 8,
                        "character": 4
                    },
                    "end": {
                        "line": 8,
                        "character": 10
                    }
                }
            }
        ]
    },
    {
        "name": "impl Options",
        "kind": 19,
        "tags": [],
        "deprecated": false,
        "range": {
            "start": {
                "line": 11,
                "character": 0
            },
            "end": {
                "line": 51,
                "character": 1
            }
        },
        "selectionRange": {
            "start": {
                "line": 11,
                "character": 5
            },
            "end": {
                "line": 11,
                "character": 12
            }
        },
        "children": [
            {
                "name": "new",
                "detail": "fn(source: String) -> Self",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 12,
                        "character": 4
                    },
                    "end": {
                        "line": 19,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 12,
                        "character": 11
                    },
                    "end": {
                        "line": 12,
                        "character": 14
                    }
                }
            },
            {
                "name": "message",
                "detail": "fn(mut self, msg: impl AsRef<str>) -> Self",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 21,
                        "character": 4
                    },
                    "end": {
                        "line": 24,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 21,
                        "character": 11
                    },
                    "end": {
                        "line": 21,
                        "character": 18
                    }
                }
            },
            {
                "name": "pos",
                "detail": "fn(mut self, pos: u64) -> Self",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 26,
                        "character": 4
                    },
                    "end": {
                        "line": 31,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 26,
                        "character": 11
                    },
                    "end": {
                        "line": 26,
                        "character": 14
                    }
                }
            },
            {
                "name": "merge",
                "detail": "fn(mut self, other: Options) -> Self",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 33,
                        "character": 4
                    },
                    "end": {
                        "line": 39,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 33,
                        "character": 11
                    },
                    "end": {
                        "line": 33,
                        "character": 16
                    }
                }
            },
            {
                "name": "add",
                "detail": "fn(mut self, value: char) -> Self",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 41,
                        "character": 4
                    },
                    "end": {
                        "line": 44,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 41,
                        "character": 11
                    },
                    "end": {
                        "line": 41,
                        "character": 14
                    }
                }
            },
            {
                "name": "add_str",
                "detail": "fn(mut self, value: impl AsRef<str>) -> Self",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 46,
                        "character": 4
                    },
                    "end": {
                        "line": 50,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 46,
                        "character": 11
                    },
                    "end": {
                        "line": 46,
                        "character": 18
                    }
                }
            }
        ]
    },
    {
        "name": "impl fmt::Display for Options",
        "kind": 19,
        "tags": [],
        "deprecated": false,
        "range": {
            "start": {
                "line": 53,
                "character": 0
            },
            "end": {
                "line": 78,
                "character": 1
            }
        },
        "selectionRange": {
            "start": {
                "line": 53,
                "character": 22
            },
            "end": {
                "line": 53,
                "character": 29
            }
        },
        "children": [
            {
                "name": "fmt",
                "detail": "fn(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 54,
                        "character": 4
                    },
                    "end": {
                        "line": 77,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 54,
                        "character": 7
                    },
                    "end": {
                        "line": 54,
                        "character": 10
                    }
                }
            }
        ]
    }
]


[Trace - 4:40:33 PM] Received response 'textDocument/codeAction - (2)' in 6ms.
Result: [
    {
        "title": "Change visibility to pub(crate)",
        "kind": "refactor.rewrite",
        "data": {
            "codeActionParams": {
                "textDocument": {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
                },
                "range": {
                    "start": {
                        "line": 0,
                        "character": 0
                    },
                    "end": {
                        "line": 0,
                        "character": 0
                    }
                },
                "context": {
                    "diagnostics": [],
                    "triggerKind": 2
                }
            },
            "id": "change_visibility:RefactorRewrite:0"
        }
    }
]


[Trace - 4:40:33 PM] Received response 'textDocument/inlayHint - (3)' in 6ms.
Result: []


[Trace - 4:40:33 PM] Sending request 'textDocument/foldingRange - (4)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    }
}


[Trace - 4:40:33 PM] Sending request 'textDocument/semanticTokens/full - (5)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    }
}


[Trace - 4:40:33 PM] Received response 'textDocument/semanticTokens/full - (5)' in 1ms.
Result: {
    "resultId": "1",
    "data": []
}


[Trace - 4:40:33 PM] Received response 'textDocument/foldingRange - (4)' in 2ms.
Result: [
    {
        "startLine": 0,
        "endLine": 1,
        "kind": "imports"
    },
    {
        "startLine": 4,
        "endLine": 9
    },
    {
        "startLine": 11,
        "endLine": 51
    },
    {
        "startLine": 12,
        "endLine": 19
    },
    {
        "startLine": 13,
        "endLine": 18
    },
    {
        "startLine": 21,
        "endLine": 24
    },
    {
        "startLine": 26,
        "endLine": 31
    },
    {
        "startLine": 27,
        "endLine": 29
    },
    {
        "startLine": 33,
        "endLine": 39
    },
    {
        "startLine": 34,
        "endLine": 36
    },
    {
        "startLine": 41,
        "endLine": 44
    },
    {
        "startLine": 46,
        "endLine": 50
    },
    {
        "startLine": 53,
        "endLine": 78
    },
    {
        "startLine": 54,
        "endLine": 77
    },
    {
        "startLine": 58,
        "endLine": 70
    },
    {
        "startLine": 61,
        "endLine": 67
    },
    {
        "startLine": 64,
        "endLine": 66
    },
    {
        "startLine": 72,
        "endLine": 74
    }
]


[Trace - 4:40:34 PM] Sending request 'textDocument/codeLens - (6)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    }
}


[Trace - 4:40:34 PM] Received response 'textDocument/codeLens - (6)' in 0ms.
Result: []


[Trace - 4:40:34 PM] Received request 'client/registerCapability - (2)'.
Params: {
    "registrations": [
        {
            "id": "workspace/didChangeWatchedFiles",
            "method": "workspace/didChangeWatchedFiles",
            "registerOptions": {
                "watchers": [
                    {
                        "globPattern": "/tmp/CES.2wjciAhRCeZf/**/*.rs"
                    },
                    {
                        "globPattern": "/tmp/CES.2wjciAhRCeZf/**/Cargo.toml"
                    },
                    {
                        "globPattern": "/tmp/CES.2wjciAhRCeZf/**/Cargo.lock"
                    }
                ]
            }
        }
    ]
}


[Trace - 4:40:34 PM] Sending response 'client/registerCapability - (2)'. Processing request took 0ms
No result returned.


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:34 PM] Received request 'window/workDoneProgress/create - (3)'.
Params: {
    "token": "rustAnalyzer/Roots Scanned"
}


[Trace - 4:40:34 PM] Sending response 'window/workDoneProgress/create - (3)'. Processing request took 0ms
No result returned.


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Roots Scanned",
    "value": {
        "kind": "begin",
        "title": "Roots Scanned",
        "cancellable": false,
        "message": "0/2",
        "percentage": 0
    }
}


[Trace - 4:40:34 PM] Received request 'window/workDoneProgress/create - (4)'.
Params: {
    "token": "rustAnalyzer/Fetching"
}


[Trace - 4:40:34 PM] Sending response 'window/workDoneProgress/create - (4)'. Processing request took 0ms
No result returned.


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "begin",
        "title": "Fetching",
        "cancellable": false
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "metadata"
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Roots Scanned",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "1/2",
        "percentage": 50
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Roots Scanned",
    "value": {
        "kind": "end",
        "message": "2/2"
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:34 PM] Received request 'workspace/semanticTokens/refresh - (5)'.
[Trace - 4:40:34 PM] Sending response 'workspace/semanticTokens/refresh - (5)'. Processing request took 0ms
No result returned.


[Trace - 4:40:34 PM] Received request 'workspace/codeLens/refresh - (6)'.
[Trace - 4:40:34 PM] Sending response 'workspace/codeLens/refresh - (6)'. Processing request took 0ms
No result returned.


[Trace - 4:40:34 PM] Received request 'workspace/inlayHint/refresh - (7)'.
[Trace - 4:40:34 PM] Sending response 'workspace/inlayHint/refresh - (7)'. Processing request took 1ms
No result returned.


[Trace - 4:40:34 PM] Received request 'window/workDoneProgress/create - (8)'.
Params: {
    "token": "rustAnalyzer/Fetching"
}


[Trace - 4:40:34 PM] Sending response 'window/workDoneProgress/create - (8)'. Processing request took 0ms
No result returned.


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "begin",
        "title": "Fetching",
        "cancellable": false
    }
}


[Trace - 4:40:34 PM] Sending request 'textDocument/semanticTokens/full/delta - (7)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "previousResultId": "1"
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "metadata"
    }
}


[Trace - 4:40:34 PM] Sending request 'textDocument/codeAction - (8)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 20,
            "character": 0
        },
        "end": {
            "line": 36,
            "character": 9
        }
    },
    "context": {
        "diagnostics": [
            {
                "range": {
                    "start": {
                        "line": 21,
                        "character": 11
                    },
                    "end": {
                        "line": 21,
                        "character": 18
                    }
                },
                "message": "warning: method `message` is never used",
                "severity": 2
            },
            {
                "range": {
                    "start": {
                        "line": 26,
                        "character": 11
                    },
                    "end": {
                        "line": 26,
                        "character": 14
                    }
                },
                "message": "warning: method `pos` is never used",
                "severity": 2
            },
            {
                "range": {
                    "start": {
                        "line": 33,
                        "character": 11
                    },
                    "end": {
                        "line": 33,
                        "character": 16
                    }
                },
                "message": "warning: method `merge` is never used",
                "severity": 2
            }
        ],
        "triggerKind": 2
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:34 PM] Received request 'workspace/semanticTokens/refresh - (9)'.
[Trace - 4:40:34 PM] Sending response 'workspace/semanticTokens/refresh - (9)'. Processing request took 0ms
No result returned.


[Trace - 4:40:34 PM] Received request 'workspace/codeLens/refresh - (10)'.
[Trace - 4:40:34 PM] Sending response 'workspace/codeLens/refresh - (10)'. Processing request took 0ms
No result returned.


[Trace - 4:40:34 PM] Received request 'workspace/inlayHint/refresh - (11)'.
[Trace - 4:40:34 PM] Sending response 'workspace/inlayHint/refresh - (11)'. Processing request took 1ms
No result returned.


[Trace - 4:40:34 PM] Received request 'window/workDoneProgress/create - (12)'.
Params: {
    "token": "rustAnalyzer/Building"
}


[Trace - 4:40:34 PM] Sending response 'window/workDoneProgress/create - (12)'. Processing request took 0ms
No result returned.


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "begin",
        "title": "Building",
        "cancellable": false
    }
}


[Trace - 4:40:34 PM] Received request 'window/workDoneProgress/create - (13)'.
Params: {
    "token": "rustAnalyzer/Loading"
}


[Trace - 4:40:34 PM] Sending response 'window/workDoneProgress/create - (13)'. Processing request took 0ms
No result returned.


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Loading",
    "value": {
        "kind": "begin",
        "title": "Loading",
        "cancellable": false
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Loading",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "building proc-macros: code-exploration-services"
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "building proc-macros: code-exploration-services"
    }
}


[Trace - 4:40:34 PM] Received request 'client/registerCapability - (14)'.
Params: {
    "registrations": [
        {
            "id": "workspace/didChangeWatchedFiles",
            "method": "workspace/didChangeWatchedFiles",
            "registerOptions": {
                "watchers": [
                    {
                        "globPattern": "/tmp/CES.2wjciAhRCeZf/**/*.rs"
                    },
                    {
                        "globPattern": "/tmp/CES.2wjciAhRCeZf/**/Cargo.toml"
                    },
                    {
                        "globPattern": "/tmp/CES.2wjciAhRCeZf/**/Cargo.lock"
                    }
                ]
            }
        }
    ]
}


[Trace - 4:40:34 PM] Sending response 'client/registerCapability - (14)'. Processing request took 1ms
No result returned.


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:34 PM] Received request 'window/workDoneProgress/create - (15)'.
Params: {
    "token": "rustAnalyzer/Loading"
}


[Trace - 4:40:34 PM] Sending response 'window/workDoneProgress/create - (15)'. Processing request took 0ms
No result returned.


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Loading",
    "value": {
        "kind": "begin",
        "title": "Loading",
        "cancellable": false
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Loading",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:34 PM] Received request 'window/workDoneProgress/create - (16)'.
Params: {
    "token": "rustAnalyzer/Roots Scanned"
}


[Trace - 4:40:34 PM] Sending response 'window/workDoneProgress/create - (16)'. Processing request took 0ms
No result returned.


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Roots Scanned",
    "value": {
        "kind": "begin",
        "title": "Roots Scanned",
        "cancellable": false,
        "message": "0/2",
        "percentage": 0
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Roots Scanned",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "1/2",
        "percentage": 50
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Roots Scanned",
    "value": {
        "kind": "end",
        "message": "2/2"
    }
}


[Trace - 4:40:34 PM] Received request 'workspace/semanticTokens/refresh - (17)'.
[Trace - 4:40:34 PM] Sending response 'workspace/semanticTokens/refresh - (17)'. Processing request took 1ms
No result returned.


[Trace - 4:40:34 PM] Received request 'workspace/codeLens/refresh - (18)'.
[Trace - 4:40:34 PM] Sending response 'workspace/codeLens/refresh - (18)'. Processing request took 0ms
No result returned.


[Trace - 4:40:34 PM] Received request 'workspace/inlayHint/refresh - (19)'.
[Trace - 4:40:34 PM] Sending response 'workspace/inlayHint/refresh - (19)'. Processing request took 0ms
No result returned.


[Trace - 4:40:34 PM] Received notification 'experimental/serverStatus'.
Params: {
    "health": "ok",
    "quiescent": true,
    "message": null
}


[Trace - 4:40:34 PM] Received request 'window/workDoneProgress/create - (20)'.
Params: {
    "token": "rustAnalyzer/Indexing"
}


[Trace - 4:40:34 PM] Sending response 'window/workDoneProgress/create - (20)'. Processing request took 1ms
No result returned.


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "begin",
        "title": "Indexing",
        "cancellable": false,
        "percentage": 0
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "0/5 (core + 1 more)",
        "percentage": 0
    }
}


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "1/5 (core)",
        "percentage": 20
    }
}


[Trace - 4:40:34 PM] Received request 'window/workDoneProgress/create - (21)'.
Params: {
    "token": "rust-analyzer/flycheck/0"
}


[Trace - 4:40:34 PM] Sending response 'window/workDoneProgress/create - (21)'. Processing request took 0ms
No result returned.


[Trace - 4:40:34 PM] Received notification '$/progress'.
Params: {
    "token": "rust-analyzer/flycheck/0",
    "value": {
        "kind": "begin",
        "title": "cargo check",
        "cancellable": true
    }
}


[Trace - 4:40:35 PM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 12,
                    "character": 11
                },
                "end": {
                    "line": 12,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "associated function `new` is never used\n`#[warn(dead_code)]` on by default",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `new` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:13:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(source: String) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 21,
                    "character": 11
                },
                "end": {
                    "line": 21,
                    "character": 18
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `message` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `message` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:22:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn message(mut self, msg: impl AsRef<str>) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 26,
                    "character": 11
                },
                "end": {
                    "line": 26,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `pos` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `pos` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:27:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn pos(mut self, pos: u64) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 33,
                    "character": 11
                },
                "end": {
                    "line": 33,
                    "character": 16
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `merge` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `merge` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:34:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn merge(mut self, other: Options) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 41,
                    "character": 11
                },
                "end": {
                    "line": 41,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `add` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `add` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:42:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add(mut self, value: char) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 46,
                    "character": 11
                },
                "end": {
                    "line": 46,
                    "character": 18
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `add_str` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `add_str` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:47:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add_str(mut self, value: impl AsRef<str>) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"
            }
        }
    ],
    "version": 1
}


[Trace - 4:40:35 PM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/main.rs",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 1,
                    "character": 9
                },
                "end": {
                    "line": 1,
                    "character": 9
                }
            },
            "severity": 1,
            "code": "E0601",
            "codeDescription": {
                "href": "https://doc.rust-lang.org/error-index.html#E0601"
            },
            "source": "rustc",
            "message": "`main` function not found in crate `code_exploration_services`\nconsider adding a `main` function to `src/main.rs`",
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[38;5;9merror[E0601]\u001b[0m\u001b[0m\u001b[1m: `main` function not found in crate `code_exploration_services`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:2:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmod test;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mconsider adding a `main` function to `src/main.rs`\u001b[0m\n\n"
            }
        }
    ]
}


[Trace - 4:40:35 PM] Sending request 'textDocument/codeLens - (9)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    }
}


[Trace - 4:40:35 PM] Received notification '$/progress'.
Params: {
    "token": "rust-analyzer/flycheck/0",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:35 PM] Sending notification '$/cancelRequest'.
Params: {
    "id": 8
}


[Trace - 4:40:35 PM] Sending request 'textDocument/codeAction - (10)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 20,
            "character": 0
        },
        "end": {
            "line": 36,
            "character": 9
        }
    },
    "context": {
        "diagnostics": [
            {
                "range": {
                    "start": {
                        "line": 21,
                        "character": 11
                    },
                    "end": {
                        "line": 21,
                        "character": 18
                    }
                },
                "message": "warning: method `message` is never used",
                "severity": 2
            },
            {
                "range": {
                    "start": {
                        "line": 26,
                        "character": 11
                    },
                    "end": {
                        "line": 26,
                        "character": 14
                    }
                },
                "message": "warning: method `pos` is never used",
                "severity": 2
            },
            {
                "range": {
                    "start": {
                        "line": 33,
                        "character": 11
                    },
                    "end": {
                        "line": 33,
                        "character": 16
                    }
                },
                "message": "warning: method `merge` is never used",
                "severity": 2
            },
            {
                "range": {
                    "start": {
                        "line": 21,
                        "character": 11
                    },
                    "end": {
                        "line": 21,
                        "character": 18
                    }
                },
                "message": "method `message` is never used",
                "data": {
                    "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `message` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:22:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn message(mut self, msg: impl AsRef<str>) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"
                },
                "code": "Click for full compiler diagnostic",
                "codeDescription": {
                    "href": "rust-analyzer-diagnostics-view:/diagnostic%20message%20%5B1%5D?1#file%3A%2F%2F%2Ftmp%2FCES.2wjciAhRCeZf%2Fsrc%2Ftest.rs"
                },
                "severity": 2,
                "tags": [
                    1
                ],
                "source": "rustc"
            },
            {
                "range": {
                    "start": {
                        "line": 26,
                        "character": 11
                    },
                    "end": {
                        "line": 26,
                        "character": 14
                    }
                },
                "message": "method `pos` is never used",
                "data": {
                    "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `pos` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:27:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn pos(mut self, pos: u64) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"
                },
                "code": "Click for full compiler diagnostic",
                "codeDescription": {
                    "href": "rust-analyzer-diagnostics-view:/diagnostic%20message%20%5B2%5D?2#file%3A%2F%2F%2Ftmp%2FCES.2wjciAhRCeZf%2Fsrc%2Ftest.rs"
                },
                "severity": 2,
                "tags": [
                    1
                ],
                "source": "rustc"
            },
            {
                "range": {
                    "start": {
                        "line": 33,
                        "character": 11
                    },
                    "end": {
                        "line": 33,
                        "character": 16
                    }
                },
                "message": "method `merge` is never used",
                "data": {
                    "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `merge` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:34:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn merge(mut self, other: Options) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"
                },
                "code": "Click for full compiler diagnostic",
                "codeDescription": {
                    "href": "rust-analyzer-diagnostics-view:/diagnostic%20message%20%5B3%5D?3#file%3A%2F%2F%2Ftmp%2FCES.2wjciAhRCeZf%2Fsrc%2Ftest.rs"
                },
                "severity": 2,
                "tags": [
                    1
                ],
                "source": "rustc"
            }
        ],
        "triggerKind": 2
    }
}


[Trace - 4:40:35 PM] Received response 'textDocument/codeAction - (8)' in 769ms. Request failed: canceled by client (-32800).
[Trace - 4:40:36 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "2/5 (alloc)",
        "percentage": 40
    }
}


[Trace - 4:40:37 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "percentage": 60
    }
}


[Trace - 4:40:37 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "3/5 (std)",
        "percentage": 60
    }
}


[Trace - 4:40:37 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "percentage": 80
    }
}


[Trace - 4:40:37 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "4/5 (proc_macro)",
        "percentage": 80
    }
}


[Trace - 4:40:37 PM] Received response 'textDocument/codeLens - (9)' in 2171ms.
Result: [
    {
        "range": {
            "start": {
                "line": 4,
                "character": 11
            },
            "end": {
                "line": 4,
                "character": 18
            }
        },
        "data": {
            "version": 1,
            "kind": {
                "impls": {
                    "textDocument": {
                        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
                    },
                    "position": {
                        "line": 4,
                        "character": 11
                    }
                }
            }
        }
    }
]


[Trace - 4:40:37 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "percentage": 100
    }
}


[Trace - 4:40:37 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:37 PM] Sending request 'textDocument/inlayHint - (11)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 79,
            "character": 0
        }
    }
}


[Trace - 4:40:37 PM] Sending request 'codeLens/resolve - (12)'.
Params: {
    "range": {
        "start": {
            "line": 4,
            "character": 11
        },
        "end": {
            "line": 4,
            "character": 18
        }
    },
    "data": {
        "version": 1,
        "kind": {
            "impls": {
                "textDocument": {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
                },
                "position": {
                    "line": 4,
                    "character": 11
                }
            }
        }
    }
}


[Trace - 4:40:38 PM] Received response 'codeLens/resolve - (12)' in 404ms.
Result: {
    "range": {
        "start": {
            "line": 4,
            "character": 11
        },
        "end": {
            "line": 4,
            "character": 18
        }
    },
    "command": {
        "title": "4 implementations",
        "command": "rust-analyzer.showReferences",
        "arguments": [
            "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
            {
                "line": 4,
                "character": 11
            },
            [
                {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
                    "range": {
                        "start": {
                            "line": 11,
                            "character": 0
                        },
                        "end": {
                            "line": 51,
                            "character": 1
                        }
                    }
                },
                {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
                    "range": {
                        "start": {
                            "line": 3,
                            "character": 0
                        },
                        "end": {
                            "line": 3,
                            "character": 23
                        }
                    }
                },
                {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
                    "range": {
                        "start": {
                            "line": 53,
                            "character": 0
                        },
                        "end": {
                            "line": 78,
                            "character": 1
                        }
                    }
                },
                {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
                    "range": {
                        "start": {
                            "line": 3,
                            "character": 0
                        },
                        "end": {
                            "line": 3,
                            "character": 23
                        }
                    }
                }
            ]
        ]
    },
    "data": {
        "version": 1,
        "kind": {
            "impls": {
                "textDocument": {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
                },
                "position": {
                    "line": 4,
                    "character": 11
                }
            }
        }
    }
}


[Trace - 4:40:38 PM] Received response 'textDocument/semanticTokens/full/delta - (7)' in 4108ms.
Result: {
    "resultId": "2",
    "data": [
        0,
        0,
        3,
        6,
        0,
        0,
        4,
        4,
        9,
        9224,
        0,
        4,
        2,
        11,
        0,
        0,
        2,
        3,
        9,
        8200,
        1,
        0,
        3,
        6,
        0,
        0,
        4,
        3,
        9,
        9224,
        0,
        3,
        2,
        11,
        0,
        0,
        2,
        11,
        9,
        8200,
        0,
        11,
        2,
        11,
        0,
        0,
        2,
        7,
        15,
        8200,
        2,
        0,
        1,
        21,
        32,
        0,
        1,
        1,
        21,
        32,
        0,
        1,
        6,
        1,
        8232,
        0,
        7,
        5,
        33,
        8232,
        0,
        7,
        5,
        33,
        8232,
        0,
        6,
        1,
        21,
        32,
        1,
        0,
        3,
        6,
        0,
        0,
        4,
        6,
        6,
        0,
        0,
        7,
        7,
        15,
        65538,
        1,
        4,
        7,
        13,
        2,
        0,
        9,
        7,
        15,
        8200,
        0,
        8,
        6,
        15,
        8200,
        1,
        4,
        7,
        13,
        2,
        0,
        9,
        3,
        27,
        0,
        1,
        4,
        8,
        13,
        2,
        0,
        10,
        3,
        15,
        8200,
        0,
        4,
        6,
        15,
        8200,
        1,
        4,
        6,
        13,
        2,
        0,
        8,
        6,
        15,
        8200,
        3,
        0,
        4,
        6,
        0,
        0,
        5,
        7,
        15,
        65536,
        1,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        65542,
        0,
        4,
        6,
        12,
        2,
        0,
        8,
        6,
        15,
        8200,
        0,
        8,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        46,
        0,
        1,
        12,
        7,
        13,
        0,
        0,
        9,
        7,
        15,
        8200,
        0,
        7,
        2,
        11,
        0,
        0,
        2,
        3,
        8,
        8204,
        1,
        12,
        7,
        13,
        0,
        0,
        9,
        1,
        10,
        0,
        1,
        12,
        8,
        13,
        0,
        0,
        10,
        3,
        7,
        8200,
        0,
        3,
        1,
        7,
        0,
        1,
        12,
        6,
        13,
        0,
        4,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        7,
        8,
        65794,
        0,
        8,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        3,
        12,
        2,
        0,
        5,
        4,
        6,
        0,
        0,
        5,
        5,
        5,
        8200,
        0,
        6,
        3,
        27,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        8,
        13,
        0,
        0,
        8,
        1,
        11,
        0,
        0,
        1,
        4,
        8,
        172040,
        0,
        5,
        3,
        12,
        0,
        0,
        3,
        1,
        11,
        0,
        0,
        1,
        6,
        8,
        401416,
        0,
        8,
        1,
        11,
        0,
        0,
        1,
        9,
        8,
        401416,
        1,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        65794,
        0,
        4,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        3,
        12,
        2,
        0,
        5,
        3,
        27,
        0,
        0,
        5,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        2,
        6,
        512,
        0,
        3,
        3,
        12,
        0,
        0,
        4,
        1,
        11,
        0,
        0,
        2,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        1,
        12,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        8,
        1,
        11,
        0,
        0,
        2,
        3,
        12,
        0,
        2,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        5,
        8,
        65794,
        0,
        6,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        5,
        12,
        2,
        0,
        7,
        7,
        15,
        65536,
        0,
        9,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        3,
        6,
        512,
        0,
        4,
        1,
        17,
        2,
        0,
        2,
        2,
        6,
        512,
        0,
        3,
        5,
        12,
        0,
        0,
        5,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        1,
        12,
        4,
        45,
        32768,
        0,
        5,
        1,
        11,
        0,
        0,
        2,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        8,
        65792,
        0,
        8,
        1,
        17,
        256,
        3,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        65794,
        0,
        4,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        5,
        12,
        2,
        0,
        7,
        4,
        27,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        6,
        8,
        172040,
        0,
        7,
        5,
        12,
        0,
        0,
        5,
        1,
        11,
        0,
        0,
        1,
        9,
        8,
        401416,
        1,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        7,
        8,
        65794,
        0,
        8,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        5,
        12,
        2,
        0,
        7,
        4,
        6,
        0,
        0,
        5,
        5,
        5,
        8200,
        0,
        6,
        3,
        27,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        6,
        8,
        172040,
        0,
        7,
        5,
        12,
        0,
        0,
        5,
        1,
        11,
        0,
        0,
        1,
        6,
        8,
        401416,
        0,
        8,
        1,
        11,
        0,
        0,
        1,
        9,
        8,
        401416,
        1,
        8,
        4,
        45,
        32768,
        1,
        8,
        162,
        0,
        0,
        4,
        0,
        4,
        6,
        0,
        0,
        5,
        3,
        9,
        8200,
        0,
        3,
        2,
        11,
        0,
        0,
        2,
        7,
        5,
        8200,
        0,
        8,
        3,
        6,
        0,
        0,
        4,
        7,
        15,
        65536,
        1,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        393218,
        0,
        5,
        4,
        45,
        131074,
        0,
        6,
        1,
        12,
        163842,
        0,
        4,
        3,
        6,
        0,
        0,
        4,
        3,
        9,
        8200,
        0,
        3,
        2,
        11,
        0,
        0,
        2,
        9,
        15,
        8200,
        0,
        10,
        2,
        40,
        0,
        0,
        5,
        2,
        11,
        0,
        0,
        3,
        3,
        9,
        8200,
        0,
        3,
        2,
        11,
        0,
        0,
        2,
        6,
        48,
        8200,
        1,
        8,
        7,
        7,
        8200,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        1,
        14,
        16384,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        14,
        16384,
        0,
        3,
        4,
        45,
        147456,
        0,
        4,
        1,
        11,
        16384,
        0,
        1,
        6,
        13,
        16384,
        0,
        7,
        1,
        11,
        512,
        1,
        8,
        7,
        7,
        8200,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        1,
        14,
        16384,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        2,
        14,
        16384,
        0,
        4,
        3,
        14,
        16384,
        0,
        3,
        1,
        11,
        16384,
        0,
        1,
        6,
        8,
        155656,
        0,
        7,
        4,
        45,
        147456,
        0,
        4,
        1,
        11,
        16384,
        0,
        1,
        7,
        13,
        16384,
        0,
        8,
        2,
        6,
        16384,
        0,
        3,
        5,
        27,
        16384,
        0,
        7,
        1,
        11,
        512,
        2,
        8,
        2,
        6,
        512,
        0,
        3,
        1,
        11,
        0,
        0,
        1,
        4,
        45,
        131072,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        8,
        8,
        139272,
        1,
        12,
        7,
        7,
        8200,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        42,
        14,
        16384,
        0,
        43,
        1,
        11,
        512,
        1,
        12,
        5,
        7,
        8200,
        0,
        5,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        20,
        14,
        16384,
        0,
        21,
        1,
        11,
        512,
        1,
        12,
        3,
        6,
        512,
        0,
        5,
        5,
        17,
        2,
        0,
        7,
        1,
        17,
        131074,
        0,
        3,
        2,
        6,
        512,
        0,
        3,
        4,
        45,
        131072,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        4,
        8,
        139272,
        0,
        6,
        1,
        11,
        0,
        0,
        1,
        9,
        8,
        270600,
        1,
        16,
        5,
        7,
        8200,
        0,
        5,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        1,
        14,
        16384,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        14,
        16384,
        0,
        3,
        1,
        17,
        147456,
        0,
        2,
        1,
        11,
        512,
        2,
        16,
        2,
        6,
        512,
        0,
        3,
        5,
        17,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        45,
        131072,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        3,
        8,
        139272,
        0,
        6,
        1,
        11,
        0,
        0,
        2,
        1,
        10,
        0,
        1,
        20,
        5,
        7,
        8200,
        0,
        5,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        4,
        14,
        16384,
        0,
        5,
        1,
        11,
        512,
        3,
        12,
        7,
        7,
        8200,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        3,
        14,
        16384,
        0,
        4,
        1,
        11,
        512,
        1,
        12,
        7,
        7,
        8200,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        2,
        1,
        11,
        512,
        3,
        8,
        3,
        6,
        512,
        0,
        4,
        1,
        17,
        131074,
        0,
        2,
        2,
        6,
        512,
        0,
        3,
        1,
        11,
        0,
        0,
        1,
        4,
        45,
        131072,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        8,
        13,
        0,
        1,
        12,
        7,
        7,
        8200,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        1,
        14,
        16384,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        14,
        16384,
        0,
        3,
        1,
        17,
        147456,
        0,
        2,
        1,
        11,
        512,
        3,
        8,
        2,
        2,
        8200
    ]
}


[Trace - 4:40:38 PM] Received response 'textDocument/inlayHint - (11)' in 1215ms.
Result: [
    {
        "position": {
            "line": 51,
            "character": 1
        },
        "label": "impl Options",
        "paddingLeft": true,
        "paddingRight": false
    },
    {
        "position": {
            "line": 34,
            "character": 13
        },
        "label": [
            {
                "value": ": "
            },
            {
                "value": "String",
                "location": {
                    "uri": "file:///home/jonathan/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/string.rs",
                    "range": {
                        "start": {
                            "line": 364,
                            "character": 11
                        },
                        "end": {
                            "line": 364,
                            "character": 17
                        }
                    }
                }
            },
            {
                "value": ""
            }
        ],
        "kind": 1,
        "paddingLeft": false,
        "paddingRight": false
    },
    {
        "position": {
            "line": 78,
            "character": 1
        },
        "label": "impl Display for Options",
        "paddingLeft": true,
        "paddingRight": false
    },
    {
        "position": {
            "line": 61,
            "character": 22
        },
        "label": ": usize",
        "kind": 1,
        "paddingLeft": false,
        "paddingRight": false
    },
    {
        "position": {
            "line": 61,
            "character": 25
        },
        "label": [
            {
                "value": ": &"
            },
            {
                "value": "String",
                "location": {
                    "uri": "file:///home/jonathan/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/string.rs",
                    "range": {
                        "start": {
                            "line": 364,
                            "character": 11
                        },
                        "end": {
                            "line": 364,
                            "character": 17
                        }
                    }
                }
            },
            {
                "value": ""
            }
        ],
        "kind": 1,
        "paddingLeft": false,
        "paddingRight": false
    },
    {
        "position": {
            "line": 72,
            "character": 13
        },
        "label": [
            {
                "value": ": &"
            },
            {
                "value": "String",
                "location": {
                    "uri": "file:///home/jonathan/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/string.rs",
                    "range": {
                        "start": {
                            "line": 364,
                            "character": 11
                        },
                        "end": {
                            "line": 364,
                            "character": 17
                        }
                    }
                }
            },
            {
                "value": ""
            }
        ],
        "kind": 1,
        "paddingLeft": false,
        "paddingRight": false
    }
]


[Trace - 4:40:38 PM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 12,
                    "character": 11
                },
                "end": {
                    "line": 12,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "associated function `new` is never used\n`#[warn(dead_code)]` on by default",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `new` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:13:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(source: String) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 21,
                    "character": 11
                },
                "end": {
                    "line": 21,
                    "character": 18
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `message` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `message` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:22:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn message(mut self, msg: impl AsRef<str>) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 26,
                    "character": 11
                },
                "end": {
                    "line": 26,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `pos` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `pos` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:27:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn pos(mut self, pos: u64) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 33,
                    "character": 11
                },
                "end": {
                    "line": 33,
                    "character": 16
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `merge` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `merge` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:34:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn merge(mut self, other: Options) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 41,
                    "character": 11
                },
                "end": {
                    "line": 41,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `add` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `add` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:42:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add(mut self, value: char) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 46,
                    "character": 11
                },
                "end": {
                    "line": 46,
                    "character": 18
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `add_str` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `add_str` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:47:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add_str(mut self, value: impl AsRef<str>) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"
            }
        }
    ],
    "version": 1
}


[Trace - 4:40:38 PM] Received response 'textDocument/codeAction - (10)' in 3267ms.
Result: [
    {
        "title": "Extract Module",
        "kind": "refactor.extract",
        "data": {
            "codeActionParams": {
                "textDocument": {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
                },
                "range": {
                    "start": {
                        "line": 20,
                        "character": 0
                    },
                    "end": {
                        "line": 36,
                        "character": 9
                    }
                },
                "context": {
                    "diagnostics": [
                        {
                            "range": {
                                "start": {
                                    "line": 21,
                                    "character": 11
                                },
                                "end": {
                                    "line": 21,
                                    "character": 18
                                }
                            },
                            "severity": 2,
                            "message": "warning: method `message` is never used"
                        },
                        {
                            "range": {
                                "start": {
                                    "line": 26,
                                    "character": 11
                                },
                                "end": {
                                    "line": 26,
                                    "character": 14
                                }
                            },
                            "severity": 2,
                            "message": "warning: method `pos` is never used"
                        },
                        {
                            "range": {
                                "start": {
                                    "line": 33,
                                    "character": 11
                                },
                                "end": {
                                    "line": 33,
                                    "character": 16
                                }
                            },
                            "severity": 2,
                            "message": "warning: method `merge` is never used"
                        },
                        {
                            "range": {
                                "start": {
                                    "line": 21,
                                    "character": 11
                                },
                                "end": {
                                    "line": 21,
                                    "character": 18
                                }
                            },
                            "severity": 2,
                            "code": "Click for full compiler diagnostic",
                            "codeDescription": {
                                "href": "rust-analyzer-diagnostics-view:/diagnostic%20message%20%5B1%5D?1#file%3A%2F%2F%2Ftmp%2FCES.2wjciAhRCeZf%2Fsrc%2Ftest.rs"
                            },
                            "source": "rustc",
                            "message": "method `message` is never used",
                            "tags": [
                                1
                            ],
                            "data": {
                                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `message` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:22:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn message(mut self, msg: impl AsRef<str>) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"
                            }
                        },
                        {
                            "range": {
                                "start": {
                                    "line": 26,
                                    "character": 11
                                },
                                "end": {
                                    "line": 26,
                                    "character": 14
                                }
                            },
                            "severity": 2,
                            "code": "Click for full compiler diagnostic",
                            "codeDescription": {
                                "href": "rust-analyzer-diagnostics-view:/diagnostic%20message%20%5B2%5D?2#file%3A%2F%2F%2Ftmp%2FCES.2wjciAhRCeZf%2Fsrc%2Ftest.rs"
                            },
                            "source": "rustc",
                            "message": "method `pos` is never used",
                            "tags": [
                                1
                            ],
                            "data": {
                                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `pos` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:27:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn pos(mut self, pos: u64) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"
                            }
                        },
                        {
                            "range": {
                                "start": {
                                    "line": 33,
                                    "character": 11
                                },
                                "end": {
                                    "line": 33,
                                    "character": 16
                                }
                            },
                            "severity": 2,
                            "code": "Click for full compiler diagnostic",
                            "codeDescription": {
                                "href": "rust-analyzer-diagnostics-view:/diagnostic%20message%20%5B3%5D?3#file%3A%2F%2F%2Ftmp%2FCES.2wjciAhRCeZf%2Fsrc%2Ftest.rs"
                            },
                            "source": "rustc",
                            "message": "method `merge` is never used",
                            "tags": [
                                1
                            ],
                            "data": {
                                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `merge` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:34:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn merge(mut self, other: Options) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"
                            }
                        }
                    ],
                    "triggerKind": 2
                }
            },
            "id": "extract_module:RefactorExtract:0"
        }
    }
]


[Trace - 4:40:38 PM] Sending request 'textDocument/codeAction - (13)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 20,
            "character": 0
        },
        "end": {
            "line": 36,
            "character": 9
        }
    },
    "context": {
        "diagnostics": [
            {
                "range": {
                    "start": {
                        "line": 21,
                        "character": 11
                    },
                    "end": {
                        "line": 21,
                        "character": 18
                    }
                },
                "message": "warning: method `message` is never used",
                "severity": 2
            },
            {
                "range": {
                    "start": {
                        "line": 26,
                        "character": 11
                    },
                    "end": {
                        "line": 26,
                        "character": 14
                    }
                },
                "message": "warning: method `pos` is never used",
                "severity": 2
            },
            {
                "range": {
                    "start": {
                        "line": 33,
                        "character": 11
                    },
                    "end": {
                        "line": 33,
                        "character": 16
                    }
                },
                "message": "warning: method `merge` is never used",
                "severity": 2
            },
            {
                "range": {
                    "start": {
                        "line": 21,
                        "character": 11
                    },
                    "end": {
                        "line": 21,
                        "character": 18
                    }
                },
                "message": "method `message` is never used",
                "data": {
                    "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `message` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:22:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn message(mut self, msg: impl AsRef<str>) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"
                },
                "code": "Click for full compiler diagnostic",
                "codeDescription": {
                    "href": "rust-analyzer-diagnostics-view:/diagnostic%20message%20%5B1%5D?1#file%3A%2F%2F%2Ftmp%2FCES.2wjciAhRCeZf%2Fsrc%2Ftest.rs"
                },
                "severity": 2,
                "tags": [
                    1
                ],
                "source": "rustc"
            },
            {
                "range": {
                    "start": {
                        "line": 26,
                        "character": 11
                    },
                    "end": {
                        "line": 26,
                        "character": 14
                    }
                },
                "message": "method `pos` is never used",
                "data": {
                    "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `pos` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:27:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn pos(mut self, pos: u64) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"
                },
                "code": "Click for full compiler diagnostic",
                "codeDescription": {
                    "href": "rust-analyzer-diagnostics-view:/diagnostic%20message%20%5B2%5D?2#file%3A%2F%2F%2Ftmp%2FCES.2wjciAhRCeZf%2Fsrc%2Ftest.rs"
                },
                "severity": 2,
                "tags": [
                    1
                ],
                "source": "rustc"
            },
            {
                "range": {
                    "start": {
                        "line": 33,
                        "character": 11
                    },
                    "end": {
                        "line": 33,
                        "character": 16
                    }
                },
                "message": "method `merge` is never used",
                "data": {
                    "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `merge` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:34:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn merge(mut self, other: Options) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"
                },
                "code": "Click for full compiler diagnostic",
                "codeDescription": {
                    "href": "rust-analyzer-diagnostics-view:/diagnostic%20message%20%5B3%5D?3#file%3A%2F%2F%2Ftmp%2FCES.2wjciAhRCeZf%2Fsrc%2Ftest.rs"
                },
                "severity": 2,
                "tags": [
                    1
                ],
                "source": "rustc"
            }
        ],
        "triggerKind": 2
    }
}


[Trace - 4:40:38 PM] Received response 'textDocument/codeAction - (13)' in 2ms.
Result: [
    {
        "title": "Extract Module",
        "kind": "refactor.extract",
        "data": {
            "codeActionParams": {
                "textDocument": {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
                },
                "range": {
                    "start": {
                        "line": 20,
                        "character": 0
                    },
                    "end": {
                        "line": 36,
                        "character": 9
                    }
                },
                "context": {
                    "diagnostics": [
                        {
                            "range": {
                                "start": {
                                    "line": 21,
                                    "character": 11
                                },
                                "end": {
                                    "line": 21,
                                    "character": 18
                                }
                            },
                            "severity": 2,
                            "message": "warning: method `message` is never used"
                        },
                        {
                            "range": {
                                "start": {
                                    "line": 26,
                                    "character": 11
                                },
                                "end": {
                                    "line": 26,
                                    "character": 14
                                }
                            },
                            "severity": 2,
                            "message": "warning: method `pos` is never used"
                        },
                        {
                            "range": {
                                "start": {
                                    "line": 33,
                                    "character": 11
                                },
                                "end": {
                                    "line": 33,
                                    "character": 16
                                }
                            },
                            "severity": 2,
                            "message": "warning: method `merge` is never used"
                        },
                        {
                            "range": {
                                "start": {
                                    "line": 21,
                                    "character": 11
                                },
                                "end": {
                                    "line": 21,
                                    "character": 18
                                }
                            },
                            "severity": 2,
                            "code": "Click for full compiler diagnostic",
                            "codeDescription": {
                                "href": "rust-analyzer-diagnostics-view:/diagnostic%20message%20%5B1%5D?1#file%3A%2F%2F%2Ftmp%2FCES.2wjciAhRCeZf%2Fsrc%2Ftest.rs"
                            },
                            "source": "rustc",
                            "message": "method `message` is never used",
                            "tags": [
                                1
                            ],
                            "data": {
                                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `message` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:22:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn message(mut self, msg: impl AsRef<str>) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"
                            }
                        },
                        {
                            "range": {
                                "start": {
                                    "line": 26,
                                    "character": 11
                                },
                                "end": {
                                    "line": 26,
                                    "character": 14
                                }
                            },
                            "severity": 2,
                            "code": "Click for full compiler diagnostic",
                            "codeDescription": {
                                "href": "rust-analyzer-diagnostics-view:/diagnostic%20message%20%5B2%5D?2#file%3A%2F%2F%2Ftmp%2FCES.2wjciAhRCeZf%2Fsrc%2Ftest.rs"
                            },
                            "source": "rustc",
                            "message": "method `pos` is never used",
                            "tags": [
                                1
                            ],
                            "data": {
                                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `pos` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:27:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn pos(mut self, pos: u64) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"
                            }
                        },
                        {
                            "range": {
                                "start": {
                                    "line": 33,
                                    "character": 11
                                },
                                "end": {
                                    "line": 33,
                                    "character": 16
                                }
                            },
                            "severity": 2,
                            "code": "Click for full compiler diagnostic",
                            "codeDescription": {
                                "href": "rust-analyzer-diagnostics-view:/diagnostic%20message%20%5B3%5D?3#file%3A%2F%2F%2Ftmp%2FCES.2wjciAhRCeZf%2Fsrc%2Ftest.rs"
                            },
                            "source": "rustc",
                            "message": "method `merge` is never used",
                            "tags": [
                                1
                            ],
                            "data": {
                                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `merge` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:34:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn merge(mut self, other: Options) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"
                            }
                        }
                    ],
                    "triggerKind": 2
                }
            },
            "id": "extract_module:RefactorExtract:0"
        }
    }
]


[Trace - 4:40:40 PM] Sending request 'textDocument/semanticTokens/full/delta - (14)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "previousResultId": "2"
}


[Trace - 4:40:40 PM] Received response 'textDocument/semanticTokens/full/delta - (14)' in 5ms.
Result: {
    "resultId": "3",
    "edits": []
}


[Trace - 4:40:41 PM] Sending request 'textDocument/codeAction - (15)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 29,
            "character": 8
        },
        "end": {
            "line": 29,
            "character": 8
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 4:40:41 PM] Received response 'textDocument/codeAction - (15)' in 2ms.
Result: []


[Trace - 4:40:44 PM] Sending request 'textDocument/hover - (16)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "position": {
        "line": 41,
        "character": 15
    }
}


[Trace - 4:40:44 PM] Received response 'textDocument/hover - (16)' in 1ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "\n```rust\nmut\n```\n\n---\n\nA mutable variable, reference, or pointer.\n\n`mut` can be used in several situations. The first is mutable variables,\nwhich can be used anywhere you can bind a value to a variable name. Some\nexamples:\n\n```rust\n// A mutable variable in the parameter list of a function.\nfn foo(mut x: u8, y: u8) -> u8 {\n    x += y;\n    x\n}\n\n// Modifying a mutable variable.\nlet mut a = 5;\na = 6;\n\nassert_eq!(foo(3, 4), 7);\nassert_eq!(a, 6);\n```\n\nThe second is mutable references. They can be created from `mut` variables\nand must be unique: no other variables can have a mutable reference, nor a\nshared reference.\n\n```rust\n// Taking a mutable reference.\nfn push_two(v: &mut Vec<u8>) {\n    v.push(2);\n}\n\n// A mutable reference cannot be taken to a non-mutable variable.\nlet mut v = vec![0, 1];\n// Passing a mutable reference.\npush_two(&mut v);\n\nassert_eq!(v, vec![0, 1, 2]);\n```\n\n```rust\nlet mut v = vec![0, 1];\nlet mut_ref_v = &mut v;\n#[allow(unused)]\nlet ref_v = &v;\nmut_ref_v.push(2);\n```\n\nMutable raw pointers work much like mutable references, with the added\npossibility of not pointing to a valid object. The syntax is `*mut Type`.\n\nMore information on mutable references and pointers can be found in the [Reference](https://doc.rust-lang.org/stable/reference/types/pointer.html#mutable-references-mut)."
    },
    "range": {
        "start": {
            "line": 41,
            "character": 15
        },
        "end": {
            "line": 41,
            "character": 18
        }
    }
}


[Trace - 4:40:45 PM] Sending request 'shutdown - (17)'.
[Trace - 4:40:45 PM] Received response 'shutdown - (17)' in 0ms.
No result returned.


[Trace - 4:40:45 PM] Sending notification 'exit'.
No parameters provided.


[Trace - 4:40:48 PM] Sending request 'initialize - (0)'.
Params: {
    "processId": 181217,
    "clientInfo": {
        "name": "Visual Studio Code",
        "version": "1.74.0"
    },
    "locale": "en-us",
    "rootPath": "/tmp/CES.2wjciAhRCeZf",
    "rootUri": "file:///tmp/CES.2wjciAhRCeZf",
    "capabilities": {
        "workspace": {
            "applyEdit": true,
            "workspaceEdit": {
                "documentChanges": true,
                "resourceOperations": [
                    "create",
                    "rename",
                    "delete"
                ],
                "failureHandling": "textOnlyTransactional",
                "normalizesLineEndings": true,
                "changeAnnotationSupport": {
                    "groupsOnLabel": true
                }
            },
            "configuration": true,
            "didChangeWatchedFiles": {
                "dynamicRegistration": true,
                "relativePatternSupport": true
            },
            "symbol": {
                "dynamicRegistration": true,
                "symbolKind": {
                    "valueSet": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ]
                },
                "tagSupport": {
                    "valueSet": [
                        1
                    ]
                },
                "resolveSupport": {
                    "properties": [
                        "location.range"
                    ]
                }
            },
            "codeLens": {
                "refreshSupport": true
            },
            "executeCommand": {
                "dynamicRegistration": true
            },
            "didChangeConfiguration": {
                "dynamicRegistration": true
            },
            "workspaceFolders": true,
            "semanticTokens": {
                "refreshSupport": true
            },
            "fileOperations": {
                "dynamicRegistration": true,
                "didCreate": true,
                "didRename": true,
                "didDelete": true,
                "willCreate": true,
                "willRename": true,
                "willDelete": true
            },
            "inlineValue": {
                "refreshSupport": true
            },
            "inlayHint": {
                "refreshSupport": true
            },
            "diagnostics": {
                "refreshSupport": true
            }
        },
        "textDocument": {
            "publishDiagnostics": {
                "relatedInformation": true,
                "versionSupport": false,
                "tagSupport": {
                    "valueSet": [
                        1,
                        2
                    ]
                },
                "codeDescriptionSupport": true,
                "dataSupport": true
            },
            "synchronization": {
                "dynamicRegistration": true,
                "willSave": true,
                "willSaveWaitUntil": true,
                "didSave": true
            },
            "completion": {
                "dynamicRegistration": true,
                "contextSupport": true,
                "completionItem": {
                    "snippetSupport": true,
                    "commitCharactersSupport": true,
                    "documentationFormat": [
                        "markdown",
                        "plaintext"
                    ],
                    "deprecatedSupport": true,
                    "preselectSupport": true,
                    "tagSupport": {
                        "valueSet": [
                            1
                        ]
                    },
                    "insertReplaceSupport": true,
                    "resolveSupport": {
                        "properties": [
                            "documentation",
                            "detail",
                            "additionalTextEdits"
                        ]
                    },
                    "insertTextModeSupport": {
                        "valueSet": [
                            1,
                            2
                        ]
                    },
                    "labelDetailsSupport": true
                },
                "insertTextMode": 2,
                "completionItemKind": {
                    "valueSet": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25
                    ]
                },
                "completionList": {
                    "itemDefaults": [
                        "commitCharacters",
                        "editRange",
                        "insertTextFormat",
                        "insertTextMode"
                    ]
                }
            },
            "hover": {
                "dynamicRegistration": true,
                "contentFormat": [
                    "markdown",
                    "plaintext"
                ]
            },
            "signatureHelp": {
                "dynamicRegistration": true,
                "signatureInformation": {
                    "documentationFormat": [
                        "markdown",
                        "plaintext"
                    ],
                    "parameterInformation": {
                        "labelOffsetSupport": true
                    },
                    "activeParameterSupport": true
                },
                "contextSupport": true
            },
            "definition": {
                "dynamicRegistration": true,
                "linkSupport": true
            },
            "references": {
                "dynamicRegistration": true
            },
            "documentHighlight": {
                "dynamicRegistration": true
            },
            "documentSymbol": {
                "dynamicRegistration": true,
                "symbolKind": {
                    "valueSet": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ]
                },
                "hierarchicalDocumentSymbolSupport": true,
                "tagSupport": {
                    "valueSet": [
                        1
                    ]
                },
                "labelSupport": true
            },
            "codeAction": {
                "dynamicRegistration": true,
                "isPreferredSupport": true,
                "disabledSupport": true,
                "dataSupport": true,
                "resolveSupport": {
                    "properties": [
                        "edit"
                    ]
                },
                "codeActionLiteralSupport": {
                    "codeActionKind": {
                        "valueSet": [
                            "",
                            "quickfix",
                            "refactor",
                            "refactor.extract",
                            "refactor.inline",
                            "refactor.rewrite",
                            "source",
                            "source.organizeImports"
                        ]
                    }
                },
                "honorsChangeAnnotations": false
            },
            "codeLens": {
                "dynamicRegistration": true
            },
            "formatting": {
                "dynamicRegistration": true
            },
            "rangeFormatting": {
                "dynamicRegistration": true
            },
            "onTypeFormatting": {
                "dynamicRegistration": true
            },
            "rename": {
                "dynamicRegistration": true,
                "prepareSupport": true,
                "prepareSupportDefaultBehavior": 1,
                "honorsChangeAnnotations": true
            },
            "documentLink": {
                "dynamicRegistration": true,
                "tooltipSupport": true
            },
            "typeDefinition": {
                "dynamicRegistration": true,
                "linkSupport": true
            },
            "implementation": {
                "dynamicRegistration": true,
                "linkSupport": true
            },
            "colorProvider": {
                "dynamicRegistration": true
            },
            "foldingRange": {
                "dynamicRegistration": true,
                "rangeLimit": 5000,
                "lineFoldingOnly": true,
                "foldingRangeKind": {
                    "valueSet": [
                        "comment",
                        "imports",
                        "region"
                    ]
                },
                "foldingRange": {
                    "collapsedText": false
                }
            },
            "declaration": {
                "dynamicRegistration": true,
                "linkSupport": true
            },
            "selectionRange": {
                "dynamicRegistration": true
            },
            "callHierarchy": {
                "dynamicRegistration": true
            },
            "semanticTokens": {
                "dynamicRegistration": true,
                "tokenTypes": [
                    "namespace",
                    "type",
                    "class",
                    "enum",
                    "interface",
                    "struct",
                    "typeParameter",
                    "parameter",
                    "variable",
                    "property",
                    "enumMember",
                    "event",
                    "function",
                    "method",
                    "macro",
                    "keyword",
                    "modifier",
                    "comment",
                    "string",
                    "number",
                    "regexp",
                    "operator",
                    "decorator"
                ],
                "tokenModifiers": [
                    "declaration",
                    "definition",
                    "readonly",
                    "static",
                    "deprecated",
                    "abstract",
                    "async",
                    "modification",
                    "documentation",
                    "defaultLibrary"
                ],
                "formats": [
                    "relative"
                ],
                "requests": {
                    "range": true,
                    "full": {
                        "delta": true
                    }
                },
                "multilineTokenSupport": false,
                "overlappingTokenSupport": false,
                "serverCancelSupport": true,
                "augmentsSyntaxTokens": false
            },
            "linkedEditingRange": {
                "dynamicRegistration": true
            },
            "typeHierarchy": {
                "dynamicRegistration": true
            },
            "inlineValue": {
                "dynamicRegistration": true
            },
            "inlayHint": {
                "dynamicRegistration": true,
                "resolveSupport": {
                    "properties": [
                        "tooltip",
                        "textEdits",
                        "label.tooltip",
                        "label.location",
                        "label.command"
                    ]
                }
            },
            "diagnostic": {
                "dynamicRegistration": true,
                "relatedDocumentSupport": false
            }
        },
        "window": {
            "showMessage": {
                "messageActionItem": {
                    "additionalPropertiesSupport": true
                }
            },
            "showDocument": {
                "support": true
            },
            "workDoneProgress": true
        },
        "general": {
            "staleRequestSupport": {
                "cancel": true,
                "retryOnContentModified": [
                    "textDocument/semanticTokens/full",
                    "textDocument/semanticTokens/range",
                    "textDocument/semanticTokens/full/delta"
                ]
            },
            "regularExpressions": {
                "engine": "ECMAScript",
                "version": "ES2020"
            },
            "markdown": {
                "parser": "marked",
                "version": "1.1.0",
                "allowedTags": [
                    "ul",
                    "li",
                    "p",
                    "code",
                    "blockquote",
                    "ol",
                    "h1",
                    "h2",
                    "h3",
                    "h4",
                    "h5",
                    "h6",
                    "hr",
                    "em",
                    "pre",
                    "table",
                    "thead",
                    "tbody",
                    "tr",
                    "th",
                    "td",
                    "div",
                    "del",
                    "a",
                    "strong",
                    "br",
                    "img",
                    "span"
                ]
            },
            "positionEncodings": [
                "utf-16"
            ]
        },
        "notebookDocument": {
            "synchronization": {
                "dynamicRegistration": true,
                "executionSummarySupport": true
            }
        },
        "experimental": {
            "snippetTextEdit": true,
            "codeActionGroup": true,
            "hoverActions": true,
            "serverStatusNotification": true,
            "colorDiagnosticOutput": true,
            "openServerLogs": true,
            "commands": {
                "commands": [
                    "rust-analyzer.runSingle",
                    "rust-analyzer.debugSingle",
                    "rust-analyzer.showReferences",
                    "rust-analyzer.gotoLocation",
                    "editor.action.triggerParameterHints"
                ]
            }
        }
    },
    "initializationOptions": {
        "cargoRunner": null,
        "runnableEnv": null,
        "server": {
            "path": null,
            "extraEnv": null
        },
        "trace": {
            "server": "verbose",
            "extension": false
        },
        "debug": {
            "engine": "auto",
            "sourceFileMap": {
                "/rustc/<id>": "${env:USERPROFILE}/.rustup/toolchains/<toolchain-id>/lib/rustlib/src/rust"
            },
            "openDebugPane": false,
            "engineSettings": {}
        },
        "restartServerOnConfigChange": false,
        "typing": {
            "continueCommentsOnNewline": true,
            "autoClosingAngleBrackets": {
                "enable": false
            }
        },
        "diagnostics": {
            "previewRustcOutput": false,
            "useRustcErrorCode": false,
            "disabled": [],
            "enable": true,
            "experimental": {
                "enable": false
            },
            "remapPrefix": {},
            "warningsAsHint": [],
            "warningsAsInfo": []
        },
        "discoverProjectCommand": null,
        "showUnlinkedFileNotification": true,
        "assist": {
            "emitMustUse": false,
            "expressionFillDefault": "todo"
        },
        "cachePriming": {
            "enable": true,
            "numThreads": 0
        },
        "cargo": {
            "autoreload": true,
            "buildScripts": {
                "enable": true,
                "invocationLocation": "workspace",
                "invocationStrategy": "per_workspace",
                "overrideCommand": null,
                "useRustcWrapper": true
            },
            "extraArgs": [],
            "extraEnv": {},
            "features": [],
            "noDefaultFeatures": false,
            "sysroot": "discover",
            "sysrootSrc": null,
            "target": null,
            "unsetTest": [
                "core"
            ]
        },
        "checkOnSave": true,
        "check": {
            "allTargets": true,
            "command": "check",
            "extraArgs": [],
            "extraEnv": {},
            "features": null,
            "invocationLocation": "workspace",
            "invocationStrategy": "per_workspace",
            "noDefaultFeatures": null,
            "overrideCommand": null,
            "targets": null
        },
        "completion": {
            "autoimport": {
                "enable": true
            },
            "autoself": {
                "enable": true
            },
            "callable": {
                "snippets": "fill_arguments"
            },
            "limit": null,
            "postfix": {
                "enable": true
            },
            "privateEditable": {
                "enable": false
            },
            "snippets": {
                "custom": {
                    "Arc::new": {
                        "postfix": "arc",
                        "body": "Arc::new(${receiver})",
                        "requires": "std::sync::Arc",
                        "description": "Put the expression into an `Arc`",
                        "scope": "expr"
                    },
                    "Rc::new": {
                        "postfix": "rc",
                        "body": "Rc::new(${receiver})",
                        "requires": "std::rc::Rc",
                        "description": "Put the expression into an `Rc`",
                        "scope": "expr"
                    },
                    "Box::pin": {
                        "postfix": "pinbox",
                        "body": "Box::pin(${receiver})",
                        "requires": "std::boxed::Box",
                        "description": "Put the expression into a pinned `Box`",
                        "scope": "expr"
                    },
                    "Ok": {
                        "postfix": "ok",
                        "body": "Ok(${receiver})",
                        "description": "Wrap the expression in a `Result::Ok`",
                        "scope": "expr"
                    },
                    "Err": {
                        "postfix": "err",
                        "body": "Err(${receiver})",
                        "description": "Wrap the expression in a `Result::Err`",
                        "scope": "expr"
                    },
                    "Some": {
                        "postfix": "some",
                        "body": "Some(${receiver})",
                        "description": "Wrap the expression in an `Option::Some`",
                        "scope": "expr"
                    }
                }
            }
        },
        "files": {
            "excludeDirs": [],
            "watcher": "client"
        },
        "highlightRelated": {
            "breakPoints": {
                "enable": true
            },
            "closureCaptures": {
                "enable": true
            },
            "exitPoints": {
                "enable": true
            },
            "references": {
                "enable": true
            },
            "yieldPoints": {
                "enable": true
            }
        },
        "hover": {
            "actions": {
                "debug": {
                    "enable": true
                },
                "enable": true,
                "gotoTypeDef": {
                    "enable": true
                },
                "implementations": {
                    "enable": true
                },
                "references": {
                    "enable": false
                },
                "run": {
                    "enable": true
                }
            },
            "documentation": {
                "enable": true,
                "keywords": {
                    "enable": true
                }
            },
            "links": {
                "enable": true
            },
            "memoryLayout": {
                "enable": true
            }
        },
        "imports": {
            "granularity": {
                "enforce": false,
                "group": "crate"
            },
            "group": {
                "enable": true
            },
            "merge": {
                "glob": true
            },
            "prefer": {
                "no": {
                    "std": false
                }
            },
            "prefix": "plain"
        },
        "inlayHints": {
            "bindingModeHints": {
                "enable": false
            },
            "chainingHints": {
                "enable": true
            },
            "closingBraceHints": {
                "enable": true,
                "minLines": 25
            },
            "closureCaptureHints": {
                "enable": false
            },
            "closureReturnTypeHints": {
                "enable": "never"
            },
            "closureStyle": "impl_fn",
            "discriminantHints": {
                "enable": "never"
            },
            "expressionAdjustmentHints": {
                "enable": "never",
                "hideOutsideUnsafe": false,
                "mode": "prefix"
            },
            "lifetimeElisionHints": {
                "enable": "never",
                "useParameterNames": false
            },
            "maxLength": 25,
            "parameterHints": {
                "enable": true
            },
            "reborrowHints": {
                "enable": "never"
            },
            "renderColons": true,
            "typeHints": {
                "enable": true,
                "hideClosureInitialization": false,
                "hideNamedConstructor": false
            }
        },
        "interpret": {
            "tests": false
        },
        "joinLines": {
            "joinAssignments": true,
            "joinElseIf": true,
            "removeTrailingComma": true,
            "unwrapTrivialBlock": true
        },
        "lens": {
            "debug": {
                "enable": true
            },
            "enable": true,
            "forceCustomCommands": true,
            "implementations": {
                "enable": true
            },
            "location": "above_name",
            "references": {
                "adt": {
                    "enable": false
                },
                "enumVariant": {
                    "enable": false
                },
                "method": {
                    "enable": false
                },
                "trait": {
                    "enable": false
                }
            },
            "run": {
                "enable": true
            }
        },
        "linkedProjects": [],
        "lru": {
            "capacity": null,
            "query": {
                "capacities": {}
            }
        },
        "notifications": {
            "cargoTomlNotFound": true
        },
        "numThreads": null,
        "procMacro": {
            "attributes": {
                "enable": true
            },
            "enable": true,
            "ignored": {},
            "server": null
        },
        "references": {
            "excludeImports": false
        },
        "runnables": {
            "command": null,
            "extraArgs": []
        },
        "rustc": {
            "source": null
        },
        "rustfmt": {
            "extraArgs": [],
            "overrideCommand": null,
            "rangeFormatting": {
                "enable": false
            }
        },
        "semanticHighlighting": {
            "doc": {
                "comment": {
                    "inject": {
                        "enable": true
                    }
                }
            },
            "nonStandardTokens": true,
            "operator": {
                "enable": true,
                "specialization": {
                    "enable": false
                }
            },
            "punctuation": {
                "enable": false,
                "separate": {
                    "macro": {
                        "bang": false
                    }
                },
                "specialization": {
                    "enable": false
                }
            },
            "strings": {
                "enable": true
            }
        },
        "signatureInfo": {
            "detail": "full",
            "documentation": {
                "enable": true
            }
        },
        "workspace": {
            "symbol": {
                "search": {
                    "kind": "only_types",
                    "limit": 128,
                    "scope": "workspace"
                }
            }
        }
    },
    "trace": "verbose",
    "workspaceFolders": [
        {
            "uri": "file:///tmp/CES.2wjciAhRCeZf",
            "name": "CES.2wjciAhRCeZf"
        }
    ]
}


[Trace - 4:40:48 PM] Received response 'initialize - (0)' in 2ms.
Result: {
    "capabilities": {
        "positionEncoding": "utf-16",
        "textDocumentSync": {
            "openClose": true,
            "change": 2,
            "save": {}
        },
        "selectionRangeProvider": true,
        "hoverProvider": true,
        "completionProvider": {
            "resolveProvider": true,
            "triggerCharacters": [
                ":",
                ".",
                "'",
                "("
            ],
            "completionItem": {
                "labelDetailsSupport": true
            }
        },
        "signatureHelpProvider": {
            "triggerCharacters": [
                "(",
                ",",
                "<"
            ]
        },
        "definitionProvider": true,
        "typeDefinitionProvider": true,
        "implementationProvider": true,
        "referencesProvider": true,
        "documentHighlightProvider": true,
        "documentSymbolProvider": true,
        "workspaceSymbolProvider": true,
        "codeActionProvider": {
            "codeActionKinds": [
                "",
                "quickfix",
                "refactor",
                "refactor.extract",
                "refactor.inline",
                "refactor.rewrite"
            ],
            "resolveProvider": true
        },
        "codeLensProvider": {
            "resolveProvider": true
        },
        "documentFormattingProvider": true,
        "documentRangeFormattingProvider": false,
        "documentOnTypeFormattingProvider": {
            "firstTriggerCharacter": "=",
            "moreTriggerCharacter": [
                ".",
                ">",
                "{",
                "<"
            ]
        },
        "renameProvider": {
            "prepareProvider": true
        },
        "foldingRangeProvider": true,
        "declarationProvider": true,
        "workspace": {
            "workspaceFolders": {
                "supported": true,
                "changeNotifications": true
            },
            "fileOperations": {
                "willRename": {
                    "filters": [
                        {
                            "scheme": "file",
                            "pattern": {
                                "glob": "**/*.rs",
                                "matches": "file"
                            }
                        },
                        {
                            "scheme": "file",
                            "pattern": {
                                "glob": "**",
                                "matches": "folder"
                            }
                        }
                    ]
                }
            }
        },
        "callHierarchyProvider": true,
        "semanticTokensProvider": {
            "legend": {
                "tokenTypes": [
                    "comment",
                    "decorator",
                    "enumMember",
                    "enum",
                    "function",
                    "interface",
                    "keyword",
                    "macro",
                    "method",
                    "namespace",
                    "number",
                    "operator",
                    "parameter",
                    "property",
                    "string",
                    "struct",
                    "typeParameter",
                    "variable",
                    "angle",
                    "arithmetic",
                    "attribute",
                    "attributeBracket",
                    "bitwise",
                    "boolean",
                    "brace",
                    "bracket",
                    "builtinAttribute",
                    "builtinType",
                    "character",
                    "colon",
                    "comma",
                    "comparison",
                    "constParameter",
                    "derive",
                    "deriveHelper",
                    "dot",
                    "escapeSequence",
                    "formatSpecifier",
                    "generic",
                    "label",
                    "lifetime",
                    "logical",
                    "macroBang",
                    "parenthesis",
                    "punctuation",
                    "selfKeyword",
                    "selfTypeKeyword",
                    "semicolon",
                    "typeAlias",
                    "toolModule",
                    "union",
                    "unresolvedReference"
                ],
                "tokenModifiers": [
                    "documentation",
                    "declaration",
                    "static",
                    "defaultLibrary",
                    "async",
                    "attribute",
                    "callable",
                    "constant",
                    "consuming",
                    "controlFlow",
                    "crateRoot",
                    "injected",
                    "intraDocLink",
                    "library",
                    "macro",
                    "mutable",
                    "public",
                    "reference",
                    "trait",
                    "unsafe"
                ]
            },
            "range": true,
            "full": {
                "delta": true
            }
        },
        "inlayHintProvider": {
            "resolveProvider": true
        },
        "experimental": {
            "externalDocs": true,
            "hoverRange": true,
            "joinLines": true,
            "matchingBrace": true,
            "moveItem": true,
            "onEnter": true,
            "openCargoToml": true,
            "parentModule": true,
            "runnables": {
                "kinds": [
                    "cargo"
                ]
            },
            "ssr": true,
            "workspaceSymbolScopeKindFiltering": true
        }
    },
    "serverInfo": {
        "name": "rust-analyzer",
        "version": "0.3.1524-standalone"
    }
}


[Trace - 4:40:48 PM] Sending notification 'initialized'.
Params: {}


[Trace - 4:40:48 PM] Sending notification 'textDocument/didOpen'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
        "languageId": "rust",
        "version": 1,
        "text": "use core::fmt;\nuse std::collections::HashSet;\n\n#[derive(Debug, Clone)]\npub struct Options {\n    options: HashSet<String>,\n    lastpos: u64,\n    messages: Vec<String>,\n    source: String,\n}\n\nimpl Options {\n    pub fn new(source: String) -> Self {\n        Self {\n            options: HashSet::new(),\n            lastpos: 0,\n            messages: vec![],\n            source,\n        }\n    }\n\n    pub fn message(mut self, msg: impl AsRef<str>) -> Self {\n        self.messages.push(msg.as_ref().to_string());\n        self\n    }\n\n    pub fn pos(mut self, pos: u64) -> Self {\n        if pos > self.lastpos {\n            self.lastpos = pos;\n        }\n        self\n    }\n\n    pub fn merge(mut self, other: Options) -> Self {\n        for i in other.options {\n            self = self.add_str(i);\n        }\n\n        self\n    }\n\n    pub fn add(mut self, value: char) -> Self {\n        self.options.insert(value.to_string());\n        self\n    }\n\n    pub fn add_str(mut self, value: impl AsRef<str>) -> Self {\n        self.options.insert(value.as_ref().to_string());\n        self\n        // THIS IS JUST A VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY LONG LINE\n    }\n}\n\nimpl fmt::Display for Options {\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n        writeln!(f, \"{}\", self.source)?;\n        writeln!(f, \"{}^\", \" \".repeat(self.lastpos as usize))?;\n\n        if !self.options.is_empty() {\n            writeln!(f, \"An error occurred: unexpected character.\")?;\n            write!(f, \"Expected any of: [\")?;\n            for (index, i) in self.options.iter().enumerate() {\n                write!(f, \"{}\", i)?;\n\n                if index != self.options.len() - 1 {\n                    write!(f, \", \")?;\n                }\n            }\n            writeln!(f, \"]\")?;\n            writeln!(f)?;\n        }\n\n        for i in &self.messages {\n            writeln!(f, \"{}\", i)?;\n        }\n\n        Ok(())\n    }\n}\n"
    }
}


[Trace - 4:40:48 PM] Received notification 'experimental/serverStatus'.
Params: {
    "health": "ok",
    "quiescent": false,
    "message": null
}


[Trace - 4:40:48 PM] Received request 'client/registerCapability - (0)'.
Params: {
    "registrations": [
        {
            "id": "textDocument/didSave",
            "method": "textDocument/didSave",
            "registerOptions": {
                "includeText": false,
                "documentSelector": [
                    {
                        "pattern": "**/*.rs"
                    },
                    {
                        "pattern": "**/Cargo.toml"
                    },
                    {
                        "pattern": "**/Cargo.lock"
                    }
                ]
            }
        }
    ]
}


[Trace - 4:40:48 PM] Sending response 'client/registerCapability - (0)'. Processing request took 0ms
No result returned.


[Trace - 4:40:48 PM] Received request 'window/workDoneProgress/create - (1)'.
Params: {
    "token": "rustAnalyzer/Fetching"
}


[Trace - 4:40:48 PM] Sending response 'window/workDoneProgress/create - (1)'. Processing request took 0ms
No result returned.


[Trace - 4:40:48 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "begin",
        "title": "Fetching",
        "cancellable": false
    }
}


[Trace - 4:40:48 PM] Sending request 'textDocument/documentSymbol - (1)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    }
}


[Trace - 4:40:48 PM] Sending request 'textDocument/codeAction - (2)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 29,
            "character": 8
        },
        "end": {
            "line": 29,
            "character": 8
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 4:40:48 PM] Received response 'textDocument/documentSymbol - (1)' in 2ms.
Result: [
    {
        "name": "Options",
        "kind": 23,
        "tags": [],
        "deprecated": false,
        "range": {
            "start": {
                "line": 3,
                "character": 0
            },
            "end": {
                "line": 9,
                "character": 1
            }
        },
        "selectionRange": {
            "start": {
                "line": 4,
                "character": 11
            },
            "end": {
                "line": 4,
                "character": 18
            }
        },
        "children": [
            {
                "name": "options",
                "detail": "HashSet<String>",
                "kind": 8,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 5,
                        "character": 4
                    },
                    "end": {
                        "line": 5,
                        "character": 28
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 5,
                        "character": 4
                    },
                    "end": {
                        "line": 5,
                        "character": 11
                    }
                }
            },
            {
                "name": "lastpos",
                "detail": "u64",
                "kind": 8,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 6,
                        "character": 4
                    },
                    "end": {
                        "line": 6,
                        "character": 16
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 6,
                        "character": 4
                    },
                    "end": {
                        "line": 6,
                        "character": 11
                    }
                }
            },
            {
                "name": "messages",
                "detail": "Vec<String>",
                "kind": 8,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 7,
                        "character": 4
                    },
                    "end": {
                        "line": 7,
                        "character": 25
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 7,
                        "character": 4
                    },
                    "end": {
                        "line": 7,
                        "character": 12
                    }
                }
            },
            {
                "name": "source",
                "detail": "String",
                "kind": 8,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 8,
                        "character": 4
                    },
                    "end": {
                        "line": 8,
                        "character": 18
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 8,
                        "character": 4
                    },
                    "end": {
                        "line": 8,
                        "character": 10
                    }
                }
            }
        ]
    },
    {
        "name": "impl Options",
        "kind": 19,
        "tags": [],
        "deprecated": false,
        "range": {
            "start": {
                "line": 11,
                "character": 0
            },
            "end": {
                "line": 51,
                "character": 1
            }
        },
        "selectionRange": {
            "start": {
                "line": 11,
                "character": 5
            },
            "end": {
                "line": 11,
                "character": 12
            }
        },
        "children": [
            {
                "name": "new",
                "detail": "fn(source: String) -> Self",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 12,
                        "character": 4
                    },
                    "end": {
                        "line": 19,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 12,
                        "character": 11
                    },
                    "end": {
                        "line": 12,
                        "character": 14
                    }
                }
            },
            {
                "name": "message",
                "detail": "fn(mut self, msg: impl AsRef<str>) -> Self",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 21,
                        "character": 4
                    },
                    "end": {
                        "line": 24,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 21,
                        "character": 11
                    },
                    "end": {
                        "line": 21,
                        "character": 18
                    }
                }
            },
            {
                "name": "pos",
                "detail": "fn(mut self, pos: u64) -> Self",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 26,
                        "character": 4
                    },
                    "end": {
                        "line": 31,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 26,
                        "character": 11
                    },
                    "end": {
                        "line": 26,
                        "character": 14
                    }
                }
            },
            {
                "name": "merge",
                "detail": "fn(mut self, other: Options) -> Self",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 33,
                        "character": 4
                    },
                    "end": {
                        "line": 39,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 33,
                        "character": 11
                    },
                    "end": {
                        "line": 33,
                        "character": 16
                    }
                }
            },
            {
                "name": "add",
                "detail": "fn(mut self, value: char) -> Self",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 41,
                        "character": 4
                    },
                    "end": {
                        "line": 44,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 41,
                        "character": 11
                    },
                    "end": {
                        "line": 41,
                        "character": 14
                    }
                }
            },
            {
                "name": "add_str",
                "detail": "fn(mut self, value: impl AsRef<str>) -> Self",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 46,
                        "character": 4
                    },
                    "end": {
                        "line": 50,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 46,
                        "character": 11
                    },
                    "end": {
                        "line": 46,
                        "character": 18
                    }
                }
            }
        ]
    },
    {
        "name": "impl fmt::Display for Options",
        "kind": 19,
        "tags": [],
        "deprecated": false,
        "range": {
            "start": {
                "line": 53,
                "character": 0
            },
            "end": {
                "line": 78,
                "character": 1
            }
        },
        "selectionRange": {
            "start": {
                "line": 53,
                "character": 22
            },
            "end": {
                "line": 53,
                "character": 29
            }
        },
        "children": [
            {
                "name": "fmt",
                "detail": "fn(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 54,
                        "character": 4
                    },
                    "end": {
                        "line": 77,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 54,
                        "character": 7
                    },
                    "end": {
                        "line": 54,
                        "character": 10
                    }
                }
            }
        ]
    }
]


[Trace - 4:40:48 PM] Received response 'textDocument/codeAction - (2)' in 2ms.
Result: []


[Trace - 4:40:48 PM] Sending request 'textDocument/inlayHint - (3)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 79,
            "character": 0
        }
    }
}


[Trace - 4:40:48 PM] Received response 'textDocument/inlayHint - (3)' in 1ms.
Result: []


[Trace - 4:40:48 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "metadata"
    }
}


[Trace - 4:40:49 PM] Sending request 'textDocument/foldingRange - (4)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    }
}


[Trace - 4:40:49 PM] Received response 'textDocument/foldingRange - (4)' in 1ms.
Result: [
    {
        "startLine": 0,
        "endLine": 1,
        "kind": "imports"
    },
    {
        "startLine": 4,
        "endLine": 9
    },
    {
        "startLine": 11,
        "endLine": 51
    },
    {
        "startLine": 12,
        "endLine": 19
    },
    {
        "startLine": 13,
        "endLine": 18
    },
    {
        "startLine": 21,
        "endLine": 24
    },
    {
        "startLine": 26,
        "endLine": 31
    },
    {
        "startLine": 27,
        "endLine": 29
    },
    {
        "startLine": 33,
        "endLine": 39
    },
    {
        "startLine": 34,
        "endLine": 36
    },
    {
        "startLine": 41,
        "endLine": 44
    },
    {
        "startLine": 46,
        "endLine": 50
    },
    {
        "startLine": 53,
        "endLine": 78
    },
    {
        "startLine": 54,
        "endLine": 77
    },
    {
        "startLine": 58,
        "endLine": 70
    },
    {
        "startLine": 61,
        "endLine": 67
    },
    {
        "startLine": 64,
        "endLine": 66
    },
    {
        "startLine": 72,
        "endLine": 74
    }
]


[Trace - 4:40:49 PM] Sending request 'textDocument/codeLens - (5)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    }
}


[Trace - 4:40:49 PM] Received response 'textDocument/codeLens - (5)' in 1ms.
Result: []


[Trace - 4:40:49 PM] Received request 'client/registerCapability - (2)'.
Params: {
    "registrations": [
        {
            "id": "workspace/didChangeWatchedFiles",
            "method": "workspace/didChangeWatchedFiles",
            "registerOptions": {
                "watchers": [
                    {
                        "globPattern": "/tmp/CES.2wjciAhRCeZf/**/*.rs"
                    },
                    {
                        "globPattern": "/tmp/CES.2wjciAhRCeZf/**/Cargo.toml"
                    },
                    {
                        "globPattern": "/tmp/CES.2wjciAhRCeZf/**/Cargo.lock"
                    }
                ]
            }
        }
    ]
}


[Trace - 4:40:49 PM] Sending response 'client/registerCapability - (2)'. Processing request took 0ms
No result returned.


[Trace - 4:40:49 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:49 PM] Received request 'window/workDoneProgress/create - (3)'.
Params: {
    "token": "rustAnalyzer/Roots Scanned"
}


[Trace - 4:40:49 PM] Sending response 'window/workDoneProgress/create - (3)'. Processing request took 0ms
No result returned.


[Trace - 4:40:49 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Roots Scanned",
    "value": {
        "kind": "begin",
        "title": "Roots Scanned",
        "cancellable": false,
        "message": "0/2",
        "percentage": 0
    }
}


[Trace - 4:40:49 PM] Received request 'window/workDoneProgress/create - (4)'.
Params: {
    "token": "rustAnalyzer/Fetching"
}


[Trace - 4:40:49 PM] Sending response 'window/workDoneProgress/create - (4)'. Processing request took 0ms
No result returned.


[Trace - 4:40:49 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "begin",
        "title": "Fetching",
        "cancellable": false
    }
}


[Trace - 4:40:49 PM] Sending request 'textDocument/semanticTokens/range - (6)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 79,
            "character": 0
        }
    }
}


[Trace - 4:40:49 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Roots Scanned",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "1/2",
        "percentage": 50
    }
}


[Trace - 4:40:49 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Roots Scanned",
    "value": {
        "kind": "end",
        "message": "2/2"
    }
}


[Trace - 4:40:49 PM] Received response 'textDocument/semanticTokens/range - (6)' in 42ms.
Result: {
    "resultId": "1",
    "data": [
        0,
        0,
        3,
        6,
        0,
        0,
        4,
        4,
        9,
        9224,
        0,
        4,
        2,
        11,
        0,
        0,
        2,
        3,
        9,
        8200,
        1,
        0,
        3,
        6,
        0,
        0,
        4,
        3,
        9,
        9224,
        0,
        3,
        2,
        11,
        0,
        0,
        2,
        11,
        9,
        8200,
        0,
        11,
        2,
        11,
        0,
        0,
        2,
        7,
        15,
        0,
        2,
        0,
        1,
        21,
        32,
        0,
        1,
        1,
        21,
        32,
        0,
        1,
        6,
        9,
        32,
        0,
        7,
        5,
        38,
        32,
        0,
        7,
        5,
        38,
        32,
        0,
        6,
        1,
        21,
        32,
        1,
        0,
        3,
        6,
        0,
        0,
        4,
        6,
        6,
        0,
        0,
        7,
        7,
        15,
        65538,
        1,
        4,
        7,
        13,
        2,
        0,
        9,
        7,
        15,
        0,
        0,
        8,
        6,
        15,
        0,
        1,
        4,
        7,
        13,
        2,
        0,
        9,
        3,
        27,
        0,
        1,
        4,
        8,
        13,
        2,
        0,
        10,
        3,
        15,
        0,
        0,
        4,
        6,
        15,
        0,
        1,
        4,
        6,
        13,
        2,
        0,
        8,
        6,
        15,
        0,
        3,
        0,
        4,
        6,
        0,
        0,
        5,
        7,
        15,
        65536,
        1,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        65542,
        0,
        4,
        6,
        12,
        2,
        0,
        8,
        6,
        15,
        0,
        0,
        8,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        46,
        0,
        1,
        12,
        7,
        13,
        0,
        0,
        9,
        7,
        15,
        0,
        0,
        7,
        2,
        11,
        0,
        0,
        2,
        3,
        4,
        0,
        1,
        12,
        7,
        13,
        0,
        0,
        9,
        1,
        10,
        0,
        1,
        12,
        8,
        13,
        0,
        0,
        10,
        3,
        7,
        0,
        0,
        3,
        1,
        7,
        0,
        1,
        12,
        6,
        13,
        0,
        4,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        7,
        8,
        65794,
        0,
        8,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        3,
        12,
        2,
        0,
        5,
        4,
        6,
        0,
        0,
        5,
        5,
        15,
        0,
        0,
        6,
        3,
        27,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        8,
        13,
        0,
        0,
        8,
        1,
        11,
        0,
        0,
        1,
        4,
        4,
        0,
        0,
        5,
        3,
        12,
        0,
        0,
        3,
        1,
        11,
        0,
        0,
        1,
        6,
        4,
        0,
        0,
        8,
        1,
        11,
        0,
        0,
        1,
        9,
        4,
        0,
        1,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        65794,
        0,
        4,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        3,
        12,
        2,
        0,
        5,
        3,
        27,
        0,
        0,
        5,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        2,
        6,
        512,
        0,
        3,
        3,
        12,
        0,
        0,
        4,
        1,
        11,
        0,
        0,
        2,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        1,
        12,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        8,
        1,
        11,
        0,
        0,
        2,
        3,
        12,
        0,
        2,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        5,
        8,
        65794,
        0,
        6,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        5,
        12,
        2,
        0,
        7,
        7,
        15,
        65536,
        0,
        9,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        3,
        6,
        512,
        0,
        4,
        1,
        17,
        2,
        0,
        2,
        2,
        6,
        512,
        0,
        3,
        5,
        12,
        0,
        0,
        5,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        1,
        12,
        4,
        45,
        32768,
        0,
        5,
        1,
        11,
        0,
        0,
        2,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        8,
        65792,
        0,
        8,
        1,
        17,
        256,
        3,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        65794,
        0,
        4,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        5,
        12,
        2,
        0,
        7,
        4,
        27,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        6,
        4,
        0,
        0,
        7,
        5,
        12,
        0,
        0,
        5,
        1,
        11,
        0,
        0,
        1,
        9,
        4,
        0,
        1,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        7,
        8,
        65794,
        0,
        8,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        5,
        12,
        2,
        0,
        7,
        4,
        6,
        0,
        0,
        5,
        5,
        15,
        0,
        0,
        6,
        3,
        27,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        6,
        4,
        0,
        0,
        7,
        5,
        12,
        0,
        0,
        5,
        1,
        11,
        0,
        0,
        1,
        6,
        4,
        0,
        0,
        8,
        1,
        11,
        0,
        0,
        1,
        9,
        4,
        0,
        1,
        8,
        4,
        45,
        32768,
        1,
        8,
        162,
        0,
        0,
        4,
        0,
        4,
        6,
        0,
        0,
        5,
        3,
        9,
        8200,
        0,
        3,
        2,
        11,
        0,
        0,
        2,
        7,
        15,
        0,
        0,
        8,
        3,
        6,
        0,
        0,
        4,
        7,
        15,
        65536,
        1,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        131074,
        0,
        5,
        4,
        45,
        131074,
        0,
        6,
        1,
        12,
        163842,
        0,
        4,
        3,
        6,
        0,
        0,
        4,
        3,
        9,
        8200,
        0,
        3,
        2,
        11,
        0,
        0,
        2,
        9,
        15,
        0,
        0,
        10,
        2,
        40,
        0,
        0,
        5,
        2,
        11,
        0,
        0,
        3,
        3,
        9,
        8200,
        0,
        3,
        2,
        11,
        0,
        0,
        2,
        6,
        15,
        0,
        1,
        8,
        7,
        7,
        0,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        38,
        16384,
        0,
        3,
        4,
        14,
        16384,
        0,
        6,
        4,
        6,
        16384,
        0,
        4,
        1,
        11,
        16384,
        0,
        1,
        6,
        38,
        16384,
        0,
        7,
        1,
        11,
        512,
        1,
        8,
        7,
        7,
        0,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        38,
        16384,
        0,
        3,
        5,
        14,
        16384,
        0,
        7,
        3,
        14,
        16384,
        0,
        3,
        1,
        11,
        16384,
        0,
        1,
        6,
        38,
        16384,
        0,
        7,
        4,
        6,
        16384,
        0,
        4,
        1,
        11,
        16384,
        0,
        1,
        7,
        38,
        16384,
        0,
        8,
        2,
        6,
        16384,
        0,
        3,
        5,
        38,
        16384,
        0,
        7,
        1,
        11,
        512,
        2,
        8,
        2,
        6,
        512,
        0,
        3,
        1,
        11,
        0,
        0,
        1,
        4,
        45,
        131072,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        8,
        4,
        0,
        1,
        12,
        7,
        7,
        0,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        38,
        16384,
        0,
        3,
        42,
        14,
        16384,
        0,
        43,
        1,
        11,
        512,
        1,
        12,
        5,
        7,
        0,
        0,
        5,
        1,
        7,
        0,
        0,
        2,
        1,
        38,
        16384,
        0,
        3,
        20,
        14,
        16384,
        0,
        21,
        1,
        11,
        512,
        1,
        12,
        3,
        6,
        512,
        0,
        5,
        5,
        17,
        2,
        0,
        7,
        1,
        17,
        2,
        0,
        3,
        2,
        6,
        512,
        0,
        3,
        4,
        45,
        131072,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        4,
        4,
        0,
        0,
        6,
        1,
        11,
        0,
        0,
        1,
        9,
        4,
        0,
        1,
        16,
        5,
        7,
        0,
        0,
        5,
        1,
        7,
        0,
        0,
        2,
        1,
        38,
        16384,
        0,
        3,
        4,
        14,
        16384,
        0,
        6,
        1,
        38,
        16384,
        0,
        2,
        1,
        11,
        512,
        2,
        16,
        2,
        6,
        512,
        0,
        3,
        5,
        17,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        45,
        131072,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        3,
        4,
        0,
        0,
        6,
        1,
        11,
        0,
        0,
        2,
        1,
        10,
        0,
        1,
        20,
        5,
        7,
        0,
        0,
        5,
        1,
        7,
        0,
        0,
        2,
        1,
        38,
        16384,
        0,
        3,
        4,
        14,
        16384,
        0,
        5,
        1,
        11,
        512,
        3,
        12,
        7,
        7,
        0,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        38,
        16384,
        0,
        3,
        3,
        14,
        16384,
        0,
        4,
        1,
        11,
        512,
        1,
        12,
        7,
        7,
        0,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        38,
        16384,
        0,
        2,
        1,
        11,
        512,
        3,
        8,
        3,
        6,
        512,
        0,
        4,
        1,
        17,
        2,
        0,
        2,
        2,
        6,
        512,
        0,
        3,
        1,
        11,
        0,
        0,
        1,
        4,
        45,
        131072,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        8,
        13,
        0,
        1,
        12,
        7,
        7,
        0,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        38,
        16384,
        0,
        3,
        4,
        14,
        16384,
        0,
        6,
        1,
        38,
        16384,
        0,
        2,
        1,
        11,
        512,
        3,
        8,
        2,
        4,
        0
    ]
}


[Trace - 4:40:49 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "metadata"
    }
}


[Trace - 4:40:49 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:49 PM] Received request 'workspace/semanticTokens/refresh - (5)'.
[Trace - 4:40:49 PM] Sending response 'workspace/semanticTokens/refresh - (5)'. Processing request took 0ms
No result returned.


[Trace - 4:40:49 PM] Received request 'workspace/codeLens/refresh - (6)'.
[Trace - 4:40:49 PM] Sending response 'workspace/codeLens/refresh - (6)'. Processing request took 0ms
No result returned.


[Trace - 4:40:49 PM] Received request 'workspace/inlayHint/refresh - (7)'.
[Trace - 4:40:49 PM] Sending response 'workspace/inlayHint/refresh - (7)'. Processing request took 0ms
No result returned.


[Trace - 4:40:49 PM] Received request 'window/workDoneProgress/create - (8)'.
Params: {
    "token": "rustAnalyzer/Fetching"
}


[Trace - 4:40:49 PM] Sending response 'window/workDoneProgress/create - (8)'. Processing request took 0ms
No result returned.


[Trace - 4:40:49 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "begin",
        "title": "Fetching",
        "cancellable": false
    }
}


[Trace - 4:40:49 PM] Sending request 'textDocument/semanticTokens/full - (7)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    }
}


[Trace - 4:40:49 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "metadata"
    }
}


[Trace - 4:40:49 PM] Sending request 'textDocument/codeLens - (8)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    }
}


[Trace - 4:40:49 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:49 PM] Received request 'workspace/semanticTokens/refresh - (9)'.
[Trace - 4:40:49 PM] Sending response 'workspace/semanticTokens/refresh - (9)'. Processing request took 0ms
No result returned.


[Trace - 4:40:49 PM] Received request 'workspace/codeLens/refresh - (10)'.
[Trace - 4:40:49 PM] Sending response 'workspace/codeLens/refresh - (10)'. Processing request took 0ms
No result returned.


[Trace - 4:40:49 PM] Received request 'workspace/inlayHint/refresh - (11)'.
[Trace - 4:40:49 PM] Sending response 'workspace/inlayHint/refresh - (11)'. Processing request took 0ms
No result returned.


[Trace - 4:40:49 PM] Received request 'window/workDoneProgress/create - (12)'.
Params: {
    "token": "rustAnalyzer/Building"
}


[Trace - 4:40:49 PM] Sending response 'window/workDoneProgress/create - (12)'. Processing request took 0ms
No result returned.


[Trace - 4:40:49 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "begin",
        "title": "Building",
        "cancellable": false
    }
}


[Trace - 4:40:49 PM] Received request 'window/workDoneProgress/create - (13)'.
Params: {
    "token": "rustAnalyzer/Loading"
}


[Trace - 4:40:49 PM] Sending response 'window/workDoneProgress/create - (13)'. Processing request took 0ms
No result returned.


[Trace - 4:40:49 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Loading",
    "value": {
        "kind": "begin",
        "title": "Loading",
        "cancellable": false
    }
}


[Trace - 4:40:49 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Loading",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "building proc-macros: code-exploration-services"
    }
}


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "building proc-macros: code-exploration-services"
    }
}


[Trace - 4:40:50 PM] Received request 'client/registerCapability - (14)'.
Params: {
    "registrations": [
        {
            "id": "workspace/didChangeWatchedFiles",
            "method": "workspace/didChangeWatchedFiles",
            "registerOptions": {
                "watchers": [
                    {
                        "globPattern": "/tmp/CES.2wjciAhRCeZf/**/*.rs"
                    },
                    {
                        "globPattern": "/tmp/CES.2wjciAhRCeZf/**/Cargo.toml"
                    },
                    {
                        "globPattern": "/tmp/CES.2wjciAhRCeZf/**/Cargo.lock"
                    }
                ]
            }
        }
    ]
}


[Trace - 4:40:50 PM] Sending response 'client/registerCapability - (14)'. Processing request took 1ms
No result returned.


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:50 PM] Received request 'window/workDoneProgress/create - (15)'.
Params: {
    "token": "rustAnalyzer/Roots Scanned"
}


[Trace - 4:40:50 PM] Sending response 'window/workDoneProgress/create - (15)'. Processing request took 0ms
No result returned.


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Roots Scanned",
    "value": {
        "kind": "begin",
        "title": "Roots Scanned",
        "cancellable": false,
        "message": "0/2",
        "percentage": 0
    }
}


[Trace - 4:40:50 PM] Received request 'window/workDoneProgress/create - (16)'.
Params: {
    "token": "rustAnalyzer/Loading"
}


[Trace - 4:40:50 PM] Sending response 'window/workDoneProgress/create - (16)'. Processing request took 0ms
No result returned.


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Loading",
    "value": {
        "kind": "begin",
        "title": "Loading",
        "cancellable": false
    }
}


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Loading",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Roots Scanned",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "1/2",
        "percentage": 50
    }
}


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Roots Scanned",
    "value": {
        "kind": "end",
        "message": "2/2"
    }
}


[Trace - 4:40:50 PM] Received request 'workspace/semanticTokens/refresh - (17)'.
[Trace - 4:40:50 PM] Sending response 'workspace/semanticTokens/refresh - (17)'. Processing request took 0ms
No result returned.


[Trace - 4:40:50 PM] Received request 'workspace/codeLens/refresh - (18)'.
[Trace - 4:40:50 PM] Sending response 'workspace/codeLens/refresh - (18)'. Processing request took 0ms
No result returned.


[Trace - 4:40:50 PM] Received request 'workspace/inlayHint/refresh - (19)'.
[Trace - 4:40:50 PM] Sending response 'workspace/inlayHint/refresh - (19)'. Processing request took 0ms
No result returned.


[Trace - 4:40:50 PM] Received notification 'experimental/serverStatus'.
Params: {
    "health": "ok",
    "quiescent": true,
    "message": null
}


[Trace - 4:40:50 PM] Received request 'window/workDoneProgress/create - (20)'.
Params: {
    "token": "rustAnalyzer/Indexing"
}


[Trace - 4:40:50 PM] Sending response 'window/workDoneProgress/create - (20)'. Processing request took 0ms
No result returned.


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "begin",
        "title": "Indexing",
        "cancellable": false,
        "percentage": 0
    }
}


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "0/5 (core + 1 more)",
        "percentage": 0
    }
}


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "1/5 (core)",
        "percentage": 20
    }
}


[Trace - 4:40:50 PM] Received request 'window/workDoneProgress/create - (21)'.
Params: {
    "token": "rust-analyzer/flycheck/0"
}


[Trace - 4:40:50 PM] Sending response 'window/workDoneProgress/create - (21)'. Processing request took 0ms
No result returned.


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rust-analyzer/flycheck/0",
    "value": {
        "kind": "begin",
        "title": "cargo check",
        "cancellable": true
    }
}


[Trace - 4:40:50 PM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 12,
                    "character": 11
                },
                "end": {
                    "line": 12,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "associated function `new` is never used\n`#[warn(dead_code)]` on by default",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `new` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:13:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(source: String) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 21,
                    "character": 11
                },
                "end": {
                    "line": 21,
                    "character": 18
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `message` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `message` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:22:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn message(mut self, msg: impl AsRef<str>) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 26,
                    "character": 11
                },
                "end": {
                    "line": 26,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `pos` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `pos` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:27:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn pos(mut self, pos: u64) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 33,
                    "character": 11
                },
                "end": {
                    "line": 33,
                    "character": 16
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `merge` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `merge` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:34:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn merge(mut self, other: Options) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 41,
                    "character": 11
                },
                "end": {
                    "line": 41,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `add` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `add` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:42:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add(mut self, value: char) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 46,
                    "character": 11
                },
                "end": {
                    "line": 46,
                    "character": 18
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `add_str` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `add_str` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:47:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add_str(mut self, value: impl AsRef<str>) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"
            }
        }
    ],
    "version": 1
}


[Trace - 4:40:50 PM] Sending notification '$/cancelRequest'.
Params: {
    "id": 8
}


[Trace - 4:40:50 PM] Sending request 'textDocument/codeLens - (9)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    }
}


[Trace - 4:40:50 PM] Received response 'textDocument/codeLens - (8)' in 432ms. Request failed: canceled by client (-32800).
[Trace - 4:40:50 PM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/main.rs",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 1,
                    "character": 9
                },
                "end": {
                    "line": 1,
                    "character": 9
                }
            },
            "severity": 1,
            "code": "E0601",
            "codeDescription": {
                "href": "https://doc.rust-lang.org/error-index.html#E0601"
            },
            "source": "rustc",
            "message": "`main` function not found in crate `code_exploration_services`\nconsider adding a `main` function to `src/main.rs`",
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[38;5;9merror[E0601]\u001b[0m\u001b[0m\u001b[1m: `main` function not found in crate `code_exploration_services`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:2:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmod test;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mconsider adding a `main` function to `src/main.rs`\u001b[0m\n\n"
            }
        }
    ]
}


[Trace - 4:40:50 PM] Received notification '$/progress'.
Params: {
    "token": "rust-analyzer/flycheck/0",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:50 PM] Sending request 'textDocument/codeAction - (10)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 29,
            "character": 8
        },
        "end": {
            "line": 29,
            "character": 8
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 4:40:51 PM] Sending request 'textDocument/inlayHint - (11)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 72,
            "character": 33
        }
    }
}


[Trace - 4:40:51 PM] Sending request 'textDocument/semanticTokens/range - (12)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 42,
            "character": 47
        }
    }
}


[Trace - 4:40:51 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "percentage": 40
    }
}


[Trace - 4:40:51 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "2/5 (alloc)",
        "percentage": 40
    }
}


[Trace - 4:40:52 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "percentage": 60
    }
}


[Trace - 4:40:52 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "3/5 (std)",
        "percentage": 60
    }
}


[Trace - 4:40:52 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "4/5 (proc_macro)",
        "percentage": 80
    }
}


[Trace - 4:40:52 PM] Received response 'textDocument/codeLens - (9)' in 2193ms.
Result: [
    {
        "range": {
            "start": {
                "line": 4,
                "character": 11
            },
            "end": {
                "line": 4,
                "character": 18
            }
        },
        "data": {
            "version": 1,
            "kind": {
                "impls": {
                    "textDocument": {
                        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
                    },
                    "position": {
                        "line": 4,
                        "character": 11
                    }
                }
            }
        }
    }
]


[Trace - 4:40:52 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "percentage": 100
    }
}


[Trace - 4:40:52 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:52 PM] Sending notification '$/cancelRequest'.
Params: {
    "id": 11
}


[Trace - 4:40:52 PM] Sending request 'textDocument/inlayHint - (13)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 72,
            "character": 33
        }
    }
}


[Trace - 4:40:52 PM] Received response 'textDocument/inlayHint - (11)' in 1204ms. Request failed: canceled by client (-32800).
[Trace - 4:40:52 PM] Sending request 'textDocument/semanticTokens/range - (14)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 42,
            "character": 47
        }
    }
}


[Trace - 4:40:53 PM] Sending request 'codeLens/resolve - (15)'.
Params: {
    "range": {
        "start": {
            "line": 4,
            "character": 11
        },
        "end": {
            "line": 4,
            "character": 18
        }
    },
    "data": {
        "version": 1,
        "kind": {
            "impls": {
                "textDocument": {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
                },
                "position": {
                    "line": 4,
                    "character": 11
                }
            }
        }
    }
}


[Trace - 4:40:53 PM] Received response 'codeLens/resolve - (15)' in 45ms.
Result: {
    "range": {
        "start": {
            "line": 4,
            "character": 11
        },
        "end": {
            "line": 4,
            "character": 18
        }
    },
    "command": {
        "title": "4 implementations",
        "command": "rust-analyzer.showReferences",
        "arguments": [
            "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
            {
                "line": 4,
                "character": 11
            },
            [
                {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
                    "range": {
                        "start": {
                            "line": 11,
                            "character": 0
                        },
                        "end": {
                            "line": 51,
                            "character": 1
                        }
                    }
                },
                {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
                    "range": {
                        "start": {
                            "line": 3,
                            "character": 0
                        },
                        "end": {
                            "line": 3,
                            "character": 23
                        }
                    }
                },
                {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
                    "range": {
                        "start": {
                            "line": 3,
                            "character": 0
                        },
                        "end": {
                            "line": 3,
                            "character": 23
                        }
                    }
                },
                {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
                    "range": {
                        "start": {
                            "line": 53,
                            "character": 0
                        },
                        "end": {
                            "line": 78,
                            "character": 1
                        }
                    }
                }
            ]
        ]
    },
    "data": {
        "version": 1,
        "kind": {
            "impls": {
                "textDocument": {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
                },
                "position": {
                    "line": 4,
                    "character": 11
                }
            }
        }
    }
}


[Trace - 4:40:53 PM] Received response 'textDocument/semanticTokens/range - (14)' in 1237ms.
Result: {
    "resultId": "2",
    "data": [
        0,
        0,
        3,
        6,
        0,
        0,
        4,
        4,
        9,
        9224,
        0,
        4,
        2,
        11,
        0,
        0,
        2,
        3,
        9,
        8200,
        1,
        0,
        3,
        6,
        0,
        0,
        4,
        3,
        9,
        9224,
        0,
        3,
        2,
        11,
        0,
        0,
        2,
        11,
        9,
        8200,
        0,
        11,
        2,
        11,
        0,
        0,
        2,
        7,
        15,
        8200,
        2,
        0,
        1,
        21,
        32,
        0,
        1,
        1,
        21,
        32,
        0,
        1,
        6,
        1,
        8232,
        0,
        7,
        5,
        33,
        8232,
        0,
        7,
        5,
        33,
        8232,
        0,
        6,
        1,
        21,
        32,
        1,
        0,
        3,
        6,
        0,
        0,
        4,
        6,
        6,
        0,
        0,
        7,
        7,
        15,
        65538,
        1,
        4,
        7,
        13,
        2,
        0,
        9,
        7,
        15,
        8200,
        0,
        8,
        6,
        15,
        8200,
        1,
        4,
        7,
        13,
        2,
        0,
        9,
        3,
        27,
        0,
        1,
        4,
        8,
        13,
        2,
        0,
        10,
        3,
        15,
        8200,
        0,
        4,
        6,
        15,
        8200,
        1,
        4,
        6,
        13,
        2,
        0,
        8,
        6,
        15,
        8200,
        3,
        0,
        4,
        6,
        0,
        0,
        5,
        7,
        15,
        65536,
        1,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        65542,
        0,
        4,
        6,
        12,
        2,
        0,
        8,
        6,
        15,
        8200,
        0,
        8,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        46,
        0,
        1,
        12,
        7,
        13,
        0,
        0,
        9,
        7,
        15,
        8200,
        0,
        7,
        2,
        11,
        0,
        0,
        2,
        3,
        8,
        8204,
        1,
        12,
        7,
        13,
        0,
        0,
        9,
        1,
        10,
        0,
        1,
        12,
        8,
        13,
        0,
        0,
        10,
        3,
        7,
        8200,
        0,
        3,
        1,
        7,
        0,
        1,
        12,
        6,
        13,
        0,
        4,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        7,
        8,
        65794,
        0,
        8,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        3,
        12,
        2,
        0,
        5,
        4,
        6,
        0,
        0,
        5,
        5,
        5,
        8200,
        0,
        6,
        3,
        27,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        8,
        13,
        0,
        0,
        8,
        1,
        11,
        0,
        0,
        1,
        4,
        8,
        172040,
        0,
        5,
        3,
        12,
        0,
        0,
        3,
        1,
        11,
        0,
        0,
        1,
        6,
        8,
        401416,
        0,
        8,
        1,
        11,
        0,
        0,
        1,
        9,
        8,
        401416,
        1,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        65794,
        0,
        4,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        3,
        12,
        2,
        0,
        5,
        3,
        27,
        0,
        0,
        5,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        2,
        6,
        512,
        0,
        3,
        3,
        12,
        0,
        0,
        4,
        1,
        11,
        0,
        0,
        2,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        1,
        12,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        8,
        1,
        11,
        0,
        0,
        2,
        3,
        12,
        0,
        2,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        5,
        8,
        65794,
        0,
        6,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        5,
        12,
        2,
        0,
        7,
        7,
        15,
        65536,
        0,
        9,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        3,
        6,
        512,
        0,
        4,
        1,
        17,
        2,
        0,
        2,
        2,
        6,
        512,
        0,
        3,
        5,
        12,
        0,
        0,
        5,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        1,
        12,
        4,
        45,
        32768,
        0,
        5,
        1,
        11,
        0,
        0,
        2,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        8,
        65792,
        0,
        8,
        1,
        17,
        256,
        3,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        65794,
        0,
        4,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        5,
        12,
        2,
        0,
        7,
        4,
        27,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        6,
        8,
        172040,
        0,
        7,
        5,
        12,
        0,
        0,
        5,
        1,
        11,
        0,
        0,
        1,
        9,
        8,
        401416
    ]
}


[Trace - 4:40:53 PM] Received response 'textDocument/semanticTokens/range - (12)' in 2472ms.
Result: {
    "resultId": "3",
    "data": [
        0,
        0,
        3,
        6,
        0,
        0,
        4,
        4,
        9,
        9224,
        0,
        4,
        2,
        11,
        0,
        0,
        2,
        3,
        9,
        8200,
        1,
        0,
        3,
        6,
        0,
        0,
        4,
        3,
        9,
        9224,
        0,
        3,
        2,
        11,
        0,
        0,
        2,
        11,
        9,
        8200,
        0,
        11,
        2,
        11,
        0,
        0,
        2,
        7,
        15,
        8200,
        2,
        0,
        1,
        21,
        32,
        0,
        1,
        1,
        21,
        32,
        0,
        1,
        6,
        1,
        8232,
        0,
        7,
        5,
        33,
        8232,
        0,
        7,
        5,
        33,
        8232,
        0,
        6,
        1,
        21,
        32,
        1,
        0,
        3,
        6,
        0,
        0,
        4,
        6,
        6,
        0,
        0,
        7,
        7,
        15,
        65538,
        1,
        4,
        7,
        13,
        2,
        0,
        9,
        7,
        15,
        8200,
        0,
        8,
        6,
        15,
        8200,
        1,
        4,
        7,
        13,
        2,
        0,
        9,
        3,
        27,
        0,
        1,
        4,
        8,
        13,
        2,
        0,
        10,
        3,
        15,
        8200,
        0,
        4,
        6,
        15,
        8200,
        1,
        4,
        6,
        13,
        2,
        0,
        8,
        6,
        15,
        8200,
        3,
        0,
        4,
        6,
        0,
        0,
        5,
        7,
        15,
        65536,
        1,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        65542,
        0,
        4,
        6,
        12,
        2,
        0,
        8,
        6,
        15,
        8200,
        0,
        8,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        46,
        0,
        1,
        12,
        7,
        13,
        0,
        0,
        9,
        7,
        15,
        8200,
        0,
        7,
        2,
        11,
        0,
        0,
        2,
        3,
        8,
        8204,
        1,
        12,
        7,
        13,
        0,
        0,
        9,
        1,
        10,
        0,
        1,
        12,
        8,
        13,
        0,
        0,
        10,
        3,
        7,
        8200,
        0,
        3,
        1,
        7,
        0,
        1,
        12,
        6,
        13,
        0,
        4,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        7,
        8,
        65794,
        0,
        8,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        3,
        12,
        2,
        0,
        5,
        4,
        6,
        0,
        0,
        5,
        5,
        5,
        8200,
        0,
        6,
        3,
        27,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        8,
        13,
        0,
        0,
        8,
        1,
        11,
        0,
        0,
        1,
        4,
        8,
        172040,
        0,
        5,
        3,
        12,
        0,
        0,
        3,
        1,
        11,
        0,
        0,
        1,
        6,
        8,
        401416,
        0,
        8,
        1,
        11,
        0,
        0,
        1,
        9,
        8,
        401416,
        1,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        65794,
        0,
        4,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        3,
        12,
        2,
        0,
        5,
        3,
        27,
        0,
        0,
        5,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        2,
        6,
        512,
        0,
        3,
        3,
        12,
        0,
        0,
        4,
        1,
        11,
        0,
        0,
        2,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        1,
        12,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        8,
        1,
        11,
        0,
        0,
        2,
        3,
        12,
        0,
        2,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        5,
        8,
        65794,
        0,
        6,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        5,
        12,
        2,
        0,
        7,
        7,
        15,
        65536,
        0,
        9,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        3,
        6,
        512,
        0,
        4,
        1,
        17,
        2,
        0,
        2,
        2,
        6,
        512,
        0,
        3,
        5,
        12,
        0,
        0,
        5,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        1,
        12,
        4,
        45,
        32768,
        0,
        5,
        1,
        11,
        0,
        0,
        2,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        8,
        65792,
        0,
        8,
        1,
        17,
        256,
        3,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        65794,
        0,
        4,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        5,
        12,
        2,
        0,
        7,
        4,
        27,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        6,
        8,
        172040,
        0,
        7,
        5,
        12,
        0,
        0,
        5,
        1,
        11,
        0,
        0,
        1,
        9,
        8,
        401416
    ]
}


[Trace - 4:40:53 PM] Received response 'textDocument/semanticTokens/full - (7)' in 4226ms.
Result: {
    "resultId": "4",
    "data": [
        0,
        0,
        3,
        6,
        0,
        0,
        4,
        4,
        9,
        9224,
        0,
        4,
        2,
        11,
        0,
        0,
        2,
        3,
        9,
        8200,
        1,
        0,
        3,
        6,
        0,
        0,
        4,
        3,
        9,
        9224,
        0,
        3,
        2,
        11,
        0,
        0,
        2,
        11,
        9,
        8200,
        0,
        11,
        2,
        11,
        0,
        0,
        2,
        7,
        15,
        8200,
        2,
        0,
        1,
        21,
        32,
        0,
        1,
        1,
        21,
        32,
        0,
        1,
        6,
        1,
        8232,
        0,
        7,
        5,
        33,
        8232,
        0,
        7,
        5,
        33,
        8232,
        0,
        6,
        1,
        21,
        32,
        1,
        0,
        3,
        6,
        0,
        0,
        4,
        6,
        6,
        0,
        0,
        7,
        7,
        15,
        65538,
        1,
        4,
        7,
        13,
        2,
        0,
        9,
        7,
        15,
        8200,
        0,
        8,
        6,
        15,
        8200,
        1,
        4,
        7,
        13,
        2,
        0,
        9,
        3,
        27,
        0,
        1,
        4,
        8,
        13,
        2,
        0,
        10,
        3,
        15,
        8200,
        0,
        4,
        6,
        15,
        8200,
        1,
        4,
        6,
        13,
        2,
        0,
        8,
        6,
        15,
        8200,
        3,
        0,
        4,
        6,
        0,
        0,
        5,
        7,
        15,
        65536,
        1,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        65542,
        0,
        4,
        6,
        12,
        2,
        0,
        8,
        6,
        15,
        8200,
        0,
        8,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        46,
        0,
        1,
        12,
        7,
        13,
        0,
        0,
        9,
        7,
        15,
        8200,
        0,
        7,
        2,
        11,
        0,
        0,
        2,
        3,
        8,
        8204,
        1,
        12,
        7,
        13,
        0,
        0,
        9,
        1,
        10,
        0,
        1,
        12,
        8,
        13,
        0,
        0,
        10,
        3,
        7,
        8200,
        0,
        3,
        1,
        7,
        0,
        1,
        12,
        6,
        13,
        0,
        4,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        7,
        8,
        65794,
        0,
        8,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        3,
        12,
        2,
        0,
        5,
        4,
        6,
        0,
        0,
        5,
        5,
        5,
        8200,
        0,
        6,
        3,
        27,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        8,
        13,
        0,
        0,
        8,
        1,
        11,
        0,
        0,
        1,
        4,
        8,
        172040,
        0,
        5,
        3,
        12,
        0,
        0,
        3,
        1,
        11,
        0,
        0,
        1,
        6,
        8,
        401416,
        0,
        8,
        1,
        11,
        0,
        0,
        1,
        9,
        8,
        401416,
        1,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        65794,
        0,
        4,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        3,
        12,
        2,
        0,
        5,
        3,
        27,
        0,
        0,
        5,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        2,
        6,
        512,
        0,
        3,
        3,
        12,
        0,
        0,
        4,
        1,
        11,
        0,
        0,
        2,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        1,
        12,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        8,
        1,
        11,
        0,
        0,
        2,
        3,
        12,
        0,
        2,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        5,
        8,
        65794,
        0,
        6,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        5,
        12,
        2,
        0,
        7,
        7,
        15,
        65536,
        0,
        9,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        3,
        6,
        512,
        0,
        4,
        1,
        17,
        2,
        0,
        2,
        2,
        6,
        512,
        0,
        3,
        5,
        12,
        0,
        0,
        5,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        1,
        12,
        4,
        45,
        32768,
        0,
        5,
        1,
        11,
        0,
        0,
        2,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        8,
        65792,
        0,
        8,
        1,
        17,
        256,
        3,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        65794,
        0,
        4,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        5,
        12,
        2,
        0,
        7,
        4,
        27,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        6,
        8,
        172040,
        0,
        7,
        5,
        12,
        0,
        0,
        5,
        1,
        11,
        0,
        0,
        1,
        9,
        8,
        401416,
        1,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        7,
        8,
        65794,
        0,
        8,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        5,
        12,
        2,
        0,
        7,
        4,
        6,
        0,
        0,
        5,
        5,
        5,
        8200,
        0,
        6,
        3,
        27,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        6,
        8,
        172040,
        0,
        7,
        5,
        12,
        0,
        0,
        5,
        1,
        11,
        0,
        0,
        1,
        6,
        8,
        401416,
        0,
        8,
        1,
        11,
        0,
        0,
        1,
        9,
        8,
        401416,
        1,
        8,
        4,
        45,
        32768,
        1,
        8,
        162,
        0,
        0,
        4,
        0,
        4,
        6,
        0,
        0,
        5,
        3,
        9,
        8200,
        0,
        3,
        2,
        11,
        0,
        0,
        2,
        7,
        5,
        8200,
        0,
        8,
        3,
        6,
        0,
        0,
        4,
        7,
        15,
        65536,
        1,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        393218,
        0,
        5,
        4,
        45,
        131074,
        0,
        6,
        1,
        12,
        163842,
        0,
        4,
        3,
        6,
        0,
        0,
        4,
        3,
        9,
        8200,
        0,
        3,
        2,
        11,
        0,
        0,
        2,
        9,
        15,
        8200,
        0,
        10,
        2,
        40,
        0,
        0,
        5,
        2,
        11,
        0,
        0,
        3,
        3,
        9,
        8200,
        0,
        3,
        2,
        11,
        0,
        0,
        2,
        6,
        48,
        8200,
        1,
        8,
        7,
        7,
        8200,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        1,
        14,
        16384,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        14,
        16384,
        0,
        3,
        4,
        45,
        147456,
        0,
        4,
        1,
        11,
        16384,
        0,
        1,
        6,
        13,
        16384,
        0,
        7,
        1,
        11,
        512,
        1,
        8,
        7,
        7,
        8200,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        1,
        14,
        16384,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        2,
        14,
        16384,
        0,
        4,
        3,
        14,
        16384,
        0,
        3,
        1,
        11,
        16384,
        0,
        1,
        6,
        8,
        155656,
        0,
        7,
        4,
        45,
        147456,
        0,
        4,
        1,
        11,
        16384,
        0,
        1,
        7,
        13,
        16384,
        0,
        8,
        2,
        6,
        16384,
        0,
        3,
        5,
        27,
        16384,
        0,
        7,
        1,
        11,
        512,
        2,
        8,
        2,
        6,
        512,
        0,
        3,
        1,
        11,
        0,
        0,
        1,
        4,
        45,
        131072,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        8,
        8,
        139272,
        1,
        12,
        7,
        7,
        8200,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        42,
        14,
        16384,
        0,
        43,
        1,
        11,
        512,
        1,
        12,
        5,
        7,
        8200,
        0,
        5,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        20,
        14,
        16384,
        0,
        21,
        1,
        11,
        512,
        1,
        12,
        3,
        6,
        512,
        0,
        5,
        5,
        17,
        2,
        0,
        7,
        1,
        17,
        131074,
        0,
        3,
        2,
        6,
        512,
        0,
        3,
        4,
        45,
        131072,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        4,
        8,
        139272,
        0,
        6,
        1,
        11,
        0,
        0,
        1,
        9,
        8,
        270600,
        1,
        16,
        5,
        7,
        8200,
        0,
        5,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        1,
        14,
        16384,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        14,
        16384,
        0,
        3,
        1,
        17,
        147456,
        0,
        2,
        1,
        11,
        512,
        2,
        16,
        2,
        6,
        512,
        0,
        3,
        5,
        17,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        45,
        131072,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        3,
        8,
        139272,
        0,
        6,
        1,
        11,
        0,
        0,
        2,
        1,
        10,
        0,
        1,
        20,
        5,
        7,
        8200,
        0,
        5,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        4,
        14,
        16384,
        0,
        5,
        1,
        11,
        512,
        3,
        12,
        7,
        7,
        8200,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        3,
        14,
        16384,
        0,
        4,
        1,
        11,
        512,
        1,
        12,
        7,
        7,
        8200,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        2,
        1,
        11,
        512,
        3,
        8,
        3,
        6,
        512,
        0,
        4,
        1,
        17,
        131074,
        0,
        2,
        2,
        6,
        512,
        0,
        3,
        1,
        11,
        0,
        0,
        1,
        4,
        45,
        131072,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        8,
        13,
        0,
        1,
        12,
        7,
        7,
        8200,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        1,
        14,
        16384,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        14,
        16384,
        0,
        3,
        1,
        17,
        147456,
        0,
        2,
        1,
        11,
        512,
        3,
        8,
        2,
        2,
        8200
    ]
}


[Trace - 4:40:53 PM] Received response 'textDocument/inlayHint - (13)' in 1327ms.
Result: [
    {
        "position": {
            "line": 51,
            "character": 1
        },
        "label": "impl Options",
        "paddingLeft": true,
        "paddingRight": false
    },
    {
        "position": {
            "line": 34,
            "character": 13
        },
        "label": [
            {
                "value": ": "
            },
            {
                "value": "String",
                "location": {
                    "uri": "file:///home/jonathan/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/string.rs",
                    "range": {
                        "start": {
                            "line": 364,
                            "character": 11
                        },
                        "end": {
                            "line": 364,
                            "character": 17
                        }
                    }
                }
            },
            {
                "value": ""
            }
        ],
        "kind": 1,
        "paddingLeft": false,
        "paddingRight": false
    },
    {
        "position": {
            "line": 78,
            "character": 1
        },
        "label": "impl Display for Options",
        "paddingLeft": true,
        "paddingRight": false
    },
    {
        "position": {
            "line": 61,
            "character": 22
        },
        "label": ": usize",
        "kind": 1,
        "paddingLeft": false,
        "paddingRight": false
    },
    {
        "position": {
            "line": 61,
            "character": 25
        },
        "label": [
            {
                "value": ": &"
            },
            {
                "value": "String",
                "location": {
                    "uri": "file:///home/jonathan/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/string.rs",
                    "range": {
                        "start": {
                            "line": 364,
                            "character": 11
                        },
                        "end": {
                            "line": 364,
                            "character": 17
                        }
                    }
                }
            },
            {
                "value": ""
            }
        ],
        "kind": 1,
        "paddingLeft": false,
        "paddingRight": false
    },
    {
        "position": {
            "line": 72,
            "character": 13
        },
        "label": [
            {
                "value": ": &"
            },
            {
                "value": "String",
                "location": {
                    "uri": "file:///home/jonathan/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/string.rs",
                    "range": {
                        "start": {
                            "line": 364,
                            "character": 11
                        },
                        "end": {
                            "line": 364,
                            "character": 17
                        }
                    }
                }
            },
            {
                "value": ""
            }
        ],
        "kind": 1,
        "paddingLeft": false,
        "paddingRight": false
    }
]


[Trace - 4:40:53 PM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 12,
                    "character": 11
                },
                "end": {
                    "line": 12,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "associated function `new` is never used\n`#[warn(dead_code)]` on by default",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `new` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:13:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(source: String) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 21,
                    "character": 11
                },
                "end": {
                    "line": 21,
                    "character": 18
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `message` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `message` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:22:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn message(mut self, msg: impl AsRef<str>) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 26,
                    "character": 11
                },
                "end": {
                    "line": 26,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `pos` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `pos` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:27:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn pos(mut self, pos: u64) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 33,
                    "character": 11
                },
                "end": {
                    "line": 33,
                    "character": 16
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `merge` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `merge` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:34:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn merge(mut self, other: Options) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 41,
                    "character": 11
                },
                "end": {
                    "line": 41,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `add` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `add` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:42:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add(mut self, value: char) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 46,
                    "character": 11
                },
                "end": {
                    "line": 46,
                    "character": 18
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `add_str` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `add_str` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:47:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add_str(mut self, value: impl AsRef<str>) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"
            }
        }
    ],
    "version": 1
}


[Trace - 4:40:53 PM] Received response 'textDocument/codeAction - (10)' in 3354ms.
Result: []


[Trace - 4:40:54 PM] Sending request 'textDocument/codeAction - (16)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 29,
            "character": 8
        },
        "end": {
            "line": 29,
            "character": 8
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 4:40:54 PM] Received response 'textDocument/codeAction - (16)' in 1ms.
Result: []


[Trace - 4:40:55 PM] Sending request 'textDocument/semanticTokens/full/delta - (17)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "previousResultId": "4"
}


[Trace - 4:40:55 PM] Received response 'textDocument/semanticTokens/full/delta - (17)' in 4ms.
Result: {
    "resultId": "5",
    "edits": []
}


[Trace - 4:40:57 PM] Sending request 'shutdown - (18)'.
[Trace - 4:40:57 PM] Received response 'shutdown - (18)' in 1ms.
No result returned.


[Trace - 4:40:57 PM] Sending notification 'exit'.
No parameters provided.


[Trace - 4:40:57 PM] Sending request 'initialize - (0)'.
Params: {
    "processId": 181217,
    "clientInfo": {
        "name": "Visual Studio Code",
        "version": "1.74.0"
    },
    "locale": "en-us",
    "rootPath": "/tmp/CES.2wjciAhRCeZf",
    "rootUri": "file:///tmp/CES.2wjciAhRCeZf",
    "capabilities": {
        "workspace": {
            "applyEdit": true,
            "workspaceEdit": {
                "documentChanges": true,
                "resourceOperations": [
                    "create",
                    "rename",
                    "delete"
                ],
                "failureHandling": "textOnlyTransactional",
                "normalizesLineEndings": true,
                "changeAnnotationSupport": {
                    "groupsOnLabel": true
                }
            },
            "configuration": true,
            "didChangeWatchedFiles": {
                "dynamicRegistration": true,
                "relativePatternSupport": true
            },
            "symbol": {
                "dynamicRegistration": true,
                "symbolKind": {
                    "valueSet": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ]
                },
                "tagSupport": {
                    "valueSet": [
                        1
                    ]
                },
                "resolveSupport": {
                    "properties": [
                        "location.range"
                    ]
                }
            },
            "codeLens": {
                "refreshSupport": true
            },
            "executeCommand": {
                "dynamicRegistration": true
            },
            "didChangeConfiguration": {
                "dynamicRegistration": true
            },
            "workspaceFolders": true,
            "semanticTokens": {
                "refreshSupport": true
            },
            "fileOperations": {
                "dynamicRegistration": true,
                "didCreate": true,
                "didRename": true,
                "didDelete": true,
                "willCreate": true,
                "willRename": true,
                "willDelete": true
            },
            "inlineValue": {
                "refreshSupport": true
            },
            "inlayHint": {
                "refreshSupport": true
            },
            "diagnostics": {
                "refreshSupport": true
            }
        },
        "textDocument": {
            "publishDiagnostics": {
                "relatedInformation": true,
                "versionSupport": false,
                "tagSupport": {
                    "valueSet": [
                        1,
                        2
                    ]
                },
                "codeDescriptionSupport": true,
                "dataSupport": true
            },
            "synchronization": {
                "dynamicRegistration": true,
                "willSave": true,
                "willSaveWaitUntil": true,
                "didSave": true
            },
            "completion": {
                "dynamicRegistration": true,
                "contextSupport": true,
                "completionItem": {
                    "snippetSupport": true,
                    "commitCharactersSupport": true,
                    "documentationFormat": [
                        "markdown",
                        "plaintext"
                    ],
                    "deprecatedSupport": true,
                    "preselectSupport": true,
                    "tagSupport": {
                        "valueSet": [
                            1
                        ]
                    },
                    "insertReplaceSupport": true,
                    "resolveSupport": {
                        "properties": [
                            "documentation",
                            "detail",
                            "additionalTextEdits"
                        ]
                    },
                    "insertTextModeSupport": {
                        "valueSet": [
                            1,
                            2
                        ]
                    },
                    "labelDetailsSupport": true
                },
                "insertTextMode": 2,
                "completionItemKind": {
                    "valueSet": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25
                    ]
                },
                "completionList": {
                    "itemDefaults": [
                        "commitCharacters",
                        "editRange",
                        "insertTextFormat",
                        "insertTextMode"
                    ]
                }
            },
            "hover": {
                "dynamicRegistration": true,
                "contentFormat": [
                    "markdown",
                    "plaintext"
                ]
            },
            "signatureHelp": {
                "dynamicRegistration": true,
                "signatureInformation": {
                    "documentationFormat": [
                        "markdown",
                        "plaintext"
                    ],
                    "parameterInformation": {
                        "labelOffsetSupport": true
                    },
                    "activeParameterSupport": true
                },
                "contextSupport": true
            },
            "definition": {
                "dynamicRegistration": true,
                "linkSupport": true
            },
            "references": {
                "dynamicRegistration": true
            },
            "documentHighlight": {
                "dynamicRegistration": true
            },
            "documentSymbol": {
                "dynamicRegistration": true,
                "symbolKind": {
                    "valueSet": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ]
                },
                "hierarchicalDocumentSymbolSupport": true,
                "tagSupport": {
                    "valueSet": [
                        1
                    ]
                },
                "labelSupport": true
            },
            "codeAction": {
                "dynamicRegistration": true,
                "isPreferredSupport": true,
                "disabledSupport": true,
                "dataSupport": true,
                "resolveSupport": {
                    "properties": [
                        "edit"
                    ]
                },
                "codeActionLiteralSupport": {
                    "codeActionKind": {
                        "valueSet": [
                            "",
                            "quickfix",
                            "refactor",
                            "refactor.extract",
                            "refactor.inline",
                            "refactor.rewrite",
                            "source",
                            "source.organizeImports"
                        ]
                    }
                },
                "honorsChangeAnnotations": false
            },
            "codeLens": {
                "dynamicRegistration": true
            },
            "formatting": {
                "dynamicRegistration": true
            },
            "rangeFormatting": {
                "dynamicRegistration": true
            },
            "onTypeFormatting": {
                "dynamicRegistration": true
            },
            "rename": {
                "dynamicRegistration": true,
                "prepareSupport": true,
                "prepareSupportDefaultBehavior": 1,
                "honorsChangeAnnotations": true
            },
            "documentLink": {
                "dynamicRegistration": true,
                "tooltipSupport": true
            },
            "typeDefinition": {
                "dynamicRegistration": true,
                "linkSupport": true
            },
            "implementation": {
                "dynamicRegistration": true,
                "linkSupport": true
            },
            "colorProvider": {
                "dynamicRegistration": true
            },
            "foldingRange": {
                "dynamicRegistration": true,
                "rangeLimit": 5000,
                "lineFoldingOnly": true,
                "foldingRangeKind": {
                    "valueSet": [
                        "comment",
                        "imports",
                        "region"
                    ]
                },
                "foldingRange": {
                    "collapsedText": false
                }
            },
            "declaration": {
                "dynamicRegistration": true,
                "linkSupport": true
            },
            "selectionRange": {
                "dynamicRegistration": true
            },
            "callHierarchy": {
                "dynamicRegistration": true
            },
            "semanticTokens": {
                "dynamicRegistration": true,
                "tokenTypes": [
                    "namespace",
                    "type",
                    "class",
                    "enum",
                    "interface",
                    "struct",
                    "typeParameter",
                    "parameter",
                    "variable",
                    "property",
                    "enumMember",
                    "event",
                    "function",
                    "method",
                    "macro",
                    "keyword",
                    "modifier",
                    "comment",
                    "string",
                    "number",
                    "regexp",
                    "operator",
                    "decorator"
                ],
                "tokenModifiers": [
                    "declaration",
                    "definition",
                    "readonly",
                    "static",
                    "deprecated",
                    "abstract",
                    "async",
                    "modification",
                    "documentation",
                    "defaultLibrary"
                ],
                "formats": [
                    "relative"
                ],
                "requests": {
                    "range": true,
                    "full": {
                        "delta": true
                    }
                },
                "multilineTokenSupport": false,
                "overlappingTokenSupport": false,
                "serverCancelSupport": true,
                "augmentsSyntaxTokens": false
            },
            "linkedEditingRange": {
                "dynamicRegistration": true
            },
            "typeHierarchy": {
                "dynamicRegistration": true
            },
            "inlineValue": {
                "dynamicRegistration": true
            },
            "inlayHint": {
                "dynamicRegistration": true,
                "resolveSupport": {
                    "properties": [
                        "tooltip",
                        "textEdits",
                        "label.tooltip",
                        "label.location",
                        "label.command"
                    ]
                }
            },
            "diagnostic": {
                "dynamicRegistration": true,
                "relatedDocumentSupport": false
            }
        },
        "window": {
            "showMessage": {
                "messageActionItem": {
                    "additionalPropertiesSupport": true
                }
            },
            "showDocument": {
                "support": true
            },
            "workDoneProgress": true
        },
        "general": {
            "staleRequestSupport": {
                "cancel": true,
                "retryOnContentModified": [
                    "textDocument/semanticTokens/full",
                    "textDocument/semanticTokens/range",
                    "textDocument/semanticTokens/full/delta"
                ]
            },
            "regularExpressions": {
                "engine": "ECMAScript",
                "version": "ES2020"
            },
            "markdown": {
                "parser": "marked",
                "version": "1.1.0",
                "allowedTags": [
                    "ul",
                    "li",
                    "p",
                    "code",
                    "blockquote",
                    "ol",
                    "h1",
                    "h2",
                    "h3",
                    "h4",
                    "h5",
                    "h6",
                    "hr",
                    "em",
                    "pre",
                    "table",
                    "thead",
                    "tbody",
                    "tr",
                    "th",
                    "td",
                    "div",
                    "del",
                    "a",
                    "strong",
                    "br",
                    "img",
                    "span"
                ]
            },
            "positionEncodings": [
                "utf-16"
            ]
        },
        "notebookDocument": {
            "synchronization": {
                "dynamicRegistration": true,
                "executionSummarySupport": true
            }
        },
        "experimental": {
            "snippetTextEdit": true,
            "codeActionGroup": true,
            "hoverActions": true,
            "serverStatusNotification": true,
            "colorDiagnosticOutput": true,
            "openServerLogs": true,
            "commands": {
                "commands": [
                    "rust-analyzer.runSingle",
                    "rust-analyzer.debugSingle",
                    "rust-analyzer.showReferences",
                    "rust-analyzer.gotoLocation",
                    "editor.action.triggerParameterHints"
                ]
            }
        }
    },
    "initializationOptions": {
        "cargoRunner": null,
        "runnableEnv": null,
        "server": {
            "path": null,
            "extraEnv": null
        },
        "trace": {
            "server": "verbose",
            "extension": false
        },
        "debug": {
            "engine": "auto",
            "sourceFileMap": {
                "/rustc/<id>": "${env:USERPROFILE}/.rustup/toolchains/<toolchain-id>/lib/rustlib/src/rust"
            },
            "openDebugPane": false,
            "engineSettings": {}
        },
        "restartServerOnConfigChange": false,
        "typing": {
            "continueCommentsOnNewline": true,
            "autoClosingAngleBrackets": {
                "enable": false
            }
        },
        "diagnostics": {
            "previewRustcOutput": false,
            "useRustcErrorCode": false,
            "disabled": [],
            "enable": true,
            "experimental": {
                "enable": false
            },
            "remapPrefix": {},
            "warningsAsHint": [],
            "warningsAsInfo": []
        },
        "discoverProjectCommand": null,
        "showUnlinkedFileNotification": true,
        "assist": {
            "emitMustUse": false,
            "expressionFillDefault": "todo"
        },
        "cachePriming": {
            "enable": true,
            "numThreads": 0
        },
        "cargo": {
            "autoreload": true,
            "buildScripts": {
                "enable": true,
                "invocationLocation": "workspace",
                "invocationStrategy": "per_workspace",
                "overrideCommand": null,
                "useRustcWrapper": true
            },
            "extraArgs": [],
            "extraEnv": {},
            "features": [],
            "noDefaultFeatures": false,
            "sysroot": "discover",
            "sysrootSrc": null,
            "target": null,
            "unsetTest": [
                "core"
            ]
        },
        "checkOnSave": true,
        "check": {
            "allTargets": true,
            "command": "check",
            "extraArgs": [],
            "extraEnv": {},
            "features": null,
            "invocationLocation": "workspace",
            "invocationStrategy": "per_workspace",
            "noDefaultFeatures": null,
            "overrideCommand": null,
            "targets": null
        },
        "completion": {
            "autoimport": {
                "enable": true
            },
            "autoself": {
                "enable": true
            },
            "callable": {
                "snippets": "fill_arguments"
            },
            "limit": null,
            "postfix": {
                "enable": true
            },
            "privateEditable": {
                "enable": false
            },
            "snippets": {
                "custom": {
                    "Arc::new": {
                        "postfix": "arc",
                        "body": "Arc::new(${receiver})",
                        "requires": "std::sync::Arc",
                        "description": "Put the expression into an `Arc`",
                        "scope": "expr"
                    },
                    "Rc::new": {
                        "postfix": "rc",
                        "body": "Rc::new(${receiver})",
                        "requires": "std::rc::Rc",
                        "description": "Put the expression into an `Rc`",
                        "scope": "expr"
                    },
                    "Box::pin": {
                        "postfix": "pinbox",
                        "body": "Box::pin(${receiver})",
                        "requires": "std::boxed::Box",
                        "description": "Put the expression into a pinned `Box`",
                        "scope": "expr"
                    },
                    "Ok": {
                        "postfix": "ok",
                        "body": "Ok(${receiver})",
                        "description": "Wrap the expression in a `Result::Ok`",
                        "scope": "expr"
                    },
                    "Err": {
                        "postfix": "err",
                        "body": "Err(${receiver})",
                        "description": "Wrap the expression in a `Result::Err`",
                        "scope": "expr"
                    },
                    "Some": {
                        "postfix": "some",
                        "body": "Some(${receiver})",
                        "description": "Wrap the expression in an `Option::Some`",
                        "scope": "expr"
                    }
                }
            }
        },
        "files": {
            "excludeDirs": [],
            "watcher": "client"
        },
        "highlightRelated": {
            "breakPoints": {
                "enable": true
            },
            "closureCaptures": {
                "enable": true
            },
            "exitPoints": {
                "enable": true
            },
            "references": {
                "enable": true
            },
            "yieldPoints": {
                "enable": true
            }
        },
        "hover": {
            "actions": {
                "debug": {
                    "enable": true
                },
                "enable": true,
                "gotoTypeDef": {
                    "enable": true
                },
                "implementations": {
                    "enable": true
                },
                "references": {
                    "enable": false
                },
                "run": {
                    "enable": true
                }
            },
            "documentation": {
                "enable": true,
                "keywords": {
                    "enable": true
                }
            },
            "links": {
                "enable": true
            },
            "memoryLayout": {
                "enable": true
            }
        },
        "imports": {
            "granularity": {
                "enforce": false,
                "group": "crate"
            },
            "group": {
                "enable": true
            },
            "merge": {
                "glob": true
            },
            "prefer": {
                "no": {
                    "std": false
                }
            },
            "prefix": "plain"
        },
        "inlayHints": {
            "bindingModeHints": {
                "enable": false
            },
            "chainingHints": {
                "enable": true
            },
            "closingBraceHints": {
                "enable": true,
                "minLines": 25
            },
            "closureCaptureHints": {
                "enable": false
            },
            "closureReturnTypeHints": {
                "enable": "never"
            },
            "closureStyle": "impl_fn",
            "discriminantHints": {
                "enable": "never"
            },
            "expressionAdjustmentHints": {
                "enable": "never",
                "hideOutsideUnsafe": false,
                "mode": "prefix"
            },
            "lifetimeElisionHints": {
                "enable": "never",
                "useParameterNames": false
            },
            "maxLength": 25,
            "parameterHints": {
                "enable": true
            },
            "reborrowHints": {
                "enable": "never"
            },
            "renderColons": true,
            "typeHints": {
                "enable": true,
                "hideClosureInitialization": false,
                "hideNamedConstructor": false
            }
        },
        "interpret": {
            "tests": false
        },
        "joinLines": {
            "joinAssignments": true,
            "joinElseIf": true,
            "removeTrailingComma": true,
            "unwrapTrivialBlock": true
        },
        "lens": {
            "debug": {
                "enable": true
            },
            "enable": true,
            "forceCustomCommands": true,
            "implementations": {
                "enable": true
            },
            "location": "above_name",
            "references": {
                "adt": {
                    "enable": false
                },
                "enumVariant": {
                    "enable": false
                },
                "method": {
                    "enable": false
                },
                "trait": {
                    "enable": false
                }
            },
            "run": {
                "enable": true
            }
        },
        "linkedProjects": [],
        "lru": {
            "capacity": null,
            "query": {
                "capacities": {}
            }
        },
        "notifications": {
            "cargoTomlNotFound": true
        },
        "numThreads": null,
        "procMacro": {
            "attributes": {
                "enable": true
            },
            "enable": true,
            "ignored": {},
            "server": null
        },
        "references": {
            "excludeImports": false
        },
        "runnables": {
            "command": null,
            "extraArgs": []
        },
        "rustc": {
            "source": null
        },
        "rustfmt": {
            "extraArgs": [],
            "overrideCommand": null,
            "rangeFormatting": {
                "enable": false
            }
        },
        "semanticHighlighting": {
            "doc": {
                "comment": {
                    "inject": {
                        "enable": true
                    }
                }
            },
            "nonStandardTokens": true,
            "operator": {
                "enable": true,
                "specialization": {
                    "enable": false
                }
            },
            "punctuation": {
                "enable": false,
                "separate": {
                    "macro": {
                        "bang": false
                    }
                },
                "specialization": {
                    "enable": false
                }
            },
            "strings": {
                "enable": true
            }
        },
        "signatureInfo": {
            "detail": "full",
            "documentation": {
                "enable": true
            }
        },
        "workspace": {
            "symbol": {
                "search": {
                    "kind": "only_types",
                    "limit": 128,
                    "scope": "workspace"
                }
            }
        }
    },
    "trace": "verbose",
    "workspaceFolders": [
        {
            "uri": "file:///tmp/CES.2wjciAhRCeZf",
            "name": "CES.2wjciAhRCeZf"
        }
    ]
}


[Trace - 4:40:57 PM] Received response 'initialize - (0)' in 4ms.
Result: {
    "capabilities": {
        "positionEncoding": "utf-16",
        "textDocumentSync": {
            "openClose": true,
            "change": 2,
            "save": {}
        },
        "selectionRangeProvider": true,
        "hoverProvider": true,
        "completionProvider": {
            "resolveProvider": true,
            "triggerCharacters": [
                ":",
                ".",
                "'",
                "("
            ],
            "completionItem": {
                "labelDetailsSupport": true
            }
        },
        "signatureHelpProvider": {
            "triggerCharacters": [
                "(",
                ",",
                "<"
            ]
        },
        "definitionProvider": true,
        "typeDefinitionProvider": true,
        "implementationProvider": true,
        "referencesProvider": true,
        "documentHighlightProvider": true,
        "documentSymbolProvider": true,
        "workspaceSymbolProvider": true,
        "codeActionProvider": {
            "codeActionKinds": [
                "",
                "quickfix",
                "refactor",
                "refactor.extract",
                "refactor.inline",
                "refactor.rewrite"
            ],
            "resolveProvider": true
        },
        "codeLensProvider": {
            "resolveProvider": true
        },
        "documentFormattingProvider": true,
        "documentRangeFormattingProvider": false,
        "documentOnTypeFormattingProvider": {
            "firstTriggerCharacter": "=",
            "moreTriggerCharacter": [
                ".",
                ">",
                "{",
                "<"
            ]
        },
        "renameProvider": {
            "prepareProvider": true
        },
        "foldingRangeProvider": true,
        "declarationProvider": true,
        "workspace": {
            "workspaceFolders": {
                "supported": true,
                "changeNotifications": true
            },
            "fileOperations": {
                "willRename": {
                    "filters": [
                        {
                            "scheme": "file",
                            "pattern": {
                                "glob": "**/*.rs",
                                "matches": "file"
                            }
                        },
                        {
                            "scheme": "file",
                            "pattern": {
                                "glob": "**",
                                "matches": "folder"
                            }
                        }
                    ]
                }
            }
        },
        "callHierarchyProvider": true,
        "semanticTokensProvider": {
            "legend": {
                "tokenTypes": [
                    "comment",
                    "decorator",
                    "enumMember",
                    "enum",
                    "function",
                    "interface",
                    "keyword",
                    "macro",
                    "method",
                    "namespace",
                    "number",
                    "operator",
                    "parameter",
                    "property",
                    "string",
                    "struct",
                    "typeParameter",
                    "variable",
                    "angle",
                    "arithmetic",
                    "attribute",
                    "attributeBracket",
                    "bitwise",
                    "boolean",
                    "brace",
                    "bracket",
                    "builtinAttribute",
                    "builtinType",
                    "character",
                    "colon",
                    "comma",
                    "comparison",
                    "constParameter",
                    "derive",
                    "deriveHelper",
                    "dot",
                    "escapeSequence",
                    "formatSpecifier",
                    "generic",
                    "label",
                    "lifetime",
                    "logical",
                    "macroBang",
                    "parenthesis",
                    "punctuation",
                    "selfKeyword",
                    "selfTypeKeyword",
                    "semicolon",
                    "typeAlias",
                    "toolModule",
                    "union",
                    "unresolvedReference"
                ],
                "tokenModifiers": [
                    "documentation",
                    "declaration",
                    "static",
                    "defaultLibrary",
                    "async",
                    "attribute",
                    "callable",
                    "constant",
                    "consuming",
                    "controlFlow",
                    "crateRoot",
                    "injected",
                    "intraDocLink",
                    "library",
                    "macro",
                    "mutable",
                    "public",
                    "reference",
                    "trait",
                    "unsafe"
                ]
            },
            "range": true,
            "full": {
                "delta": true
            }
        },
        "inlayHintProvider": {
            "resolveProvider": true
        },
        "experimental": {
            "externalDocs": true,
            "hoverRange": true,
            "joinLines": true,
            "matchingBrace": true,
            "moveItem": true,
            "onEnter": true,
            "openCargoToml": true,
            "parentModule": true,
            "runnables": {
                "kinds": [
                    "cargo"
                ]
            },
            "ssr": true,
            "workspaceSymbolScopeKindFiltering": true
        }
    },
    "serverInfo": {
        "name": "rust-analyzer",
        "version": "0.3.1524-standalone"
    }
}


[Trace - 4:40:57 PM] Sending notification 'initialized'.
Params: {}


[Trace - 4:40:57 PM] Sending notification 'textDocument/didOpen'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
        "languageId": "rust",
        "version": 1,
        "text": "use core::fmt;\nuse std::collections::HashSet;\n\n#[derive(Debug, Clone)]\npub struct Options {\n    options: HashSet<String>,\n    lastpos: u64,\n    messages: Vec<String>,\n    source: String,\n}\n\nimpl Options {\n    pub fn new(source: String) -> Self {\n        Self {\n            options: HashSet::new(),\n            lastpos: 0,\n            messages: vec![],\n            source,\n        }\n    }\n\n    pub fn message(mut self, msg: impl AsRef<str>) -> Self {\n        self.messages.push(msg.as_ref().to_string());\n        self\n    }\n\n    pub fn pos(mut self, pos: u64) -> Self {\n        if pos > self.lastpos {\n            self.lastpos = pos;\n        }\n        self\n    }\n\n    pub fn merge(mut self, other: Options) -> Self {\n        for i in other.options {\n            self = self.add_str(i);\n        }\n\n        self\n    }\n\n    pub fn add(mut self, value: char) -> Self {\n        self.options.insert(value.to_string());\n        self\n    }\n\n    pub fn add_str(mut self, value: impl AsRef<str>) -> Self {\n        self.options.insert(value.as_ref().to_string());\n        self\n        // THIS IS JUST A VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY VERY LONG LINE\n    }\n}\n\nimpl fmt::Display for Options {\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n        writeln!(f, \"{}\", self.source)?;\n        writeln!(f, \"{}^\", \" \".repeat(self.lastpos as usize))?;\n\n        if !self.options.is_empty() {\n            writeln!(f, \"An error occurred: unexpected character.\")?;\n            write!(f, \"Expected any of: [\")?;\n            for (index, i) in self.options.iter().enumerate() {\n                write!(f, \"{}\", i)?;\n\n                if index != self.options.len() - 1 {\n                    write!(f, \", \")?;\n                }\n            }\n            writeln!(f, \"]\")?;\n            writeln!(f)?;\n        }\n\n        for i in &self.messages {\n            writeln!(f, \"{}\", i)?;\n        }\n\n        Ok(())\n    }\n}\n"
    }
}


[Trace - 4:40:57 PM] Received notification 'experimental/serverStatus'.
Params: {
    "health": "ok",
    "quiescent": false,
    "message": null
}


[Trace - 4:40:57 PM] Received request 'client/registerCapability - (0)'.
Params: {
    "registrations": [
        {
            "id": "textDocument/didSave",
            "method": "textDocument/didSave",
            "registerOptions": {
                "includeText": false,
                "documentSelector": [
                    {
                        "pattern": "**/*.rs"
                    },
                    {
                        "pattern": "**/Cargo.toml"
                    },
                    {
                        "pattern": "**/Cargo.lock"
                    }
                ]
            }
        }
    ]
}


[Trace - 4:40:57 PM] Sending response 'client/registerCapability - (0)'. Processing request took 1ms
No result returned.


[Trace - 4:40:57 PM] Received request 'window/workDoneProgress/create - (1)'.
Params: {
    "token": "rustAnalyzer/Fetching"
}


[Trace - 4:40:57 PM] Sending response 'window/workDoneProgress/create - (1)'. Processing request took 0ms
No result returned.


[Trace - 4:40:57 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "begin",
        "title": "Fetching",
        "cancellable": false
    }
}


[Trace - 4:40:57 PM] Sending request 'textDocument/documentSymbol - (1)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    }
}


[Trace - 4:40:57 PM] Sending request 'textDocument/codeAction - (2)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 29,
            "character": 8
        },
        "end": {
            "line": 29,
            "character": 8
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 4:40:57 PM] Sending request 'textDocument/inlayHint - (3)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 72,
            "character": 33
        }
    }
}


[Trace - 4:40:57 PM] Received response 'textDocument/inlayHint - (3)' in 1ms.
Result: []


[Trace - 4:40:57 PM] Received response 'textDocument/documentSymbol - (1)' in 1ms.
Result: [
    {
        "name": "Options",
        "kind": 23,
        "tags": [],
        "deprecated": false,
        "range": {
            "start": {
                "line": 3,
                "character": 0
            },
            "end": {
                "line": 9,
                "character": 1
            }
        },
        "selectionRange": {
            "start": {
                "line": 4,
                "character": 11
            },
            "end": {
                "line": 4,
                "character": 18
            }
        },
        "children": [
            {
                "name": "options",
                "detail": "HashSet<String>",
                "kind": 8,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 5,
                        "character": 4
                    },
                    "end": {
                        "line": 5,
                        "character": 28
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 5,
                        "character": 4
                    },
                    "end": {
                        "line": 5,
                        "character": 11
                    }
                }
            },
            {
                "name": "lastpos",
                "detail": "u64",
                "kind": 8,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 6,
                        "character": 4
                    },
                    "end": {
                        "line": 6,
                        "character": 16
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 6,
                        "character": 4
                    },
                    "end": {
                        "line": 6,
                        "character": 11
                    }
                }
            },
            {
                "name": "messages",
                "detail": "Vec<String>",
                "kind": 8,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 7,
                        "character": 4
                    },
                    "end": {
                        "line": 7,
                        "character": 25
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 7,
                        "character": 4
                    },
                    "end": {
                        "line": 7,
                        "character": 12
                    }
                }
            },
            {
                "name": "source",
                "detail": "String",
                "kind": 8,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 8,
                        "character": 4
                    },
                    "end": {
                        "line": 8,
                        "character": 18
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 8,
                        "character": 4
                    },
                    "end": {
                        "line": 8,
                        "character": 10
                    }
                }
            }
        ]
    },
    {
        "name": "impl Options",
        "kind": 19,
        "tags": [],
        "deprecated": false,
        "range": {
            "start": {
                "line": 11,
                "character": 0
            },
            "end": {
                "line": 51,
                "character": 1
            }
        },
        "selectionRange": {
            "start": {
                "line": 11,
                "character": 5
            },
            "end": {
                "line": 11,
                "character": 12
            }
        },
        "children": [
            {
                "name": "new",
                "detail": "fn(source: String) -> Self",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 12,
                        "character": 4
                    },
                    "end": {
                        "line": 19,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 12,
                        "character": 11
                    },
                    "end": {
                        "line": 12,
                        "character": 14
                    }
                }
            },
            {
                "name": "message",
                "detail": "fn(mut self, msg: impl AsRef<str>) -> Self",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 21,
                        "character": 4
                    },
                    "end": {
                        "line": 24,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 21,
                        "character": 11
                    },
                    "end": {
                        "line": 21,
                        "character": 18
                    }
                }
            },
            {
                "name": "pos",
                "detail": "fn(mut self, pos: u64) -> Self",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 26,
                        "character": 4
                    },
                    "end": {
                        "line": 31,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 26,
                        "character": 11
                    },
                    "end": {
                        "line": 26,
                        "character": 14
                    }
                }
            },
            {
                "name": "merge",
                "detail": "fn(mut self, other: Options) -> Self",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 33,
                        "character": 4
                    },
                    "end": {
                        "line": 39,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 33,
                        "character": 11
                    },
                    "end": {
                        "line": 33,
                        "character": 16
                    }
                }
            },
            {
                "name": "add",
                "detail": "fn(mut self, value: char) -> Self",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 41,
                        "character": 4
                    },
                    "end": {
                        "line": 44,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 41,
                        "character": 11
                    },
                    "end": {
                        "line": 41,
                        "character": 14
                    }
                }
            },
            {
                "name": "add_str",
                "detail": "fn(mut self, value: impl AsRef<str>) -> Self",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 46,
                        "character": 4
                    },
                    "end": {
                        "line": 50,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 46,
                        "character": 11
                    },
                    "end": {
                        "line": 46,
                        "character": 18
                    }
                }
            }
        ]
    },
    {
        "name": "impl fmt::Display for Options",
        "kind": 19,
        "tags": [],
        "deprecated": false,
        "range": {
            "start": {
                "line": 53,
                "character": 0
            },
            "end": {
                "line": 78,
                "character": 1
            }
        },
        "selectionRange": {
            "start": {
                "line": 53,
                "character": 22
            },
            "end": {
                "line": 53,
                "character": 29
            }
        },
        "children": [
            {
                "name": "fmt",
                "detail": "fn(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result",
                "kind": 12,
                "tags": [],
                "deprecated": false,
                "range": {
                    "start": {
                        "line": 54,
                        "character": 4
                    },
                    "end": {
                        "line": 77,
                        "character": 5
                    }
                },
                "selectionRange": {
                    "start": {
                        "line": 54,
                        "character": 7
                    },
                    "end": {
                        "line": 54,
                        "character": 10
                    }
                }
            }
        ]
    }
]


[Trace - 4:40:57 PM] Received response 'textDocument/codeAction - (2)' in 2ms.
Result: []


[Trace - 4:40:57 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "metadata"
    }
}


[Trace - 4:40:57 PM] Sending request 'textDocument/foldingRange - (4)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    }
}


[Trace - 4:40:57 PM] Received response 'textDocument/foldingRange - (4)' in 1ms.
Result: [
    {
        "startLine": 0,
        "endLine": 1,
        "kind": "imports"
    },
    {
        "startLine": 4,
        "endLine": 9
    },
    {
        "startLine": 11,
        "endLine": 51
    },
    {
        "startLine": 12,
        "endLine": 19
    },
    {
        "startLine": 13,
        "endLine": 18
    },
    {
        "startLine": 21,
        "endLine": 24
    },
    {
        "startLine": 26,
        "endLine": 31
    },
    {
        "startLine": 27,
        "endLine": 29
    },
    {
        "startLine": 33,
        "endLine": 39
    },
    {
        "startLine": 34,
        "endLine": 36
    },
    {
        "startLine": 41,
        "endLine": 44
    },
    {
        "startLine": 46,
        "endLine": 50
    },
    {
        "startLine": 53,
        "endLine": 78
    },
    {
        "startLine": 54,
        "endLine": 77
    },
    {
        "startLine": 58,
        "endLine": 70
    },
    {
        "startLine": 61,
        "endLine": 67
    },
    {
        "startLine": 64,
        "endLine": 66
    },
    {
        "startLine": 72,
        "endLine": 74
    }
]


[Trace - 4:40:57 PM] Received request 'client/registerCapability - (2)'.
Params: {
    "registrations": [
        {
            "id": "workspace/didChangeWatchedFiles",
            "method": "workspace/didChangeWatchedFiles",
            "registerOptions": {
                "watchers": [
                    {
                        "globPattern": "/tmp/CES.2wjciAhRCeZf/**/*.rs"
                    },
                    {
                        "globPattern": "/tmp/CES.2wjciAhRCeZf/**/Cargo.toml"
                    },
                    {
                        "globPattern": "/tmp/CES.2wjciAhRCeZf/**/Cargo.lock"
                    }
                ]
            }
        }
    ]
}


[Trace - 4:40:57 PM] Sending response 'client/registerCapability - (2)'. Processing request took 0ms
No result returned.


[Trace - 4:40:57 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:57 PM] Received request 'window/workDoneProgress/create - (3)'.
Params: {
    "token": "rustAnalyzer/Roots Scanned"
}


[Trace - 4:40:57 PM] Sending response 'window/workDoneProgress/create - (3)'. Processing request took 0ms
No result returned.


[Trace - 4:40:57 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Roots Scanned",
    "value": {
        "kind": "begin",
        "title": "Roots Scanned",
        "cancellable": false,
        "message": "0/2",
        "percentage": 0
    }
}


[Trace - 4:40:57 PM] Received request 'window/workDoneProgress/create - (4)'.
Params: {
    "token": "rustAnalyzer/Fetching"
}


[Trace - 4:40:57 PM] Sending response 'window/workDoneProgress/create - (4)'. Processing request took 0ms
No result returned.


[Trace - 4:40:57 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "begin",
        "title": "Fetching",
        "cancellable": false
    }
}


[Trace - 4:40:57 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Roots Scanned",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "1/2",
        "percentage": 50
    }
}


[Trace - 4:40:57 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Roots Scanned",
    "value": {
        "kind": "end",
        "message": "2/2"
    }
}


[Trace - 4:40:57 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "metadata"
    }
}


[Trace - 4:40:57 PM] Sending request 'textDocument/codeLens - (5)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    }
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:58 PM] Received request 'workspace/semanticTokens/refresh - (5)'.
[Trace - 4:40:58 PM] Sending response 'workspace/semanticTokens/refresh - (5)'. Processing request took 0ms
No result returned.


[Trace - 4:40:58 PM] Received request 'workspace/codeLens/refresh - (6)'.
[Trace - 4:40:58 PM] Sending response 'workspace/codeLens/refresh - (6)'. Processing request took 0ms
No result returned.


[Trace - 4:40:58 PM] Received request 'workspace/inlayHint/refresh - (7)'.
[Trace - 4:40:58 PM] Sending response 'workspace/inlayHint/refresh - (7)'. Processing request took 0ms
No result returned.


[Trace - 4:40:58 PM] Received request 'window/workDoneProgress/create - (8)'.
Params: {
    "token": "rustAnalyzer/Fetching"
}


[Trace - 4:40:58 PM] Sending response 'window/workDoneProgress/create - (8)'. Processing request took 0ms
No result returned.


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "begin",
        "title": "Fetching",
        "cancellable": false
    }
}


[Trace - 4:40:58 PM] Sending request 'textDocument/semanticTokens/full - (6)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    }
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "metadata"
    }
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Fetching",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:58 PM] Received request 'workspace/semanticTokens/refresh - (9)'.
[Trace - 4:40:58 PM] Sending response 'workspace/semanticTokens/refresh - (9)'. Processing request took 0ms
No result returned.


[Trace - 4:40:58 PM] Received request 'workspace/codeLens/refresh - (10)'.
[Trace - 4:40:58 PM] Sending response 'workspace/codeLens/refresh - (10)'. Processing request took 0ms
No result returned.


[Trace - 4:40:58 PM] Received request 'workspace/inlayHint/refresh - (11)'.
[Trace - 4:40:58 PM] Sending response 'workspace/inlayHint/refresh - (11)'. Processing request took 0ms
No result returned.


[Trace - 4:40:58 PM] Received request 'window/workDoneProgress/create - (12)'.
Params: {
    "token": "rustAnalyzer/Building"
}


[Trace - 4:40:58 PM] Sending response 'window/workDoneProgress/create - (12)'. Processing request took 0ms
No result returned.


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "begin",
        "title": "Building",
        "cancellable": false
    }
}


[Trace - 4:40:58 PM] Received request 'window/workDoneProgress/create - (13)'.
Params: {
    "token": "rustAnalyzer/Loading"
}


[Trace - 4:40:58 PM] Sending response 'window/workDoneProgress/create - (13)'. Processing request took 0ms
No result returned.


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Loading",
    "value": {
        "kind": "begin",
        "title": "Loading",
        "cancellable": false
    }
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Loading",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "code-exploration-services"
    }
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "building proc-macros: code-exploration-services"
    }
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "building proc-macros: code-exploration-services"
    }
}


[Trace - 4:40:58 PM] Received request 'client/registerCapability - (14)'.
Params: {
    "registrations": [
        {
            "id": "workspace/didChangeWatchedFiles",
            "method": "workspace/didChangeWatchedFiles",
            "registerOptions": {
                "watchers": [
                    {
                        "globPattern": "/tmp/CES.2wjciAhRCeZf/**/*.rs"
                    },
                    {
                        "globPattern": "/tmp/CES.2wjciAhRCeZf/**/Cargo.toml"
                    },
                    {
                        "globPattern": "/tmp/CES.2wjciAhRCeZf/**/Cargo.lock"
                    }
                ]
            }
        }
    ]
}


[Trace - 4:40:58 PM] Sending response 'client/registerCapability - (14)'. Processing request took 0ms
No result returned.


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Building",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:58 PM] Received request 'window/workDoneProgress/create - (15)'.
Params: {
    "token": "rustAnalyzer/Roots Scanned"
}


[Trace - 4:40:58 PM] Sending response 'window/workDoneProgress/create - (15)'. Processing request took 0ms
No result returned.


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Roots Scanned",
    "value": {
        "kind": "begin",
        "title": "Roots Scanned",
        "cancellable": false,
        "message": "0/2",
        "percentage": 0
    }
}


[Trace - 4:40:58 PM] Received request 'window/workDoneProgress/create - (16)'.
Params: {
    "token": "rustAnalyzer/Loading"
}


[Trace - 4:40:58 PM] Sending response 'window/workDoneProgress/create - (16)'. Processing request took 0ms
No result returned.


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Loading",
    "value": {
        "kind": "begin",
        "title": "Loading",
        "cancellable": false
    }
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Loading",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Roots Scanned",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "1/2",
        "percentage": 50
    }
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Roots Scanned",
    "value": {
        "kind": "end",
        "message": "2/2"
    }
}


[Trace - 4:40:58 PM] Received request 'workspace/semanticTokens/refresh - (17)'.
[Trace - 4:40:58 PM] Sending response 'workspace/semanticTokens/refresh - (17)'. Processing request took 0ms
No result returned.


[Trace - 4:40:58 PM] Received request 'workspace/codeLens/refresh - (18)'.
[Trace - 4:40:58 PM] Sending response 'workspace/codeLens/refresh - (18)'. Processing request took 0ms
No result returned.


[Trace - 4:40:58 PM] Received request 'workspace/inlayHint/refresh - (19)'.
[Trace - 4:40:58 PM] Sending response 'workspace/inlayHint/refresh - (19)'. Processing request took 0ms
No result returned.


[Trace - 4:40:58 PM] Received notification 'experimental/serverStatus'.
Params: {
    "health": "ok",
    "quiescent": true,
    "message": null
}


[Trace - 4:40:58 PM] Received request 'window/workDoneProgress/create - (20)'.
Params: {
    "token": "rustAnalyzer/Indexing"
}


[Trace - 4:40:58 PM] Sending response 'window/workDoneProgress/create - (20)'. Processing request took 0ms
No result returned.


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "begin",
        "title": "Indexing",
        "cancellable": false,
        "percentage": 0
    }
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "0/5 (core + 1 more)",
        "percentage": 0
    }
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "1/5 (core)",
        "percentage": 20
    }
}


[Trace - 4:40:58 PM] Received request 'window/workDoneProgress/create - (21)'.
Params: {
    "token": "rust-analyzer/flycheck/0"
}


[Trace - 4:40:58 PM] Sending response 'window/workDoneProgress/create - (21)'. Processing request took 0ms
No result returned.


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rust-analyzer/flycheck/0",
    "value": {
        "kind": "begin",
        "title": "cargo check",
        "cancellable": true
    }
}


[Trace - 4:40:58 PM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 12,
                    "character": 11
                },
                "end": {
                    "line": 12,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "associated function `new` is never used\n`#[warn(dead_code)]` on by default",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `new` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:13:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(source: String) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 21,
                    "character": 11
                },
                "end": {
                    "line": 21,
                    "character": 18
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `message` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `message` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:22:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn message(mut self, msg: impl AsRef<str>) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 26,
                    "character": 11
                },
                "end": {
                    "line": 26,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `pos` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `pos` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:27:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn pos(mut self, pos: u64) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 33,
                    "character": 11
                },
                "end": {
                    "line": 33,
                    "character": 16
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `merge` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `merge` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:34:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn merge(mut self, other: Options) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 41,
                    "character": 11
                },
                "end": {
                    "line": 41,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `add` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `add` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:42:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add(mut self, value: char) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 46,
                    "character": 11
                },
                "end": {
                    "line": 46,
                    "character": 18
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `add_str` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `add_str` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:47:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add_str(mut self, value: impl AsRef<str>) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"
            }
        }
    ],
    "version": 1
}


[Trace - 4:40:58 PM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/main.rs",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 1,
                    "character": 9
                },
                "end": {
                    "line": 1,
                    "character": 9
                }
            },
            "severity": 1,
            "code": "E0601",
            "codeDescription": {
                "href": "https://doc.rust-lang.org/error-index.html#E0601"
            },
            "source": "rustc",
            "message": "`main` function not found in crate `code_exploration_services`\nconsider adding a `main` function to `src/main.rs`",
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[38;5;9merror[E0601]\u001b[0m\u001b[0m\u001b[1m: `main` function not found in crate `code_exploration_services`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:2:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmod test;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mconsider adding a `main` function to `src/main.rs`\u001b[0m\n\n"
            }
        }
    ]
}


[Trace - 4:40:58 PM] Received notification '$/progress'.
Params: {
    "token": "rust-analyzer/flycheck/0",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:40:59 PM] Sending request 'textDocument/codeAction - (7)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 29,
            "character": 8
        },
        "end": {
            "line": 29,
            "character": 8
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 4:40:59 PM] Sending notification '$/cancelRequest'.
Params: {
    "id": 5
}


[Trace - 4:40:59 PM] Sending request 'textDocument/codeLens - (8)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    }
}


[Trace - 4:40:59 PM] Received response 'textDocument/codeLens - (5)' in 1243ms. Request failed: canceled by client (-32800).
[Trace - 4:41:00 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "percentage": 40
    }
}


[Trace - 4:41:00 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "2/5 (alloc)",
        "percentage": 40
    }
}


[Trace - 4:41:00 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "percentage": 60
    }
}


[Trace - 4:41:00 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "3/5 (std)",
        "percentage": 60
    }
}


[Trace - 4:41:00 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "percentage": 80
    }
}


[Trace - 4:41:00 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "message": "4/5 (proc_macro)",
        "percentage": 80
    }
}


[Trace - 4:41:00 PM] Received response 'textDocument/codeLens - (8)' in 1720ms.
Result: [
    {
        "range": {
            "start": {
                "line": 4,
                "character": 11
            },
            "end": {
                "line": 4,
                "character": 18
            }
        },
        "data": {
            "version": 1,
            "kind": {
                "impls": {
                    "textDocument": {
                        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
                    },
                    "position": {
                        "line": 4,
                        "character": 11
                    }
                }
            }
        }
    }
]


[Trace - 4:41:00 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "report",
        "cancellable": false,
        "percentage": 100
    }
}


[Trace - 4:41:00 PM] Received notification '$/progress'.
Params: {
    "token": "rustAnalyzer/Indexing",
    "value": {
        "kind": "end"
    }
}


[Trace - 4:41:01 PM] Sending request 'codeLens/resolve - (9)'.
Params: {
    "range": {
        "start": {
            "line": 4,
            "character": 11
        },
        "end": {
            "line": 4,
            "character": 18
        }
    },
    "data": {
        "version": 1,
        "kind": {
            "impls": {
                "textDocument": {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
                },
                "position": {
                    "line": 4,
                    "character": 11
                }
            }
        }
    }
}


[Trace - 4:41:01 PM] Received response 'codeLens/resolve - (9)' in 167ms.
Result: {
    "range": {
        "start": {
            "line": 4,
            "character": 11
        },
        "end": {
            "line": 4,
            "character": 18
        }
    },
    "command": {
        "title": "4 implementations",
        "command": "rust-analyzer.showReferences",
        "arguments": [
            "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
            {
                "line": 4,
                "character": 11
            },
            [
                {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
                    "range": {
                        "start": {
                            "line": 11,
                            "character": 0
                        },
                        "end": {
                            "line": 51,
                            "character": 1
                        }
                    }
                },
                {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
                    "range": {
                        "start": {
                            "line": 3,
                            "character": 0
                        },
                        "end": {
                            "line": 3,
                            "character": 23
                        }
                    }
                },
                {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
                    "range": {
                        "start": {
                            "line": 53,
                            "character": 0
                        },
                        "end": {
                            "line": 78,
                            "character": 1
                        }
                    }
                },
                {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
                    "range": {
                        "start": {
                            "line": 3,
                            "character": 0
                        },
                        "end": {
                            "line": 3,
                            "character": 23
                        }
                    }
                }
            ]
        ]
    },
    "data": {
        "version": 1,
        "kind": {
            "impls": {
                "textDocument": {
                    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
                },
                "position": {
                    "line": 4,
                    "character": 11
                }
            }
        }
    }
}


[Trace - 4:41:02 PM] Received response 'textDocument/semanticTokens/full - (6)' in 4060ms.
Result: {
    "resultId": "1",
    "data": [
        0,
        0,
        3,
        6,
        0,
        0,
        4,
        4,
        9,
        9224,
        0,
        4,
        2,
        11,
        0,
        0,
        2,
        3,
        9,
        8200,
        1,
        0,
        3,
        6,
        0,
        0,
        4,
        3,
        9,
        9224,
        0,
        3,
        2,
        11,
        0,
        0,
        2,
        11,
        9,
        8200,
        0,
        11,
        2,
        11,
        0,
        0,
        2,
        7,
        15,
        8200,
        2,
        0,
        1,
        21,
        32,
        0,
        1,
        1,
        21,
        32,
        0,
        1,
        6,
        1,
        8232,
        0,
        7,
        5,
        33,
        8232,
        0,
        7,
        5,
        33,
        8232,
        0,
        6,
        1,
        21,
        32,
        1,
        0,
        3,
        6,
        0,
        0,
        4,
        6,
        6,
        0,
        0,
        7,
        7,
        15,
        65538,
        1,
        4,
        7,
        13,
        2,
        0,
        9,
        7,
        15,
        8200,
        0,
        8,
        6,
        15,
        8200,
        1,
        4,
        7,
        13,
        2,
        0,
        9,
        3,
        27,
        0,
        1,
        4,
        8,
        13,
        2,
        0,
        10,
        3,
        15,
        8200,
        0,
        4,
        6,
        15,
        8200,
        1,
        4,
        6,
        13,
        2,
        0,
        8,
        6,
        15,
        8200,
        3,
        0,
        4,
        6,
        0,
        0,
        5,
        7,
        15,
        65536,
        1,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        65542,
        0,
        4,
        6,
        12,
        2,
        0,
        8,
        6,
        15,
        8200,
        0,
        8,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        46,
        0,
        1,
        12,
        7,
        13,
        0,
        0,
        9,
        7,
        15,
        8200,
        0,
        7,
        2,
        11,
        0,
        0,
        2,
        3,
        8,
        8204,
        1,
        12,
        7,
        13,
        0,
        0,
        9,
        1,
        10,
        0,
        1,
        12,
        8,
        13,
        0,
        0,
        10,
        3,
        7,
        8200,
        0,
        3,
        1,
        7,
        0,
        1,
        12,
        6,
        13,
        0,
        4,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        7,
        8,
        65794,
        0,
        8,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        3,
        12,
        2,
        0,
        5,
        4,
        6,
        0,
        0,
        5,
        5,
        5,
        8200,
        0,
        6,
        3,
        27,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        8,
        13,
        0,
        0,
        8,
        1,
        11,
        0,
        0,
        1,
        4,
        8,
        172040,
        0,
        5,
        3,
        12,
        0,
        0,
        3,
        1,
        11,
        0,
        0,
        1,
        6,
        8,
        401416,
        0,
        8,
        1,
        11,
        0,
        0,
        1,
        9,
        8,
        401416,
        1,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        65794,
        0,
        4,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        3,
        12,
        2,
        0,
        5,
        3,
        27,
        0,
        0,
        5,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        2,
        6,
        512,
        0,
        3,
        3,
        12,
        0,
        0,
        4,
        1,
        11,
        0,
        0,
        2,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        1,
        12,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        8,
        1,
        11,
        0,
        0,
        2,
        3,
        12,
        0,
        2,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        5,
        8,
        65794,
        0,
        6,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        5,
        12,
        2,
        0,
        7,
        7,
        15,
        65536,
        0,
        9,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        3,
        6,
        512,
        0,
        4,
        1,
        17,
        2,
        0,
        2,
        2,
        6,
        512,
        0,
        3,
        5,
        12,
        0,
        0,
        5,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        1,
        12,
        4,
        45,
        32768,
        0,
        5,
        1,
        11,
        0,
        0,
        2,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        8,
        65792,
        0,
        8,
        1,
        17,
        256,
        3,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        65794,
        0,
        4,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        5,
        12,
        2,
        0,
        7,
        4,
        27,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        6,
        8,
        172040,
        0,
        7,
        5,
        12,
        0,
        0,
        5,
        1,
        11,
        0,
        0,
        1,
        9,
        8,
        401416,
        1,
        8,
        4,
        45,
        32768,
        3,
        4,
        3,
        6,
        0,
        0,
        4,
        2,
        6,
        0,
        0,
        3,
        7,
        8,
        65794,
        0,
        8,
        3,
        6,
        0,
        0,
        4,
        4,
        45,
        32770,
        0,
        6,
        5,
        12,
        2,
        0,
        7,
        4,
        6,
        0,
        0,
        5,
        5,
        5,
        8200,
        0,
        6,
        3,
        27,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        46,
        0,
        1,
        8,
        4,
        45,
        32768,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        6,
        8,
        172040,
        0,
        7,
        5,
        12,
        0,
        0,
        5,
        1,
        11,
        0,
        0,
        1,
        6,
        8,
        401416,
        0,
        8,
        1,
        11,
        0,
        0,
        1,
        9,
        8,
        401416,
        1,
        8,
        4,
        45,
        32768,
        1,
        8,
        162,
        0,
        0,
        4,
        0,
        4,
        6,
        0,
        0,
        5,
        3,
        9,
        8200,
        0,
        3,
        2,
        11,
        0,
        0,
        2,
        7,
        5,
        8200,
        0,
        8,
        3,
        6,
        0,
        0,
        4,
        7,
        15,
        65536,
        1,
        4,
        2,
        6,
        0,
        0,
        3,
        3,
        8,
        393218,
        0,
        5,
        4,
        45,
        131074,
        0,
        6,
        1,
        12,
        163842,
        0,
        4,
        3,
        6,
        0,
        0,
        4,
        3,
        9,
        8200,
        0,
        3,
        2,
        11,
        0,
        0,
        2,
        9,
        15,
        8200,
        0,
        10,
        2,
        40,
        0,
        0,
        5,
        2,
        11,
        0,
        0,
        3,
        3,
        9,
        8200,
        0,
        3,
        2,
        11,
        0,
        0,
        2,
        6,
        48,
        8200,
        1,
        8,
        7,
        7,
        8200,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        1,
        14,
        16384,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        14,
        16384,
        0,
        3,
        4,
        45,
        147456,
        0,
        4,
        1,
        11,
        16384,
        0,
        1,
        6,
        13,
        16384,
        0,
        7,
        1,
        11,
        512,
        1,
        8,
        7,
        7,
        8200,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        1,
        14,
        16384,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        2,
        14,
        16384,
        0,
        4,
        3,
        14,
        16384,
        0,
        3,
        1,
        11,
        16384,
        0,
        1,
        6,
        8,
        155656,
        0,
        7,
        4,
        45,
        147456,
        0,
        4,
        1,
        11,
        16384,
        0,
        1,
        7,
        13,
        16384,
        0,
        8,
        2,
        6,
        16384,
        0,
        3,
        5,
        27,
        16384,
        0,
        7,
        1,
        11,
        512,
        2,
        8,
        2,
        6,
        512,
        0,
        3,
        1,
        11,
        0,
        0,
        1,
        4,
        45,
        131072,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        8,
        8,
        139272,
        1,
        12,
        7,
        7,
        8200,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        42,
        14,
        16384,
        0,
        43,
        1,
        11,
        512,
        1,
        12,
        5,
        7,
        8200,
        0,
        5,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        20,
        14,
        16384,
        0,
        21,
        1,
        11,
        512,
        1,
        12,
        3,
        6,
        512,
        0,
        5,
        5,
        17,
        2,
        0,
        7,
        1,
        17,
        131074,
        0,
        3,
        2,
        6,
        512,
        0,
        3,
        4,
        45,
        131072,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        4,
        8,
        139272,
        0,
        6,
        1,
        11,
        0,
        0,
        1,
        9,
        8,
        270600,
        1,
        16,
        5,
        7,
        8200,
        0,
        5,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        1,
        14,
        16384,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        14,
        16384,
        0,
        3,
        1,
        17,
        147456,
        0,
        2,
        1,
        11,
        512,
        2,
        16,
        2,
        6,
        512,
        0,
        3,
        5,
        17,
        0,
        0,
        6,
        2,
        11,
        0,
        0,
        3,
        4,
        45,
        131072,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        7,
        13,
        0,
        0,
        7,
        1,
        11,
        0,
        0,
        1,
        3,
        8,
        139272,
        0,
        6,
        1,
        11,
        0,
        0,
        2,
        1,
        10,
        0,
        1,
        20,
        5,
        7,
        8200,
        0,
        5,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        4,
        14,
        16384,
        0,
        5,
        1,
        11,
        512,
        3,
        12,
        7,
        7,
        8200,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        3,
        14,
        16384,
        0,
        4,
        1,
        11,
        512,
        1,
        12,
        7,
        7,
        8200,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        2,
        1,
        11,
        512,
        3,
        8,
        3,
        6,
        512,
        0,
        4,
        1,
        17,
        131074,
        0,
        2,
        2,
        6,
        512,
        0,
        3,
        1,
        11,
        0,
        0,
        1,
        4,
        45,
        131072,
        0,
        4,
        1,
        11,
        0,
        0,
        1,
        8,
        13,
        0,
        1,
        12,
        7,
        7,
        8200,
        0,
        7,
        1,
        7,
        0,
        0,
        2,
        1,
        12,
        180224,
        0,
        3,
        1,
        14,
        16384,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        37,
        0,
        0,
        1,
        1,
        14,
        16384,
        0,
        3,
        1,
        17,
        147456,
        0,
        2,
        1,
        11,
        512,
        3,
        8,
        2,
        2,
        8200
    ]
}


[Trace - 4:41:02 PM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs",
    "diagnostics": [
        {
            "range": {
                "start": {
                    "line": 12,
                    "character": 11
                },
                "end": {
                    "line": 12,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "associated function `new` is never used\n`#[warn(dead_code)]` on by default",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `new` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:13:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(source: String) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 21,
                    "character": 11
                },
                "end": {
                    "line": 21,
                    "character": 18
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `message` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `message` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:22:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn message(mut self, msg: impl AsRef<str>) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 26,
                    "character": 11
                },
                "end": {
                    "line": 26,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `pos` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `pos` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:27:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn pos(mut self, pos: u64) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 33,
                    "character": 11
                },
                "end": {
                    "line": 33,
                    "character": 16
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `merge` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `merge` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:34:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn merge(mut self, other: Options) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 41,
                    "character": 11
                },
                "end": {
                    "line": 41,
                    "character": 14
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `add` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `add` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:42:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add(mut self, value: char) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"
            }
        },
        {
            "range": {
                "start": {
                    "line": 46,
                    "character": 11
                },
                "end": {
                    "line": 46,
                    "character": 18
                }
            },
            "severity": 2,
            "code": "dead_code",
            "source": "rustc",
            "message": "method `add_str` is never used",
            "tags": [
                1
            ],
            "data": {
                "rendered": "\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `add_str` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:47:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add_str(mut self, value: impl AsRef<str>) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"
            }
        }
    ],
    "version": 1
}


[Trace - 4:41:02 PM] Received response 'textDocument/codeAction - (7)' in 3139ms.
Result: []


[Trace - 4:41:02 PM] Sending request 'textDocument/codeAction - (10)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "range": {
        "start": {
            "line": 29,
            "character": 8
        },
        "end": {
            "line": 29,
            "character": 8
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 4:41:02 PM] Received response 'textDocument/codeAction - (10)' in 2ms.
Result: []


[Trace - 4:41:04 PM] Sending request 'textDocument/semanticTokens/full/delta - (11)'.
Params: {
    "textDocument": {
        "uri": "file:///tmp/CES.2wjciAhRCeZf/src/test.rs"
    },
    "previousResultId": "1"
}


[Trace - 4:41:04 PM] Received response 'textDocument/semanticTokens/full/delta - (11)' in 4ms.
Result: {
    "resultId": "2",
    "edits": []
}

